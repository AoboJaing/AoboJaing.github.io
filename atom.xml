<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[AoboSir 博客]]></title>
  <link href="http://aobojaing.github.io/atom.xml" rel="self"/>
  <link href="http://aobojaing.github.io/"/>
  <updated>2017-02-21T04:08:30+08:00</updated>
  <id>http://aobojaing.github.io/</id>
  <author>
    <name><![CDATA[Aobo Jaing]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[解决 -bash: Catin_make: Command Not Found 问题]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/21/solve-bash-catin_make-command-not-found/"/>
    <updated>2017-02-21T04:08:00+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/21/solve-bash-catin_make-command-not-found</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>当前使用的ROS 版本：Groovy</li>
</ul>


<hr />

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ubuntu@ubuntu:~/catkin_ws$ catin_make
</span><span class='line'>-bash: catin_make: command not found</span></code></pre></td></tr></table></div></figure>


<h2>问题出现的原因</h2>

<p>参考网站：<a href="http://answers.ros.org/question/212492/catkin_make-command-not-found/">http://answers.ros.org/question/212492/catkin_make-command-not-found/</a></p>

<p>先来查看当前ROS的环境变量：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat ~/.bashrc</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2017-2-21-solve-bash-catin_make-command-not-found/1482563988992.png" alt="Alt text" /></p>

<p>我们发现里面已经有<code>source /opt/ros/indigo/setup.bash</code>这行代码了。（如果没有一定要添加上。）</p>

<p>为什么还是出现问题呢。</p>

<hr />

<p>后来我才发现，出现错误的原因：</p>

<p>是因为我输错<code>catin_make</code></p>

<p>正确的命令是：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>catkin_make</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[马克飞象笔记自动转换为Octopress本地站点博客 — Python]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/21/python-Evernote-Auto-converted-to-Octopress-local-site-blog/"/>
    <updated>2017-02-21T02:16:37+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/21/python-Evernote-Auto-converted-to-Octopress-local-site-blog</id>
    <content type="html"><![CDATA[<h2>GUI-Evernote-Auto-converted-to-Octopress-local-site-blog-and-CSDN-blog</h2>

<p>[TOC]</p>

<hr />

<p><strong>开发环境：</strong></p>

<ul>
<li>Python 版本： Python3.5.0</li>
<li>PyCharm 版本：PyCharm 2016.1.4</li>
<li>Windows 10 64位 系统</li>
</ul>


<hr />

<h2>程序设计流程</h2>

<ul>
<li>用一个变量存放 <strong>Octopress</strong> 博客的文件名。比如：<code>folder_name = '2016-11-27-demo'</code></li>
<li>在与<strong>马克飞象笔记文件夹</strong>（<code>evernote_folder_name</code>）同一路径（<code>root_directory</code>）下，创建一个文件夹，取名为<code>folder_name</code>变量</li>
<li>将<strong>马克飞象笔记文件夹</strong>（<code>evernote_folder_name</code>）里面的所有图片全部复制到刚刚新创建的<code>folder_name</code> 文件夹（路径）里面。</li>
<li>将<strong>马克飞象笔记文件夹</strong>（<code>evernote_folder_name</code>）里面的笔记文件（<code>.md</code>文件），复制一份放到<code>root_directory</code>路径下，并将其名字重命名为：<code>folder_name</code>变量，并将其后缀修改为：<code>.markdown</code></li>
<li>读取<code>folder_name</code>.markdown 文件，将里面的图片链接替换为<strong>Octopress</strong>本地链接的形式</li>
<li>删除笔记里面的 第一个标题（<code># xxx</code>） 和 笔记本（<code>@(xxx)</code>）（方法：以后记马克飞象笔记，第1行是标题，第3行是 归宿笔记本。所以，我们只需要简单的将前3行删除就可。）</li>
<li>添加<strong>Octopress</strong>博客前缀</li>
<li>将最终得到的Octopress博文文件（.markdown后缀文件）保存为UTF-8无BOM编码文件</li>
<li>之前创建文件夹<code>folder</code>，现在加一个条件：如果文件夹已经存在，则不用创建</li>
<li>自动检测这个博客是：仅仅一个文件（<code>.md</code>），还是一个文件夹（就是检测这个博文里面有没有图片）</li>
<li>给定马克飞象笔记文件（<code>.md</code>文件）路径，自动获取<code>root_directory</code>路径</li>
<li>自动检测这个博客是：仅仅一个文件（<code>.md</code>），还是一个文件夹 和 给定马克飞象笔记文件（<code>.md</code>文件）路径，自动获取<code>root_directory</code>路径 和 <code>evernote_folder_name</code>名字 的代码如下：</li>
<li>如果马克飞象笔记只是一个文件，我们就不进行创建文件夹、复制图片和文件内图片链接的修改的操作</li>
<li>将整个<code>evernoteToOctopressBlog.py</code>封装成一个类:<code>EvernoteToOctopressBlog</code></li>
<li>将<code>evernoteToOctopressBlog.py</code>文件写成一个工具（命令行工具），可以向里面传入命令行参数</li>
<li>基本完成了</li>
</ul>


<p>这样，程序的功能就都完成了。</p>

<h2>Python 创建文件夹</h2>

<p>参考网站：</p>

<ul>
<li><a href="http://www.qttc.net/201209207.html">Python创建目录文件夹</a></li>
<li><a href="http://www.cnblogs.com/zhoujie/archive/2013/04/10/python7.html">python学习笔记（七）——文件和目录操作</a></li>
</ul>


<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'>
</span><span class='line'><span class="n">folder_name</span> <span class="o">=</span> <span class="s">&#39;2016-11-27-demo&#39;</span>
</span><span class='line'><span class="n">root_directory</span> <span class="o">=</span> <span class="s">&#39;D:/WorkSpace/test_ws/&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">root_directory</span><span class="o">+</span><span class="n">folder_name</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>注意：如果想要创建的文件夹是已经存在的，那么执行上面的程序会出现下面的错误：<code>FileExistsError: [WinError 183] 当文件已存在时，无法创建该文件。</code></p></blockquote>

<p>所以这段代码容易出现错误：如果文件夹已存在或者文件夹名中有不允许使用的字符时，<code>os.mkdir()</code>函数都会执行失败。所以，这段代码需要进行异常处理：</p>

<p>参考网站：<a href="http://www.runoob.com/python/python-exceptions.html">Python 异常处理</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">root_directory</span><span class="o">+</span><span class="n">folder_name</span><span class="p">)</span>
</span><span class='line'><span class="k">except</span> <span class="ne">OSError</span><span class="p">:</span>
</span><span class='line'>    <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样，在运行程序的时候就不会再出现错误了。但是当你给定的文件名中有非法字符时，创建文件夹是不会成功的，但是程序不会报错。</p>

<hr />

<h2>Python 复制图片</h2>

<p>参考网站：</p>

<ul>
<li><a href="https://www.zhukun.net/archives/6326">python中文件的复制</a></li>
<li><a href="http://www.jb51.net/article/17921.htm">dos 文件复制 copy命令</a></li>
</ul>


<p>将<strong>马克飞象笔记文件夹</strong>里面的所有图片全部复制到刚刚新创建的<code>folder_name</code> 文件夹（路径）里面。</p>

<blockquote><p>python自带的第三方库：<strong>shutil</strong> 可以实现文件的复制操作，但是它只能一次复制一个文件。所以我们不使用这个<strong>shutil</strong>模块来做复制文件的操作。</p></blockquote>

<p>我们使用python调用Windows系统DOS命令行里面的<strong>copy</strong>工具来继续文件的复制。</p>

<p>下面的代码可以将<strong>马克飞象笔记文件夹</strong>里面的所有图片复制到<code>folder_name</code>文件夹里面：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">folder_name</span> <span class="o">=</span> <span class="s">&#39;2016-11-27-demo&#39;</span>
</span><span class='line'><span class="n">evernote_folder_name</span> <span class="o">=</span> <span class="s">&#39;Python3 大型网络爬虫实战 003 — scrapy 大型静态图片网站爬虫项目实战 — 实战：爬取 169美女图片网 高清图片 — Over — 2016年11月26日 星期六&#39;</span>
</span><span class='line'><span class="n">root_directory</span> <span class="o">=</span> <span class="s">r&#39;D:\WorkSpace\test_ws</span><span class="se">\\</span><span class="s">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">root_directory</span><span class="o">+</span><span class="n">folder_name</span><span class="p">)</span>
</span><span class='line'><span class="k">except</span> <span class="ne">OSError</span> <span class="k">as</span> <span class="n">err</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&#39;File error: &#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">err</span><span class="p">))</span>
</span><span class='line'>    <span class="k">pass</span>
</span><span class='line'>
</span><span class='line'><span class="n">copy_img_command</span> <span class="o">=</span> <span class="s">&#39;copy &quot;&#39;</span> <span class="o">+</span> <span class="n">root_directory</span> <span class="o">+</span> <span class="n">evernote_folder_name</span> <span class="o">+</span> <span class="s">r&#39;\*.png&quot; &quot;&#39;</span> <span class="o">+</span> <span class="n">root_directory</span> <span class="o">+</span> <span class="n">folder_name</span> <span class="o">+</span> <span class="s">r&#39;\&quot;&#39;</span>
</span><span class='line'><span class="c"># print(copy_img_command)</span>
</span><span class='line'><span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="n">copy_img_command</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>其实，代码中的 <code>os.system(copy_img_command)</code> 这段代码就是等价于：在 <strong>DOS</strong> 窗口执行：<code>copy "D:\WorkSpace\test_ws\\Python3 大型网络爬虫实战 003 — scrapy 大型静态图片网站爬虫项目实战 — 实战：爬取 169美女图片网 高清图片 — Over — 2016年11月26日 星期六\*.png" "D:\WorkSpace\test_ws\\2016-11-27-demo\"</code>  这个指令。</p>

<hr />

<h2>经验：我发现了两件事：</h2>

<p>1 . 在<strong>DOS</strong> 里面，执行下面的命令，有的是对的，有的是错的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># Succesfull</span>
</span><span class='line'><span class="n">copy</span> <span class="s">&quot;D:\WorkSpace</span><span class="se">\t</span><span class="s">est_ws\Python3 大型网络爬虫实战 003 — scrapy 大型静态图片网站爬虫项目实战 — 实战：爬取 169美女图片网 高清图片 — Over — 2016年11月26日 星期六\*.png&quot;</span> <span class="s">&quot;D:\WorkSpace</span><span class="se">\t</span><span class="s">est_ws</span><span class="se">\201</span><span class="s">6-11-27-demo</span><span class="se">\&quot;</span>
</span><span class='line'><span class="c"># Succesfull</span>
</span><span class='line'><span class="n">copy</span> <span class="s">&quot;D:\WorkSpace</span><span class="se">\t</span><span class="s">est_ws</span><span class="se">\\</span><span class="s">Python3 大型网络爬虫实战 003 — scrapy 大型静态图片网站爬虫项目实战 — 实战：爬取 169美女图片网 高清图片 — Over — 2016年11月26日 星期六\*.png&quot;</span> <span class="s">&quot;D:\WorkSpace</span><span class="se">\t</span><span class="s">est_ws</span><span class="se">\\</span><span class="s">2016-11-27-demo</span><span class="se">\&quot;</span>
</span><span class='line'><span class="c"># error</span>
</span><span class='line'><span class="n">copy</span> <span class="s">&quot;D:/WorkSpace/test_ws/Python3 大型网络爬虫实战 003 — scrapy 大型静态图片网站爬虫项目实战 — 实战：爬取 169美女图片网 高清图片 — Over — 2016年11月26日 星期六/*.png&quot;</span> <span class="s">&quot;D:/WorkSpace/test_ws/2016-11-27-demo/&quot;</span>
</span><span class='line'><span class="c"># error</span>
</span><span class='line'><span class="n">copy</span> <span class="s">&quot;D://WorkSpace//test_ws//Python3 大型网络爬虫实战 003 — scrapy 大型静态图片网站爬虫项目实战 — 实战：爬取 169美女图片网 高清图片 — Over — 2016年11月26日 星期六//*.png&quot;</span> <span class="s">&quot;D://WorkSpace//test_ws//2016-11-27-demo//&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>总结：</p>

<ol>
<li><code>\</code>是一个特殊字符，它不能再字符串中正常的显示，如果必须显示，就这样写：<code>\\</code></li>
<li><strong>DOS</strong> 命令里面指定文件路径时，只能使用<code>\</code>，不能使用<code>/</code> 和 <code>//</code> ，使用这两个都是错的，都会导致 <strong>DOS</strong>找不到指定的文件路径</li>
<li>在<strong>DOS</strong> 命令里面，指定文件路径的 <code>\</code> ，你写成 <code>\\</code> 或者 <code>\\\</code> 或者 <code>\\\\\\</code> &hellip; 对是可以正常执行的，不会出现错误。</li>
</ol>


<hr />

<p>2 . 同时，我发现：</p>

<p>python 的字符串前面加上<code>r</code>，说明这个字符串是<code>raw string</code>，即无需转义的字符串，意思就是这个字符串里面有什么就是什么。</p>

<p>但是我发现了python的一个bug：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># error</span>
</span><span class='line'><span class="nb">str</span> <span class="o">=</span> <span class="s">r&#39;D:\WorkSpace\test_ws</span><span class="se">\&#39;</span>
</span><span class='line'><span class="c"># 经验：就算是在字符串前面加上了 r ，字符串最后一个字符也不能是 /</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># succes</span>
</span><span class='line'><span class="nb">str</span> <span class="o">=</span> <span class="s">r&#39;D:\WorkSpace\test_ws</span><span class="se">\\</span><span class="s">&#39;</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>
</span><span class='line'><span class="c"># 输出：D:\WorkSpace\test_ws\\</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># succes</span>
</span><span class='line'><span class="nb">str</span> <span class="o">=</span> <span class="s">&#39;D:\WorkSpace</span><span class="se">\t</span><span class="s">est_ws</span><span class="se">\\</span><span class="s">&#39;</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>
</span><span class='line'><span class="c"># 输出：D:\WorkSpace   est_ws\</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Python 复制文件，并对副本文件重命名</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">copy_file_command</span> <span class="o">=</span> <span class="s">&#39;copy &quot;&#39;</span> <span class="o">+</span> <span class="n">root_directory</span> <span class="o">+</span> <span class="n">evernote_folder_name</span> <span class="o">+</span> <span class="s">r&#39;</span><span class="se">\\</span><span class="s">&#39;</span> <span class="o">+</span> <span class="n">evernote_folder_name</span> <span class="o">+</span> <span class="s">&#39;.md&quot; &quot;&#39;</span> <span class="o">+</span> <span class="n">root_directory</span> <span class="o">+</span> <span class="n">folder_name</span> <span class="o">+</span> <span class="s">&#39;.markdown&quot;&#39;</span>
</span><span class='line'><span class="c"># print(copy_file_command)</span>
</span><span class='line'><span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="n">copy_file_command</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>打开马克笔记的拷贝文件（.markdown后缀）</h2>

<p>参考网站：</p>

<ul>
<li><a href="https://blog.linuxeye.com/365.html">Python文件处理 open()</a></li>
<li><a href="https://my.oschina.net/kenblog/blog/599737">Python3 读取文件出错： &lsquo;gbk&rsquo; codec can&rsquo;t decode byte 0x8</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">evernote_file_path</span> <span class="o">=</span> <span class="n">root_directory</span> <span class="o">+</span> <span class="n">folder_name</span> <span class="o">+</span> <span class="s">&#39;.markdown&#39;</span>
</span><span class='line'><span class="n">evernote_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">evernote_file_path</span><span class="p">,</span> <span class="s">&#39;rt&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&#39;utf-8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">evernote_data</span> <span class="o">=</span> <span class="n">evernote_file</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'><span class="n">evernote_file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">evernote_data</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>替换图片的链接</h2>

<p>使用正则表达式先提取出原来的图片链接。再将这个链接修改为<strong>Octopress</strong>本地形式的链接。最后进行替换。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">image_local_path</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">&#39;!\[Alt text\]\((.*?)\)&#39;</span><span class="p">,</span> <span class="n">evernote_data</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">S</span><span class="p">)</span>
</span><span class='line'><span class="c"># print(image_local_path)</span>
</span><span class='line'><span class="n">image_relative_path</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">image_local_path</span><span class="p">)):</span>
</span><span class='line'>    <span class="n">image_relative_path</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;/images/&#39;</span> <span class="o">+</span> <span class="n">folder_name</span> <span class="o">+</span> <span class="n">image_local_path</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">:])</span>
</span><span class='line'>    <span class="c"># print(image_relative_path[i])</span>
</span><span class='line'>    <span class="n">evernote_data</span> <span class="o">=</span> <span class="n">evernote_data</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">image_local_path</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">image_relative_path</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">evernote_data</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>删除笔记里面的 第一个标题（<code># xxx</code>） 和 笔记本（<code>@(xxx)</code>）</h2>

<p>我是这样设计的，我们今后写马克笔记定一个规则：</p>

<p>以后记马克飞象笔记，第1行是标题，第3行是 归宿笔记本。所以，我们只需要简单的将前3行删除就可。</p>

<p>参考网站：</p>

<ul>
<li><a href="http://www.cnblogs.com/huangcong/archive/2011/08/29/2158268.html">Python 字符串操作（string替换、删除、截取、复制、连接、比较、查找、包含、大小写转换、分割等）</a></li>
<li><a href="http://stackoverflow.com/questions/13227970/how-to-effectively-remove-a-line-in-the-middle-of-a-large-file">How to effectively remove a line in the middle of a large file?</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">evernote_data_list</span> <span class="o">=</span> <span class="n">evernote_data</span><span class="o">.</span><span class="n">splitlines</span><span class="p">()</span>
</span><span class='line'><span class="n">octopress_file_path</span> <span class="o">=</span> <span class="n">root_directory</span> <span class="o">+</span> <span class="n">folder_name</span> <span class="o">+</span> <span class="s">&#39;.markdown&#39;</span>  <span class="c"># r&#39;F:\octopress\source\_posts\\&#39; + folder_name + &#39;.markdown&#39;</span>
</span><span class='line'><span class="n">octopress_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">octopress_file_path</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">evernote_data_list</span><span class="p">)):</span>
</span><span class='line'>    <span class="n">octopress_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">evernote_data_list</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">octopress_file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'><span class="n">octopress_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">octopress_file_path</span><span class="p">,</span> <span class="s">&#39;r&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">octopress_file</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span><span class='line'><span class="n">octopress_file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-21-python-Evernote-Auto-converted-to-Octopress-local-site-blog/1480294281304.png" alt="Alt text" /></p>

<hr />

<h2>添加<strong>Octopress</strong>博客前缀</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">addOctopressBlogPrefix</span><span class="p">(</span><span class="n">octopress_file</span><span class="p">,</span> <span class="n">title</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">categories</span><span class="p">,</span> <span class="n">tags</span><span class="p">):</span>
</span><span class='line'>    <span class="n">octopress_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;---&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">octopress_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;layout: post&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">octopress_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;title: &quot;&#39;</span> <span class="o">+</span> <span class="n">title</span> <span class="o">+</span> <span class="s">&#39;&quot;&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">octopress_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;date: &#39;</span> <span class="o">+</span> <span class="n">data</span> <span class="o">+</span> <span class="s">&#39; +0800&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">octopress_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;comments: true&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">octopress_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;sharing: true&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">octopress_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;categories: [&#39;</span> <span class="o">+</span> <span class="n">categories</span> <span class="o">+</span> <span class="s">&#39;]&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">octopress_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;tags: [&#39;</span> <span class="o">+</span> <span class="n">tags</span> <span class="o">+</span> <span class="s">&#39;]&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">octopress_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;---&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">octopress_file</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用这个<code>addOctopressBlogPrefix()</code>函数：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-21-python-Evernote-Auto-converted-to-Octopress-local-site-blog/1480293276868.png" alt="Alt text" /></p>

<p>这个系统时间是这样得到的：（<a href="http://www.runoob.com/python/python-date-time.html">参考网站</a>）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'><span class="c"># 格式化成2016-03-20 11:45:39形式</span>
</span><span class='line'><span class="n">time_data</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s">&quot;%Y-%m-</span><span class="si">%d</span><span class="s"> %H:%M:%S&quot;</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">localtime</span><span class="p">())</span>
</span><span class='line'><span class="c"># print(time_data)</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>将最终得到的Octopress博文文件（.markdown后缀文件）保存为UTF-8无BOM编码文件</h2>

<p>如果现在将这个文件和图片转移到Octopress站点路径里面，然后执行<code>rake generate</code>命令会出现下面这个错误：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-21-python-Evernote-Auto-converted-to-Octopress-local-site-blog/1480365808617.png" alt="Alt text" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">Error</span> <span class="n">reading</span> <span class="nb">file</span> <span class="n">F</span><span class="p">:</span><span class="o">/</span><span class="n">octopress</span><span class="o">/</span><span class="n">source</span><span class="o">/</span><span class="n">_posts</span><span class="o">/</span><span class="n">xxxx</span><span class="o">.</span><span class="n">markdown</span><span class="p">:</span> <span class="n">invalid</span> <span class="n">byte</span> <span class="n">sequence</span> <span class="ow">in</span> <span class="n">UTF</span><span class="o">-</span><span class="mi">8</span>
</span><span class='line'>  <span class="n">Liquid</span> <span class="ne">Exception</span><span class="p">:</span> <span class="n">invalid</span> <span class="n">byte</span> <span class="n">sequence</span> <span class="ow">in</span> <span class="n">UTF</span><span class="o">-</span><span class="mi">8</span> <span class="ow">in</span> <span class="n">_posts</span><span class="o">/</span><span class="n">xxxx</span><span class="o">.</span><span class="n">markdown</span><span class="o">/</span><span class="c">#excerpt</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个错误时说：这个文件<code>xxxx.markdown</code>它的编码不是标准的UTF-8无BOM编码方式编辑的文件。</p>

<p>所以，为了解决这个问题，我们需要将输出的<strong>Octopress</strong>博文文件（<code>.markdown</code>后缀文件）在保存的时候将其转换为以Utf-8无BOM编码方式编码的文件。</p>

<p>其实很简单，我们只需要将下面这行代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">octopress_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">octopress_file_path</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>修改为：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">octopress_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">octopress_file_path</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&#39;utf-8&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样<code>octopress_file</code>文件就是以Utf-8无BOM编码方式编码的文件。</p>

<blockquote><p>我们也看到了，其实不是将<code>octopress_file</code>保存为以Utf-8无BOM编码方式编码的文件，而是创建这个一个以Utf-8无BOM编码方式编码的文件 <code>octopress_file</code>。</p></blockquote>

<p>虽然已经成功的将最终得到的Octopress博文文件（.markdown后缀文件）保存为UTF-8无BOM编码文件。但是在执行 <code>print(octopress_file.read())</code> 这句代码的时候，出现了<code>UnicodeDecodeError</code> 错误，如下。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-21-python-Evernote-Auto-converted-to-Octopress-local-site-blog/1480367555470.png" alt="Alt text" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">octopress_file</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span><span class='line'><span class="ne">UnicodeDecodeError</span><span class="p">:</span> <span class="s">&#39;gbk&#39;</span> <span class="n">codec</span> <span class="n">can</span><span class="s">&#39;t decode byte 0x8b in position 75: illegal multibyte sequence</span>
</span></code></pre></td></tr></table></div></figure>


<p>哦，这个问题也非常容易解决，可以说现在不在是一个难问题了。</p>

<p>解决办法：将<code>print(octopress_file.read())</code>这行代码的上一行：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">octopress_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">octopress_file_path</span><span class="p">,</span> <span class="s">&#39;r&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>修改为：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">octopress_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">octopress_file_path</span><span class="p">,</span> <span class="s">&#39;r&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&#39;utf-8&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>解释：因为 <code>octopress_file</code> 已经是UTF-8无BOM编码的文件了，所以读取它的时候，也要将编码方式设为：<code>UTF-8</code> 才行。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-21-python-Evernote-Auto-converted-to-Octopress-local-site-blog/1480369389414.png" alt="Alt text" /></p>

<hr />

<h2>搞定</h2>

<p>最后贴上当前最新的完整代码(v1.0)：<a href="https://github.com/AoboJaing/Evernote_Automatic_format_conversion/tree/v1.0">https://github.com/AoboJaing/Evernote_Automatic_format_conversion/tree/v1.0</a></p>

<p>运行结果：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-21-python-Evernote-Auto-converted-to-Octopress-local-site-blog/1480294160448.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-21-python-Evernote-Auto-converted-to-Octopress-local-site-blog/1480294179617.png" alt="Alt text" /></p>

<hr />

<h2>之前创建文件夹<code>folder</code>，现在加一个条件：如果文件夹已经存在，则不用创建</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># 在root_directory路径里面创建一个名为 folder_name 的文件夹。（如果文件夹已经存在，则不用创建）</span>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">root_directory</span><span class="o">+</span><span class="n">folder_name</span><span class="p">)</span><span class="o">==</span><span class="bp">False</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&#39;Create a folder:&#39;</span> <span class="o">+</span> <span class="n">root_directory</span><span class="o">+</span><span class="n">folder_name</span><span class="p">)</span>
</span><span class='line'>        <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">root_directory</span><span class="o">+</span><span class="n">folder_name</span><span class="p">)</span>
</span><span class='line'>        <span class="k">pass</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&#39;The folder &quot;&#39;</span> <span class="o">+</span> <span class="n">root_directory</span><span class="o">+</span><span class="n">folder_name</span> <span class="o">+</span> <span class="s">&#39;&quot; was already exist. Not need to create again.&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">except</span> <span class="ne">OSError</span> <span class="k">as</span> <span class="n">err</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&#39;File error: &#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">err</span><span class="p">))</span>
</span><span class='line'>    <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>自动检测这个博客是：仅仅一个文件（<code>.md</code>），还是一个文件夹（就是检测这个博文里面有没有图片）</h2>

<p>参考博客：<a href="http://www.aobosir.com/blog/2016/12/01/python-string-split/">Learning Python 025 字符串分割</a></p>

<p>Demo 程序：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="n">path</span> <span class="o">=</span> <span class="s">r&#39;D:\WorkSpace\test_ws\Git(GitHub) 002 如何在GitHub For Windows 软件上为代码库创建一个版本标签 — Ongoing — 2016年12月1日 星期四\Git(GitHub) 002 如何在GitHub For Windows 软件上为代码库创建一个版本标签 — Ongoing — 2016年12月1日 星期四.md&#39;</span>
</span><span class='line'><span class="n">path2</span> <span class="o">=</span> <span class="s">r&#39;D:\WorkSpace\test_ws\Git(GitHub) 002 如何在GitHub For Windows 软件上为代码库创建一个版本标签 — Ongoing — 2016年12月1日 星期四.md&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">l1</span> <span class="o">=</span> <span class="n">path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\\</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c"># l1 = path2.split(&#39;\\&#39;)</span>
</span><span class='line'><span class="c"># print(l1)</span>
</span><span class='line'><span class="c"># print(l1[-1])</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">l1</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">])</span>
</span><span class='line'><span class="n">l2</span> <span class="o">=</span> <span class="n">l1</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;.&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c"># print(l2)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">l2</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'><span class="n">same</span> <span class="o">=</span> <span class="n">l1</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span><span class="o">==</span><span class="n">l2</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">same</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行输出：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">Git</span><span class="p">(</span><span class="n">GitHub</span><span class="p">)</span> <span class="mo">002</span> <span class="err">如何在</span><span class="n">GitHub</span> <span class="n">For</span> <span class="n">Windows</span> <span class="err">软件上为代码库创建一个版本标签</span> <span class="err">—</span> <span class="n">Ongoing</span> <span class="err">—</span> <span class="mi">2016</span><span class="err">年</span><span class="mi">12</span><span class="err">月</span><span class="mi">1</span><span class="err">日</span> <span class="err">星期四</span>
</span><span class='line'><span class="n">Git</span><span class="p">(</span><span class="n">GitHub</span><span class="p">)</span> <span class="mo">002</span> <span class="err">如何在</span><span class="n">GitHub</span> <span class="n">For</span> <span class="n">Windows</span> <span class="err">软件上为代码库创建一个版本标签</span> <span class="err">—</span> <span class="n">Ongoing</span> <span class="err">—</span> <span class="mi">2016</span><span class="err">年</span><span class="mi">12</span><span class="err">月</span><span class="mi">1</span><span class="err">日</span> <span class="err">星期四</span>
</span><span class='line'><span class="bp">True</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>给定马克飞象笔记文件（<code>.md</code>文件）路径，自动获取<code>root_directory</code>路径</h2>

<p>Demo 程序：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># -!- coding: utf-8 -!-</span>
</span><span class='line'>
</span><span class='line'><span class="n">path</span> <span class="o">=</span> <span class="s">r&#39;D:\WorkSpace\test_ws\Git(GitHub) 002 如何在GitHub For Windows 软件上为代码库创建一个版本标签 — Ongoing — 2016年12月1日 星期四\Git(GitHub) 002 如何在GitHub For Windows 软件上为代码库创建一个版本标签 — Ongoing — 2016年12月1日 星期四.md&#39;</span>
</span><span class='line'><span class="n">delimiter</span> <span class="o">=</span> <span class="s">&#39;</span><span class="se">\\</span><span class="s">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">evernote_is_folder</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="k">if</span> <span class="n">evernote_is_folder</span><span class="p">:</span>
</span><span class='line'>    <span class="n">a</span><span class="o">=-</span><span class="mi">2</span>
</span><span class='line'>
</span><span class='line'><span class="n">mylist</span> <span class="o">=</span> <span class="n">path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">delimiter</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">delimiter</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">mylist</span><span class="p">[:</span><span class="n">a</span><span class="p">]))</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>自动检测这个博客是：仅仅一个文件（<code>.md</code>），还是一个文件夹 和 给定马克飞象笔记文件（<code>.md</code>文件）路径，自动获取<code>root_directory</code>路径 和 <code>evernote_folder_name</code>名字 的代码如下：</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># 自动检测这个博客是：仅仅一个文件（`.md`），还是一个文件夹</span>
</span><span class='line'><span class="c"># 给定马克飞象笔记文件（`.md`文件）路径，自动获取`root_directory`路径 和 `evernote_folder_name`名字</span>
</span><span class='line'><span class="n">evernote_file_path</span> <span class="o">=</span> <span class="s">r&#39;D:\WorkSpace\test_ws\Git(GitHub) 002 如何在GitHub For Windows 软件上为代码库创建一个版本标签 — Ongoing — 2016年12月1日 星期四\Git(GitHub) 002 如何在GitHub For Windows 软件上为代码库创建一个版本标签 — Ongoing — 2016年12月1日 星期四.md&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">delimiter</span> <span class="o">=</span> <span class="s">&#39;</span><span class="se">\\</span><span class="s">&#39;</span>
</span><span class='line'><span class="n">l1</span> <span class="o">=</span> <span class="n">evernote_file_path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">delimiter</span><span class="p">)</span>
</span><span class='line'><span class="c"># print(l1[-2])</span>
</span><span class='line'><span class="n">l2</span> <span class="o">=</span> <span class="n">l1</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;.&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c"># print(l2[0])</span>
</span><span class='line'><span class="n">evernote_is_folder</span> <span class="o">=</span> <span class="n">l1</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span><span class="o">==</span><span class="n">l2</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="n">str_temp</span><span class="o">=</span><span class="s">&#39;文件&#39;</span>
</span><span class='line'><span class="k">if</span> <span class="n">evernote_is_folder</span><span class="p">:</span>
</span><span class='line'>    <span class="n">a</span><span class="o">=-</span><span class="mi">2</span>
</span><span class='line'>    <span class="n">str_temp</span><span class="o">=</span><span class="s">&#39;文件夹&#39;</span>
</span><span class='line'>    <span class="k">pass</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&#39;当前处理的这个马克飞象笔记是一个&#39;</span> <span class="o">+</span> <span class="n">str_temp</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 马克飞象笔记的文件名</span>
</span><span class='line'><span class="n">evernote_folder_name</span> <span class="o">=</span> <span class="n">l2</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'><span class="c"># 马克飞象笔记文件夹所在路径</span>
</span><span class='line'><span class="n">root_directory</span> <span class="o">=</span> <span class="n">delimiter</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">l1</span><span class="p">[:</span><span class="n">a</span><span class="p">])</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\\</span><span class="s">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">evernote_folder_name</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">root_directory</span><span class="p">)</span>
</span><span class='line'><span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>如果马克飞象笔记只是一个文件，我们就不进行创建文件夹、复制图片和文件内图片链接的修改的操作</h2>

<p>很简单，我们只需要在创建文件夹和复制图片的操作的代码执行前加一个条件。满足条件就执行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">if</span> <span class="n">evernote_is_folder</span><span class="p">:</span> <span class="c"># 执行以下代码的前提是：马克飞象笔记是一个文件夹</span>
</span></code></pre></td></tr></table></div></figure>


<p>代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># 在root_directory路径里面创建一个名为 folder_name 的文件夹。（如果文件夹已经存在，则不用创建）</span>
</span><span class='line'><span class="k">if</span> <span class="n">evernote_is_folder</span><span class="p">:</span> <span class="c"># 执行以下代码的前提是：马克飞象笔记是一个文件夹</span>
</span><span class='line'>    <span class="n">folder_name_exists</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">root_directory</span><span class="o">+</span><span class="n">folder_name</span><span class="p">)</span>
</span><span class='line'>    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">folder_name_exists</span><span class="o">==</span><span class="bp">False</span><span class="p">:</span>
</span><span class='line'>            <span class="k">print</span><span class="p">(</span><span class="s">&#39;Create a folder:&#39;</span> <span class="o">+</span> <span class="n">root_directory</span><span class="o">+</span><span class="n">folder_name</span><span class="p">)</span>
</span><span class='line'>            <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">root_directory</span><span class="o">+</span><span class="n">folder_name</span><span class="p">)</span>
</span><span class='line'>            <span class="k">pass</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="k">print</span><span class="p">(</span><span class="s">&#39;The folder &quot;&#39;</span> <span class="o">+</span> <span class="n">root_directory</span><span class="o">+</span><span class="n">folder_name</span> <span class="o">+</span> <span class="s">&#39;&quot; was already exist. Not need to create again.&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">except</span> <span class="ne">OSError</span> <span class="k">as</span> <span class="n">err</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&#39;File error: &#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">err</span><span class="p">))</span>
</span><span class='line'>        <span class="k">pass</span>
</span><span class='line'>    <span class="k">pass</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># 将马克飞象笔记文件夹里面的所有图片全部复制到刚刚新创建的folder_name 文件夹（路径）里面</span>
</span><span class='line'><span class="k">if</span> <span class="n">evernote_is_folder</span><span class="p">:</span> <span class="c"># 执行以下代码的前提是：马克飞象笔记是一个文件夹</span>
</span><span class='line'>    <span class="n">copy_img_command</span> <span class="o">=</span> <span class="s">&#39;copy &quot;&#39;</span> <span class="o">+</span> <span class="n">root_directory</span> <span class="o">+</span> <span class="n">evernote_folder_name</span> <span class="o">+</span> <span class="s">r&#39;\*.png&quot; &quot;&#39;</span> <span class="o">+</span> <span class="n">root_directory</span> <span class="o">+</span> <span class="n">folder_name</span> <span class="o">+</span> <span class="s">r&#39;\&quot;&#39;</span>
</span><span class='line'>    <span class="c"># print(copy_img_command)</span>
</span><span class='line'>    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="n">copy_img_command</span><span class="p">)</span>
</span><span class='line'>    <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># 将里面的图片链接替换为**Octopress**本地链接的形式</span>
</span><span class='line'><span class="k">if</span> <span class="n">evernote_is_folder</span><span class="p">:</span> <span class="c"># 执行以下代码的前提是：马克飞象笔记是一个文件夹</span>
</span><span class='line'>    <span class="n">image_local_path</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">&#39;!\[Alt text\]\((.*?)\)&#39;</span><span class="p">,</span> <span class="n">evernote_data</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">S</span><span class="p">)</span>
</span><span class='line'>    <span class="c"># print(image_local_path)</span>
</span><span class='line'>    <span class="n">image_relative_path</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">image_local_path</span><span class="p">)):</span>
</span><span class='line'>        <span class="n">image_relative_path</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;/images/&#39;</span> <span class="o">+</span> <span class="n">folder_name</span> <span class="o">+</span> <span class="n">image_local_path</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">:])</span>
</span><span class='line'>        <span class="c"># print(image_relative_path[i])</span>
</span><span class='line'>        <span class="n">evernote_data</span> <span class="o">=</span> <span class="n">evernote_data</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">image_local_path</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">image_relative_path</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>        <span class="k">pass</span>
</span><span class='line'>    <span class="c"># print(evernote_data)</span>
</span><span class='line'>    <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>当前完整的代码在这里：<a href="https://github.com/AoboJaing/Evernote_Automatic_format_conversion/tree/v1.1">https://github.com/AoboJaing/Evernote_Automatic_format_conversion/tree/v1.1</a></p>

<hr />

<h2>将整个<code>evernoteToOctopressBlog.py</code>封装成一个类:<code>EvernoteToOctopressBlog</code></h2>

<p>参考网站：<a href="http://www.aobosir.com/blog/2016/12/01/class-programming-object/">Learning Python 023 类编程</a></p>

<p>当前完整的代码在这里（v2.0）：<a href="https://github.com/AoboJaing/Evernote_Automatic_format_conversion/blob/v2.0/script/evernoteToOctopressBlog.py">https://github.com/AoboJaing/Evernote_Automatic_format_conversion/blob/v2.0/script/evernoteToOctopressBlog.py</a></p>

<hr />

<h2>将<code>evernoteToOctopressBlog.py</code>文件写成一个工具（命令行工具），可以向里面传入命令行参数</h2>

<p>参考网站：<a href="http://www.aobosir.com/blog/2016/12/02/python-get-command-line-arguments/">Learning Python 028 获取命令行参数</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">optparse</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
</span><span class='line'>    <span class="c"># 输入信息：folder_name、 evernote_file_path、octopress_title、octopress_categories、octopress_tags</span>
</span><span class='line'>    <span class="n">parser</span> <span class="o">=</span> <span class="n">optparse</span><span class="o">.</span><span class="n">OptionParser</span><span class="p">(</span><span class="s">&#39;usage%prog &#39;</span> <span class="o">+</span>\
</span><span class='line'>            <span class="s">&#39;-f &lt;folder_name&gt; -p &lt;evernote_file_path&gt; -T &lt;octopress_title&gt; -c &lt;octopress_categories&gt; -t &lt;octopress_tags&gt;&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parser</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s">&#39;-f&#39;</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s">&#39;folder_name&#39;</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="s">&#39;string&#39;</span><span class="p">,</span>\
</span><span class='line'>                      <span class="n">help</span><span class="o">=</span><span class="s">&#39;be converted Octopress blog file and images file name&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parser</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s">&#39;-p&#39;</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s">&#39;evernote_file_path&#39;</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="s">&#39;string&#39;</span><span class="p">,</span> \
</span><span class='line'>                      <span class="n">help</span><span class="o">=</span><span class="s">&#39;evernote file path&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parser</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s">&#39;-T&#39;</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s">&#39;octopress_title&#39;</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="s">&#39;string&#39;</span><span class="p">,</span> \
</span><span class='line'>                      <span class="n">help</span><span class="o">=</span><span class="s">&#39;be converted Octopress blog</span><span class="se">\&#39;</span><span class="s">s title&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parser</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s">&#39;-c&#39;</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s">&#39;octopress_categories&#39;</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="s">&#39;string&#39;</span><span class="p">,</span> \
</span><span class='line'>                      <span class="n">help</span><span class="o">=</span><span class="s">&#39;be converted Octopress blog</span><span class="se">\&#39;</span><span class="s">s categories&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parser</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s">&#39;-t&#39;</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s">&#39;octopress_tags&#39;</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="s">&#39;string&#39;</span><span class="p">,</span> \
</span><span class='line'>                      <span class="n">help</span><span class="o">=</span><span class="s">&#39;be converted Octopress blog</span><span class="se">\&#39;</span><span class="s">s tags&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">(</span><span class="n">options</span><span class="p">,</span> <span class="n">args</span><span class="p">)</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">options</span><span class="o">.</span><span class="n">folder_name</span> <span class="o">==</span> <span class="bp">None</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="n">options</span><span class="o">.</span><span class="n">evernote_file_path</span> <span class="o">==</span> <span class="bp">None</span><span class="p">)</span> <span class="o">|</span> \
</span><span class='line'>            <span class="p">(</span><span class="n">options</span><span class="o">.</span><span class="n">octopress_title</span> <span class="o">==</span> <span class="bp">None</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="n">options</span><span class="o">.</span><span class="n">octopress_categories</span> <span class="o">==</span> <span class="bp">None</span><span class="p">)</span> <span class="o">|</span> \
</span><span class='line'>            <span class="p">(</span><span class="n">options</span><span class="o">.</span><span class="n">octopress_tags</span> <span class="o">==</span> <span class="bp">None</span><span class="p">):</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">parser</span><span class="o">.</span><span class="n">usage</span><span class="p">)</span>
</span><span class='line'>        <span class="nb">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>        <span class="k">pass</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="n">folder_name</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">folder_name</span>
</span><span class='line'>        <span class="n">evernote_file_path</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">evernote_file_path</span>
</span><span class='line'>        <span class="n">octopress_title</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">octopress_title</span>
</span><span class='line'>        <span class="n">octopress_categories</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">octopress_categories</span>
</span><span class='line'>        <span class="n">octopress_tags</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">octopress_tags</span>
</span><span class='line'>        <span class="c"># print(folder_name)</span>
</span><span class='line'>        <span class="c"># print(evernote_file_path)</span>
</span><span class='line'>        <span class="c"># print(octopress_title)</span>
</span><span class='line'>        <span class="c"># print(octopress_categories)</span>
</span><span class='line'>        <span class="c"># print(octopress_tags)</span>
</span><span class='line'>        <span class="n">eTo</span> <span class="o">=</span> <span class="n">EvernoteToOctopressBlog</span><span class="p">(</span><span class="n">folder_name</span><span class="p">,</span> <span class="n">evernote_file_path</span><span class="p">,</span> <span class="n">octopress_title</span><span class="p">,</span> <span class="n">octopress_categories</span><span class="p">,</span> <span class="n">octopress_tags</span><span class="p">)</span>
</span><span class='line'>        <span class="n">eTo</span><span class="o">.</span><span class="n">autoProcess</span><span class="p">()</span>
</span><span class='line'>        <span class="k">pass</span>
</span><span class='line'>    <span class="k">pass</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">main</span><span class="p">()</span>
</span><span class='line'>    <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">D</span><span class="p">:</span>\<span class="n">WorkSpace</span>\<span class="n">python_ws</span>\<span class="n">Evernote_Automatic_format_conversion</span><span class="o">&gt;</span><span class="n">python</span> <span class="n">script</span>\<span class="n">evernoteToOctopressBlog</span><span class="o">.</span><span class="n">py</span> <span class="o">-</span><span class="n">h</span>
</span><span class='line'><span class="n">Usage</span><span class="p">:</span> <span class="n">usageevernoteToOctopressBlog</span><span class="o">.</span><span class="n">py</span> <span class="o">-</span><span class="n">f</span> <span class="o">&lt;</span><span class="n">folder_name</span><span class="o">&gt;</span> <span class="o">-</span><span class="n">p</span> <span class="o">&lt;</span><span class="n">evernote_file_path</span><span class="o">&gt;</span> <span class="o">-</span><span class="n">T</span> <span class="o">&lt;</span><span class="n">octopress_title</span><span class="o">&gt;</span> <span class="o">-</span><span class="n">c</span> <span class="o">&lt;</span><span class="n">octopress_categories</span><span class="o">&gt;</span> <span class="o">-</span><span class="n">t</span> <span class="o">&lt;</span><span class="n">octopress_tags</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">Options</span><span class="p">:</span>
</span><span class='line'>  <span class="o">-</span><span class="n">h</span><span class="p">,</span> <span class="o">--</span><span class="n">help</span>            <span class="n">show</span> <span class="n">this</span> <span class="n">help</span> <span class="n">message</span> <span class="ow">and</span> <span class="nb">exit</span>
</span><span class='line'>  <span class="o">-</span><span class="n">f</span> <span class="n">FOLDER_NAME</span>        <span class="n">be</span> <span class="n">converted</span> <span class="n">Octopress</span> <span class="n">blog</span> <span class="nb">file</span> <span class="ow">and</span> <span class="n">images</span> <span class="nb">file</span> <span class="n">name</span>
</span><span class='line'>  <span class="o">-</span><span class="n">p</span> <span class="n">EVERNOTE_FILE_PATH</span>
</span><span class='line'>                        <span class="n">evernote</span> <span class="nb">file</span> <span class="n">path</span>
</span><span class='line'>  <span class="o">-</span><span class="n">T</span> <span class="n">OCTOPRESS_TITLE</span>    <span class="n">be</span> <span class="n">converted</span> <span class="n">Octopress</span> <span class="n">blog</span><span class="s">&#39;s title</span>
</span><span class='line'>  <span class="o">-</span><span class="n">c</span> <span class="n">OCTOPRESS_CATEGORIES</span>
</span><span class='line'>                        <span class="n">be</span> <span class="n">converted</span> <span class="n">Octopress</span> <span class="n">blog</span><span class="s">&#39;s categories</span>
</span><span class='line'>  <span class="o">-</span><span class="n">t</span> <span class="n">OCTOPRESS_TAGS</span>     <span class="n">be</span> <span class="n">converted</span> <span class="n">Octopress</span> <span class="n">blog</span><span class="s">&#39;s tags</span>
</span><span class='line'>
</span><span class='line'><span class="n">D</span><span class="p">:</span>\<span class="n">WorkSpace</span>\<span class="n">python_ws</span>\<span class="n">Evernote_Automatic_format_conversion</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行：(成功)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">D</span><span class="p">:</span>\<span class="n">WorkSpace</span>\<span class="n">python_ws</span>\<span class="n">Evernote_Automatic_format_conversion</span><span class="o">&gt;</span><span class="n">python</span> <span class="n">script</span>\<span class="n">evernoteToOctopressBlog</span><span class="o">.</span><span class="n">py</span> <span class="o">-</span><span class="n">f</span> <span class="s">&quot;2016-12-1-python-get-command-line-arguments&quot;</span> <span class="o">-</span><span class="n">p</span> <span class="s">&quot;D:\WorkSpace</span><span class="se">\t</span><span class="s">est_ws\Learning Python 028 获取命令行参数 — Over — 2016年12月1日 星期 四.md&quot;</span> <span class="o">-</span><span class="n">T</span> <span class="s">&quot;Learning Python 028 获取命令行参数&quot;</span> <span class="o">-</span><span class="n">c</span> <span class="s">&quot;python&quot;</span> <span class="o">-</span><span class="n">t</span> <span class="s">&quot;python3, python2, 命令行, 参数, args&quot;</span>
</span><span class='line'><span class="err">当前处理的这个马克飞象笔记是一个文件</span>
</span><span class='line'>
</span><span class='line'><span class="n">D</span><span class="p">:</span>\<span class="n">WorkSpace</span>\<span class="n">python_ws</span>\<span class="n">Evernote_Automatic_format_conversion</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>现在最新的代码在这里：<a href="https://github.com/AoboJaing/Evernote_Automatic_format_conversion/blob/v3.0/script/evernoteToOctopressBlog.py">https://github.com/AoboJaing/Evernote_Automatic_format_conversion/blob/v3.0/script/evernoteToOctopressBlog.py</a></p>

<hr />

<h2>基本完成了</h2>

<p>可以收工了！</p>

<p>&mdash; 2016-12-2 03:24:59</p>

<hr />

<h1>需要升级的地方</h1>

<ol>
<li>检查<code>folder_name</code> 字符串是否有非法字符和字符串的长度是否超过最大允许长度</li>
</ol>


<hr />

<p>参考网站：</p>

<p>Python 文件夹及文件操作（特全，特别详细）
<a href="http://www.cnblogs.com/feeland/p/4463682.html">http://www.cnblogs.com/feeland/p/4463682.html</a></p>

<hr />

<h1>2017年2月20日 星期一 发现一个bug：当我将图片链接写成：<img src="http://aobojaing.github.io/images/2017-2-21-python-Evernote-Auto-converted-to-Octopress-local-site-blog/1487601876744.png" alt="Alt text" /> 的时候，程序不会识别到这是一个图片链接</h1>

<p>2017-2-20 22:45:07 我想将这个bug记录下来。</p>

<p>现在，修改这个bug。修改思路：</p>

<p>我们需要修改这段代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">replaceImgLink</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">evernote_data</span><span class="p">):</span>
</span><span class='line'>    <span class="c"># 将里面的图片链接替换为**Octopress**本地链接的形式</span>
</span><span class='line'>    <span class="n">image_local_path</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">&#39;!\[Alt text\]\((.*?)\)&#39;</span><span class="p">,</span> <span class="n">evernote_data</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">S</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2017-2-21-python-Evernote-Auto-converted-to-Octopress-local-site-blog/1487603129502.png" alt="Alt text" /></p>

<p>我们在这里，将这里使用一次正则表达式，改为使用两次正则表达式。：</p>

<p>大概的伪码的样子是：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>    <span class="n">image_local_path</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">&#39;!\[Alt text\]\((.*?)\)&#39;</span><span class="p">,</span> <span class="n">evernote_data</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">S</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>第一步里面我们的正则表达式的匹配模板（<code>!\[Alt text(.*?)</code>）是一个前面有字符串，而后面没有字符串的一个字符串。那么这个时候，如果你想要程序正常的运行，你需要在这个匹配模板里面<code>(.*?)</code>后面添加上：<code>\Z</code>，用来表示后面没有字符串。（对着正则表达式的这个知识点，你可以参考<a href="http://www.aobosir.com/blog/2017/02/21/python-regular-expression-match-string-no-string-in-behind/">这篇博客</a>，这里对正则表达式的这个知识点有详细的介绍。）</p>

<p>修改为：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>    <span class="n">image_local_path</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">&#39;!\[Alt text(.*?)\)&#39;</span><span class="p">,</span> <span class="n">evernote_data</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">S</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">image_local_path</span><span class="p">)):</span>
</span><span class='line'>        <span class="n">image_local_path_this</span> <span class="o">=</span> <span class="n">image_local_path</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</span><span class='line'>        <span class="n">image_local_path_step2</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">&#39;]\((.*?)\Z&#39;</span><span class="p">,</span> <span class="n">image_local_path_this</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">S</span><span class="p">)</span>
</span><span class='line'>        <span class="n">image_local_path</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">image_local_path_step2</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>        <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>现在修改后的代码：<a href="https://github.com/AoboJaing/Evernote_Automatic_format_conversion">依然在GitHub里面</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Python 008 正则表达式-007 匹配的字符串模板中如果只有前面有字符串，而后面没有字符串时，这个匹配模板要怎么写]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/21/python-regular-expression-match-string-no-string-in-behind/"/>
    <updated>2017-02-21T01:19:10+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/21/python-regular-expression-match-string-no-string-in-behind</id>
    <content type="html"><![CDATA[<hr />

<h2>开发环境</h2>

<ul>
<li>Python第三方库：lxml、Twisted、pywin32、scrapy</li>
<li>Python 版本：python-3.5.0-amd64</li>
<li>PyCharm软件版本：pycharm-professional-2016.1.4</li>
<li>电脑系统：Windows 10 64位</li>
</ul>


<p>如果你还没有搭建好开发环境，请到<a href="http://www.aobosir.com/blog/2016/11/26/python3-large-web-crawler-001-Build-development-environment/">这篇博客</a>。</p>

<hr />

<h2></h2>

<p>例子程序在这里：<a href="https://github.com/AoboJaing/learning_python/blob/master/learning_python08_06.py">learning_python_08_06.py</a></p>

<p>参考网站：<a href="http://www.cnblogs.com/dyfblog/p/5880728.html">python正则表达式详解</a></p>

<p><img src="http://aobojaing.github.io/images/2017-2-21-python-regular-expression-match-string-no-string-in-behind/1487610263474.png" alt="Alt text" /></p>

<p>当我们的匹配字符串的末尾处没有字符串的时候，我们使用<code>\Z</code>来表示结束处。</p>

<blockquote><p>同样的道理：当我们的匹配字符串的开头处没有字符串的时候，我们使用<code>\A</code>来表示开头处。</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># -!- coding:utf-8 -!-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">re</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Learning Python 008 正则表达式-007 匹配的字符串模板中如果只有前面有字符串，而后面没有字符串时，这个匹配模板要怎么写 --- 2017年2月20日 星期一</span>
</span><span class='line'><span class="c"># 博文的链接地址：http://www.aobosir.com/blog/2017/02/21/python-regular-expression-match-string-no-string-in-behind/</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 这个程序的功能：获取&#39;.\data\2017-2-19-3D-printer-hot-bed.markdown&#39;文件里面所有的图片链接的地址。</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 这个demo 程序使用了两次正则表达式的方式，成功的将所有的图片链接地址都获取了出来。（其中有：&quot;![Alt text](/images/2017-2-21-python-regular-expression-match-string-no-string-in-behind/1485166773479.png)&quot;这种形式的，还是&quot;![Alt text | 240x0](./1485166756931.png)&quot;这种形式的。）</span>
</span><span class='line'>
</span><span class='line'><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">r&#39;.\data\2017-2-19-3D-printer-hot-bed.markdown&#39;</span><span class="p">,</span> <span class="s">&#39;rt&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&#39;utf-8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">data</span> <span class="o">=</span> <span class="nb">file</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">image_local_path_step1</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">&#39;!\[Alt text(.*?)\)&#39;</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">S</span><span class="p">)</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">image_local_path_step1</span><span class="p">)):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">image_local_path_step1</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>    <span class="k">pass</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">image_local_path_step1</span><span class="p">)):</span>
</span><span class='line'>    <span class="n">image_local_path_step1_this</span> <span class="o">=</span> <span class="n">image_local_path_step1</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</span><span class='line'>    <span class="n">image_local_path_step2</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">&#39;]\((.*?)\Z&#39;</span><span class="p">,</span> <span class="n">image_local_path_step1_this</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">S</span><span class="p">)</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">image_local_path_step2</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'>    <span class="k">pass</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nb">file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个demo程序中，使用了两层正则表达式。</p>

<p>第一层的匹配字符串是：<code>!\[Alt text(.*?)\)</code>。它可以得到<code>](./1485164492501.png</code>这样或者<code>| 240x0](./1485166756931.png</code>这样的结果。</p>

<p>解决我们将得到的结果再进行一次正则表示匹配。这次使用的匹配字符串是：<code>]\((.*?)\Z</code>。通过这次匹配，得到的结果就都是图片的地址了。（想这样：<code>./1485181859693.png</code>）</p>

<blockquote><p>注意：在匹配字符串中的<code>(</code>和<code>)</code>需要使用转义字符<code>\</code>修饰。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SolidWorks 如何使用 边界切除 工具]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/19/SolidWorks-how-to-use-border-removal-tool/"/>
    <updated>2017-02-19T16:37:56+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/19/SolidWorks-how-to-use-border-removal-tool</id>
    <content type="html"><![CDATA[<hr />

<p>先画好一些草图，并准备一个实体。</p>

<p>实体，我已经画好了：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-use-border-removal-tool/1487357916858.png" alt="Alt text" /></p>

<p>基准面我也画好了：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-use-border-removal-tool/1487357999645.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-use-border-removal-tool/1487358141137.png" alt="Alt text" /></p>

<p>接下来，我们就来使用  <strong>边界切除</strong> 工具，将这个实体中间掏空：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-use-border-removal-tool/1487358161740.png" alt="Alt text" /></p>

<p>然后在 <strong>方向1</strong> 里面，按照顺序添加已经绘制好的草图：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-use-border-removal-tool/1487358184913.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-use-border-removal-tool/1487358658059.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-use-border-removal-tool/1487358750812.png" alt="Alt text" /></p>

<p>最后 <strong>确定</strong> 即可。</p>

<p>完成后，我们看看横切面图：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-use-border-removal-tool/1487358868183.png" alt="Alt text" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决 SolidWorks 无法装入 GdtAnalysisSupport.dll文件 的问题]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/19/solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/"/>
    <updated>2017-02-19T16:35:46+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/19/solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file</id>
    <content type="html"><![CDATA[<hr />

<p>昨天做好的零件文件，今天睡醒了，再次打开， 就出现了这个问题：<code>无法装入 SolidWorks.dll文件：GdtAnalysisSupport.dll</code></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/1487392359179.png" alt="Alt text" /></p>

<hr />

<h2>解决办法</h2>

<p>参考网站：<a href="http://jingyan.baidu.com/article/72ee561a530355e16138dfd4.html">http://jingyan.baidu.com/article/72ee561a530355e16138dfd4.html</a></p>

<p>参考</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/1487393791415.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/1487393815563.png" alt="Alt text" /></p>

<p>直接点击 <strong>忽略</strong> ：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/1487393914660.png" alt="Alt text" /></p>

<p>等待大约5分钟：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/1487394450625.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/1487394522702.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/1487394544788.png" alt="Alt text" /></p>

<hr />

<p>现在启动 SolidWorks 软件：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/1487394625073.png" alt="Alt text" /></p>

<p>所以，你需要重新破解：</p>

<p>参考网站：</p>

<p>现在我们想点击 <strong>我想以后激活我的SolidWorks产品</strong>，来看看上面出现的问题是否解决了。</p>

<p>问题仍然存在：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/1487394891003.png" alt="Alt text" /></p>

<p>操了！</p>

<hr />

<p>我知道怎么回事了。在<strong>注册表编辑器</strong> 里面添加Installer的路径错了。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/1487397304857.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/1487397342762.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/1487397374349.png" alt="Alt text" /></p>

<hr />

<p>现在，这个问题是不在出现了，但是，我之前做好的模型，还是有一部分步骤都失效了。这是怎么回事。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/1487405570583.png" alt="Alt text" /></p>

<p>我现在没有办法了，现在的办法是：安装更新的SolidWorks 软件（2016）</p>

<p>请参考这篇笔记：<strong>Windows 10 安装 SolidWorks 2016 Sp5.0</strong></p>

<hr />

<p>2017-2-18 16:12:01</p>

<p>其实可以不用安装 SolidWorks 2016软件，我知道为什么打开的模型会是上面这个样子的了：</p>

<p>那些 “<strong>失效</strong>” 的步骤其实是 被 <strong>压缩</strong> 了。</p>

<p>解决办法就是：我们只需要将这些“<strong>失效</strong>”的步骤给 <strong>解除压缩</strong>即可。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/1487405886362.png" alt="Alt text" /></p>

<hr />

<p>问题解决：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-solve-SolidWorks-can-not-load-the-GdtAnalysisSupport-dll-file/1487405910127.png" alt="Alt text" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SolidWorks 如何在曲面上获取与基准线相交的分割线]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/19/SolidWorks-how-to-get-split-line-on-surface-that-intersects-baseline/"/>
    <updated>2017-02-19T16:33:25+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/19/SolidWorks-how-to-get-split-line-on-surface-that-intersects-baseline</id>
    <content type="html"><![CDATA[<hr />

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-get-split-line-on-surface-that-intersects-baseline/1487356248650.png" alt="Alt text" /></p>

<p>分割类型选择： <strong>交叉点</strong>，然后选择一个基准面 再选择一个 面。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-get-split-line-on-surface-that-intersects-baseline/1487356275589.png" alt="Alt text" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3D打印大件模型时，添加支撑的注意事项：支撑的地基一定要结实]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/19/3D-printer-add-support-note-must-be-strong/"/>
    <updated>2017-02-19T16:15:24+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/19/3D-printer-add-support-note-must-be-strong</id>
    <content type="html"><![CDATA[<hr />

<p>使用的软件：Windows 10 里面自带的 <strong>3D Builder</strong></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-add-support-note-must-be-strong/1487425926937.png" alt="Alt text" /></p>

<hr />

<p>我刚刚打印下面模型的支撑：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-add-support-note-must-be-strong/1487055653986.png" alt="Alt text" /></p>

<p>打印的时候，打到红色浪线的位置，黑色箭头的地方起来的。（支撑的地基不稳。）</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-add-support-note-must-be-strong/1487055739751.png" alt="Alt text" /></p>

<p>修改后的：（ 我在地基的地方，添加了很多的扁扁的椭圆。）</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-add-support-note-must-be-strong/1487055586094.png" alt="Alt text" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solidworks 如何画穿透点]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/19/SolidWorks-how-to-draw-through-points/"/>
    <updated>2017-02-19T16:12:41+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/19/SolidWorks-how-to-draw-through-points</id>
    <content type="html"><![CDATA[<hr />

<p>穿透点是指：两个草图之间，其中一个草图中的点穿透另一个草图里面的一条线。</p>

<p>首先，你先绘制好两个草图。</p>

<p>然后到其中一个需要选中<strong>点</strong>的草图里面，进行<strong>编辑草图</strong>。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-draw-through-points/1487425230483.png" alt="Alt text" /></p>

<p>先选中这个<strong>点</strong>，然后按住 <strong>Ctrl</strong>键，再选中另一个草图里面的一条线。这个时候，你会看到下面的截图：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-draw-through-points/1487425470489.png" alt="Alt text" /></p>

<p>这样，就创建了一个穿透点。</p>

<h2>搞定</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solidworks 如何添加放样基准面]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/19/SolidWorks-how-to-add-stakeout-datum/"/>
    <updated>2017-02-19T16:11:17+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/19/SolidWorks-how-to-add-stakeout-datum</id>
    <content type="html"><![CDATA[<hr />

<p>对着放样曲面 右键，选择：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-add-stakeout-datum/1487424065921.png" alt="Alt text" /></p>

<hr />

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-add-stakeout-datum/1487424349928.png" alt="Alt text" /></p>

<p>选好一个面后，就可以按 <strong>确定</strong> 图标（绿色的对号）。</p>

<p>这样，我们就生成了一个放样基准面。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solidworks 如何在曲面添加文字]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/19/SolidWorks-how-to-add-text-to-a-surface/"/>
    <updated>2017-02-19T16:08:17+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/19/SolidWorks-how-to-add-text-to-a-surface</id>
    <content type="html"><![CDATA[<hr />

<p>参考网站：</p>

<p><a href="http://www.xmj1688.com/solidworks2012qm/1581.html">http://www.xmj1688.com/solidworks2012qm/1581.html</a></p>

<hr />

<p>新建一个基准面：（如何创建基准面：这里）</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-add-text-to-a-surface/1487305868464.png" alt="Alt text" /></p>

<p>然后选中这个基准面，在进行下面的操作：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-add-text-to-a-surface/1487305437670.png" alt="Alt text" /></p>

<p>此时生成了一个草图：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-add-text-to-a-surface/1487305985643.png" alt="Alt text" /></p>

<hr />

<p>点击 插入文字 的图标：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-add-text-to-a-surface/1487306013079.png" alt="Alt text" /></p>

<p>输入要插入的文字，然后调整尺寸和位置：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-add-text-to-a-surface/1487306102092.png" alt="Alt text" /></p>

<p>草图绘制完成后，点击完成：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-add-text-to-a-surface/1487306136366.png" alt="Alt text" /></p>

<p>这个时候会出现下面的 <strong>包覆</strong> 工具提示：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-add-text-to-a-surface/1487306174421.png" alt="Alt text" /></p>

<blockquote><p>注意：包覆工具只能接受：平面、圆柱面、圆锥面、拉伸面和旋转面。对于放样形成的曲面，这个工具无效。</p></blockquote>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-add-text-to-a-surface/1487307109618.png" alt="Alt text" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solidworks 如何复制 基准面]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/19/SolidWorks-how-to-copy-datum-plane/"/>
    <updated>2017-02-19T16:05:30+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/19/SolidWorks-how-to-copy-datum-plane</id>
    <content type="html"><![CDATA[<hr />

<p>先点击将要复制的基准面：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-copy-datum-plane/1487247435981.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-copy-datum-plane/1487247441983.png" alt="Alt text" /></p>

<p>现在按住 <strong>Ctrl</strong> ，然后将鼠标移动到基准面的一个点上，然后按住鼠标左键推动。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-copy-datum-plane/1487247459958.png" alt="Alt text" /></p>

<hr />

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-how-to-copy-datum-plane/1487247600485.png" alt="Alt text" /></p>

<hr />

<h2>搞定</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solidworks 草图绘制]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/19/SolidWorks-sketching/"/>
    <updated>2017-02-19T16:03:44+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/19/SolidWorks-sketching</id>
    <content type="html"><![CDATA[<hr />

<h2>如何新建一个文件</h2>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1485927554653.png" alt="Alt text" /></p>

<hr />

<p>鼠标点击 <strong>前视基准面</strong>，然后鼠标不要动，会在鼠标右上角出现一条图标：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1485928241107.png" alt="Alt text" /></p>

<p>第一个是：<strong>绘制草图</strong></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1485928516663.png" alt="Alt text" /></p>

<hr />

<p>第二个是：<strong>正视于</strong></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1485928543023.png" alt="Alt text" /></p>

<hr />

<p>当你点击<strong>绘制草图</strong> 这个图标。视图中会自动的将<strong>前视基准面</strong> 正对着你。（当然这是你第一个这样操作的时候，会这样。如果视图中已经有模型存在了，那么它就不会这样做了。）</p>

<p>同时还会在左侧的列表里面增加了一个<img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1485928807493.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1485928772388.png" alt="Alt text" /></p>

<p>所以，对于第一次点击 <strong>草图绘制</strong>，它是做了两步操作：选择一个基准面，然后<strong>正视于</strong>你。</p>

<hr />

<p>你在视图右下角可以看到：<strong>正在编辑：草图1</strong></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1485929231348.png" alt="Alt text" /></p>

<hr />

<p>现在就是正在编辑草图的状态，我们可以开始画草图了。</p>

<hr />

<p>画草图的第一个原则：就是<strong>草图必须跟原点发生关系</strong>。（如果一个物体在空间中跟原点没有关系，这个物体的位置在空间中就定义不了。它是浮动的，它跟原点没有任何关系。）所以，需要跟原点产生关系。</p>

<p>关系一般就是：几何约束 或者 尺寸约束。（根据你自己的模型的特点来定。）</p>

<hr />

<p>选择<strong>直线</strong>命令：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1485931152305.png" alt="Alt text" /></p>

<p>然后鼠标移动到原点上面，当鼠标移动到原点上面的时候，会出现下面这个图标：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486022516663.png" alt="Alt text" /></p>

<p>出现上面的图标，说明，原点与当前鼠标点的几何关系是重合。这个时候鼠标点下去。然后就可以松开。（一个点画完之后，就可以马上松开。）</p>

<p>松开之后，我们在画一条竖直的 直线。注意鼠标的反馈信息。你会看到现在出现一个图标，当你看到现在这个图标，说明当前的直线是竖直的。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486022844406.png" alt="Alt text" /></p>

<p>在点击一下鼠标左键，一条直线就画好了。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486022892530.png" alt="Alt text" /></p>

<hr />

<p>接下来，我们绘制一段圆弧：先将鼠标放置在一点，此时会出现下面的图标：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486022995558.png" alt="Alt text" /></p>

<p>然后将鼠标移上去。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486023020758.png" alt="Alt text" /></p>

<p>然后在想右移，圆弧就出来了：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486023059691.png" alt="Alt text" /></p>

<p>快捷键：直线变成圆弧，圆弧变成直线： <strong>A</strong></p>

<hr />

<p>此时，你会看到一个十字交叉的线，这个线叫做：推理线。</p>

<p>如果我们绘制的线（虚线）在下面这个位置，那么它的几何关系就是：进过圆弧的中心。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486023372171.png" alt="Alt text" /></p>

<p>如果是下面这个情况，鼠标的反馈信息是：相切。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486023360816.png" alt="Alt text" /></p>

<p>鼠标点下去，会这条直线。</p>

<p>然后在将鼠标移动到下面这个位置：（出现两个几何关系：一个水平，一个竖直）</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486023457105.png" alt="Alt text" /></p>

<p>画下去，最后闭合：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486023607424.png" alt="Alt text" /></p>

<hr />

<p>接下来，我们的目标是画槽：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486023684882.png" alt="Alt text" /></p>

<p>命令在这里：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486023792344.png" alt="Alt text" /></p>

<p>当我们选择这个命令后，我们会看到，左侧出现的<strong>槽口</strong>窗口，我们选择的就是第一个命令。你可以看到这个图标里面有<code>1</code>、<code>2</code>、<code>3</code>。它们代表的意思顾名思义：就是鼠标第一下点的是这个圆弧的中心，第2下点的是第二个圆弧的中心，第3下点鼠标是圆弧的半径，就是宽度。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486024090462.png" alt="Alt text" /></p>

<p>然后，我们将 <strong>添加尺寸</strong> 复选框选中。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486024798934.png" alt="Alt text" /></p>

<hr />

<p>如何做到：让一个绘制出的直线平行与已知直线。</p>

<p>第一步靠近要平行的直线，然后停一停，推理线就出来了：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486024567374.png" alt="Alt text" /></p>

<p>第二步：移动到推理线上。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486024615305.png" alt="Alt text" /></p>

<p>这样，一个槽就画好了。它就自动的添加了两个尺寸。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486024847643.png" alt="Alt text" /></p>

<hr />

<p>扩展：如果两个分来的直线，然后我们让他它们两个的几何关系是平行的，我们如何手动添加呢？</p>

<p>我们先选中一条直线，然后按住<strong>Ctrl</strong>键选中另一条。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486025169184.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486025226649.png" alt="Alt text" /></p>

<hr />

<p>现在轮廓已经画好了。现在我们就来标注尺寸。大多数的尺寸，我们都可以使用 <strong>智能尺寸</strong> 命令来标注。</p>

<p>快捷键：<strong>S</strong>，弹出一个工具栏，第二个图标就是<strong>智能尺寸</strong></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486025375647.png" alt="Alt text" /></p>

<p>点一下需要标注的直线。然后鼠标放到合适的位置，然后在点击一下鼠标。然后输入尺寸，即可，很简单。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486025553704.png" alt="Alt text" /></p>

<p>圆弧半径的标注也是一样的简单，点一下圆弧就可以了。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486025541470.png" alt="Alt text" /></p>

<hr />

<p>两条直线之间的距离如何标注：</p>

<p>点一下一个直线，然后在点击另一个直线，然后将尺寸放置在合适的位置，点一下鼠标，然后就可以标注尺寸了。</p>

<hr />

<p>在标注尺寸的时候，你有没有发现一个现象：当我们没有标注尺寸之前，草图的线是蓝色的（就是：欠定义状态），但是当我们标注了尺寸之后，线就变成了黑色。黑色代表的是：完全定义。</p>

<p>如果当你标注的尺寸出现了逻辑上的错误，那么直线就会以红色显示。</p>

<hr />

<p>现在就完全定义了。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486026142063.png" alt="Alt text" /></p>

<hr />

<p>圆与圆之间 最近距离的智能尺寸如何添加：</p>

<p>点击其中一个圆的比较靠近的边，然后按住<strong>Shift</strong>，然后在点击另一个圆比较靠近的边。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486026391771.png" alt="Alt text" /></p>

<hr />

<p>同样的道理，可以添加最远的智能尺寸 和 一个圆最远和一个圆最近的智能尺寸：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486026441757.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486026492761.png" alt="Alt text" /></p>

<hr />

<p>当我们编辑完草图后，我们点击右上角的 <strong>完成编辑</strong> 按钮：（注意不要点击那个叉，如果你点击了那个叉，那么你绘制的草图就没有了，消失了。）</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486026703297.png" alt="Alt text" /></p>

<hr />

<p>现在自动跳到了实体菜单里面：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486026797681.png" alt="Alt text" /></p>

<hr />

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486026932475.png" alt="Alt text" /></p>

<p>当你点击了 <strong>拉伸凸台/基体</strong> 你会看到，现在草图变成了灰色的。因为拉伸是基于草图的，你需要选择一个草图，拉伸的是草图。</p>

<p>我们现在草图已经画好了，只需要选择一个草图就可以了。只需要鼠标左键点一个草图的一个边，然后点击<strong>确定</strong>：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486027138904.png" alt="Alt text" /></p>

<hr />

<p>那么做一个零件模型的整个流程就做完了。</p>

<hr />

<p>接下来，介绍如何画：草图的圆角。</p>

<p>先随便绘制一组线：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486027981617.png" alt="Alt text" /></p>

<hr />

<p>然后快捷键 <strong>S</strong>，选择里面的 <strong>圆角</strong> 命令：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486028007306.png" alt="Alt text" /></p>

<p>鼠标放在 一个点上，就会出现圆角：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486028167894.png" alt="Alt text" /></p>

<p>鼠标点中即可。然后我们给每一个点添加圆角：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486028234848.png" alt="Alt text" /></p>

<p>你可以在左侧设置圆角参数：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486028251098.png" alt="Alt text" /></p>

<p>设置完成后，我们点击 确定图标，即可：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486028282061.png" alt="Alt text" /></p>

<hr />

<p>你看可以看到，如果我们想要给断的两端的线添加一个圆角，我们要怎么做呢。</p>

<p>很简单，选中一端的线，然后在将鼠标放到另一端，圆角就出现了：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486028507916.png" alt="Alt text" /></p>

<p>确定即可：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486028534798.png" alt="Alt text" /></p>

<hr />

<p><img src="http://aobojaing.github.io/images/2017-2-19-SolidWorks-sketching/1486028600613.png" alt="Alt text" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solidworks 2011 软件下载、安装和破解 图文教程]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/19/download-install-crack-graphic-tutorial/"/>
    <updated>2017-02-19T01:09:34+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/19/download-install-crack-graphic-tutorial</id>
    <content type="html"><![CDATA[<hr />

<h2>下载</h2>

<p>下载网站：
<a href="http://www.mfcad.com/solidworks/xiazai/18672.html">http://www.mfcad.com/solidworks/xiazai/18672.html</a></p>

<p>下载两个文件：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-download-install-crack-graphic-tutorial/1485673406500.png" alt="Alt text" /></p>

<hr />

<p>安装教程参考：<a href="http://www.mfcad.com/solidworks/anzhuang/18673.html">http://www.mfcad.com/solidworks/anzhuang/18673.html</a></p>

<blockquote><p>有可以有用的网站：<a href="http://www.cr173.com/soft/21633.html">http://www.cr173.com/soft/21633.html</a></p></blockquote>

<hr />

<p><img src="http://aobojaing.github.io/images/2017-2-19-download-install-crack-graphic-tutorial/1485884501366.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-download-install-crack-graphic-tutorial/1485884513219.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-download-install-crack-graphic-tutorial/1485884517992.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-download-install-crack-graphic-tutorial/1485884546919.png" alt="Alt text" /></p>

<p>把网断了：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-download-install-crack-graphic-tutorial/1485884575289.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-download-install-crack-graphic-tutorial/1485884593341.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-download-install-crack-graphic-tutorial/1485884896255.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-download-install-crack-graphic-tutorial/1485885016566.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-download-install-crack-graphic-tutorial/1485885215977.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-download-install-crack-graphic-tutorial/1485885272645.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-download-install-crack-graphic-tutorial/1485885282456.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-download-install-crack-graphic-tutorial/1485885175012.png" alt="Alt text" /></p>

<hr />

<p><img src="http://aobojaing.github.io/images/2017-2-19-download-install-crack-graphic-tutorial/1485885331226.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-download-install-crack-graphic-tutorial/1485885337667.png" alt="Alt text" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3D 打印的模型 告别手动添加支撑的方式 — 使用 Meshmixer 软件]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/19/3D-printer-auto-add-support-using-Meshmixer-software/"/>
    <updated>2017-02-19T01:06:23+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/19/3D-printer-auto-add-support-using-Meshmixer-software</id>
    <content type="html"><![CDATA[<hr />

<h2>下载 Meshmixer 软件</h2>

<p>官方下载网址：<a href="http://www.meshmixer.com/download.html">http://www.meshmixer.com/download.html</a></p>

<hr />

<h2>安装</h2>

<p>一路傻瓜式安装：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-auto-add-support-using-Meshmixer-software/1486940089455.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-auto-add-support-using-Meshmixer-software/1486940105637.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-auto-add-support-using-Meshmixer-software/1486940111527.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-auto-add-support-using-Meshmixer-software/1486940168401.png" alt="Alt text" /></p>

<hr />

<h2>启动</h2>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-auto-add-support-using-Meshmixer-software/1486940217894.png" alt="Alt text" /></p>

<p>点击  <strong>Accept</strong>：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-auto-add-support-using-Meshmixer-software/1486940229391.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-auto-add-support-using-Meshmixer-software/1486940266461.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-auto-add-support-using-Meshmixer-software/1486940291481.png" alt="Alt text" /></p>

<hr />

<h2>使用</h2>

<p>如何使用这个软件，请参考网站：<a href="http://3dkoukou.com/showns.asp?nID=2611">3D打印模型加支撑软件Meshmixer简单使用教程</a></p>

<p>最理想的参数：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-auto-add-support-using-Meshmixer-software/1486942843471.png" alt="Alt text" /></p>

<p>得到的效果：</p>

<blockquote><p>注意：当你的模型比较大，或者曲面比较复杂的时候，它处理生成支撑的时间会比较长，所以请你耐心等待。</p></blockquote>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-auto-add-support-using-Meshmixer-software/1486942522539.png" alt="Alt text" /></p>

<p>最终修复后的模型：（使用 <strong>Windows 10</strong> 自带的软件：<strong>3D Builder</strong> 打开<code>stl</code>模型文件）</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-auto-add-support-using-Meshmixer-software/1486942309375.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-auto-add-support-using-Meshmixer-software/1486942368172.png" alt="Alt text" /></p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[现在热床寄到了，现在我将热床安装到3D打印机上]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/19/3D-printer-hot-bed/"/>
    <updated>2017-02-19T01:01:37+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/19/3D-printer-hot-bed</id>
    <content type="html"><![CDATA[<hr />

<p>安装热床不像你想象的那么简单，是一个比较复杂的事情：</p>

<ul>
<li>首先你需要重新修改程序，重新烧写程序</li>
<li>然后是安装热床</li>
<li>然后调整热床的平衡度</li>
<li>然后调整出料不爱出的问题</li>
</ul>


<hr />

<p>为了安全起见，我先从卖家要：有没有换热床的教程和程序源代码。</p>

<hr />

<p>刚刚询问了卖家，卖家的态度是爱理不理。</p>

<p>反正我现在是知道了我想知道的事情：无需重新烧写程序。直接安装热床即可。</p>

<hr />

<p>好的，现在我先不安装热床，我先来解决这个出料出一点就不出的问题。</p>

<hr />

<h2>校正</h2>

<p>电脑成功连接到3D打印机后。执行</p>

<p>第一件事情：回到最高位置：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485161222653.png" alt="Alt text" /></p>

<p>然后，在底盘上放一张纸：</p>

<p>接着，到最接近最低位置的位置：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g1 z1</span></code></pre></td></tr></table></div></figure>


<p>现在，你移动下面的纸。几乎被压住了，但是现在你不要调整任何东西。移动纸，纸是可以移动的，是最好的。我现在的状态就是，我移动纸的时候，稍微有那么一点点的阻力。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485161546753.png" alt="Alt text" /></p>

<hr />

<p>下面开始校正：</p>

<p>我们使用三点法：</p>

<p>先到A点：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g1 x0 y-60 z0</span></code></pre></td></tr></table></div></figure>


<p>纸已经不能移动了，好想是被戳坏了。</p>

<p>现在调整底板下面A点附近的螺丝，目的是让这种纸，多少可以移动。</p>

<p>然后，我们再执行一次上面的命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g1 x0 y-60 z0</span></code></pre></td></tr></table></div></figure>


<hr />

<p>接着是B点：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g1 z1
</span><span class='line'>g1 x50 y30 z1
</span><span class='line'>g1 z0</span></code></pre></td></tr></table></div></figure>


<p>一样，调整附近的螺丝。我这次还还将下面的纸给移动坏了。</p>

<hr />

<p>接着是最后一个点C点：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g1 z1
</span><span class='line'>g1 x-50 y30 z1
</span><span class='line'>g1 z0</span></code></pre></td></tr></table></div></figure>


<hr />

<p>好的，现在我们就校正好了。</p>

<p>将出料嘴移动到零点：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g1 z1
</span><span class='line'>g1 x0 y0 z1
</span><span class='line'>g1 z0</span></code></pre></td></tr></table></div></figure>


<p>到了零点后，移动一下下面的纸，看看效果好不好，如果好，我们就把纸去掉。如果不好，我们在重新调整3个点。</p>

<hr />

<p>好的，我调整了一次，就校正成功了。现在我们就来打印一个东西。</p>

<hr />

<p>这个3D打印机出料感觉好像是太少了似的，每一次都是打印不成功。我就怀疑是出料的问题。</p>

<p>遇事我找到了一个很有嫌疑的问题：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485164421735.png" alt="Alt text" /></p>

<p>然后要记得保存：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485164492501.png" alt="Alt text" /></p>

<p>现在设置完了这个出料的直径后，出料的量其实是有明显的增多，现在的出料量应该是正常的量。</p>

<hr />

<p>现在，我已经测试打印了。已经打印完成，效果超级的好。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485166756931.png" alt="Alt text | 240x0" /> <img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485166773479.png" alt="Alt text | 240x0" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485166785899.png" alt="Alt text | 240x0" /> <img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485166799917.png" alt="Alt text | 240x0" /></p>

<p>只是美中不足就是这个开始答应的时候，（1）我发现底板它不怎么爱粘料。（2）并且有一个边，在打印的时候，它打印出来是料是悬空的。</p>

<hr />

<p>好的，现在我们就来解决上面的两个问题：</p>

<p>这两个问题都很好解决，其实</p>

<p>对于第一个问题，我们只需要将底板替换成热床就可以。然后我们在校正一次热床。然后在测试一次打印。或许第二个问题就可以不攻自破。如果第二个问题还是存在，那我们再说。</p>

<hr />

<p>2017-1-23 19:16:51</p>

<p>好的，现在的工作是：替换热床。</p>

<p>现在的样子：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485170806513.png" alt="Alt text" /></p>

<p>单独的热床：（下面这图是热床的背面）</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485171018651.png" alt="Alt text" /></p>

<p>热床的正面和之前的钢板是一模一样的，没有什么区别：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485171128911.png" alt="Alt text" /></p>

<hr />

<p>同时我们还需要一个新的电源：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485171149883.png" alt="Alt text" /></p>

<hr />

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485172619594.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485173229191.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485173252404.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485173349464.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485173210981.png" alt="Alt text" /></p>

<hr />

<p>稳压器连接电源线：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485173533381.png" alt="Alt text" /></p>

<hr />

<p>稳压器连接与电路板的电源线连接：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485176997391.png" alt="Alt text" /></p>

<hr />

<p>控制板连接热床和温度传感器：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485180014916.png" alt="Alt text" /></p>

<hr />

<p>然后我们现在直接安装。安装完成后。我们在电脑端直接点击 <strong>连接</strong> 按钮，你就可以看到热床已经成功的识别了：（无需进行任何3D打印机的源代码的重新烧录）</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485180289761.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485180268148.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485180280872.png" alt="Alt text" /></p>

<hr />

<p>好的，现在热床安装完了了。现在开始校正热床这个底盘平衡。</p>

<p>技巧：校正底盘平衡的工具，就是一张A4纸。</p>

<p>先将出料头降到3~5mm的安全距离下，然后一点一点的将三个底盘上的螺丝往下转。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g1 z3</span></code></pre></td></tr></table></div></figure>


<p>然后一点一点的往下拧螺丝，知道可以降到<code>z1</code>这个高度。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g1 z2</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g1 z1</span></code></pre></td></tr></table></div></figure>


<p>然后我们现在使用3点校正法。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g1 z0</span></code></pre></td></tr></table></div></figure>


<p>然后试着移动一下A4纸。理想的情况下是移动不了的。</p>

<p>先到A点：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g1 z1
</span><span class='line'>g1 x0 y-60 z1
</span><span class='line'>g1 z0</span></code></pre></td></tr></table></div></figure>


<p>进行调整。</p>

<hr />

<p>接着是B点：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g1 z1
</span><span class='line'>g1 x50 y30 z1
</span><span class='line'>g1 z0</span></code></pre></td></tr></table></div></figure>


<p>进行调整。</p>

<hr />

<p>接着是最后一个点C点：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g1 z1
</span><span class='line'>g1 x-50 y30 z1
</span><span class='line'>g1 z0</span></code></pre></td></tr></table></div></figure>


<p>进行调整。</p>

<hr />

<p>好的，现在我们就校正好了。</p>

<p>将出料嘴移动到零点：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g1 z1
</span><span class='line'>g1 x0 y0 z1
</span><span class='line'>g1 z0</span></code></pre></td></tr></table></div></figure>


<p>到了零点后，移动一下下面的纸，看看效果好不好，如果好，我们就把纸去掉。如果不好，我们在重新调整3个点。</p>

<hr />

<p>现在进行打印测试：</p>

<p>导入模型后，进行配置：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485181657497.png" alt="Alt text" /></p>

<p>热床（bed）设置为60度：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485181688586.png" alt="Alt text" /></p>

<p>然后记得要保存：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485181702918.png" alt="Alt text" /></p>

<p>然后点击 <strong>开始切片Slic3r</strong> 按钮</p>

<hr />

<p>然后我们点击 <strong>开始任务</strong> 按钮。然后你可以看到挤出头和热床在升温：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485181816308.png" alt="Alt text" /></p>

<p>你可以看到，显示热床升温，挤出头不升温：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485181859693.png" alt="Alt text" /></p>

<p>等到热床升到指定温度后，出料器（就是挤出头往下降到3~5mm的地方，很接近热床的位置），挤出头开始升温：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485181959716.png" alt="Alt text" /></p>

<hr />

<p>好的，准备就绪后的温度：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485182107398.png" alt="Alt text" /></p>

<p>开始自动打印。</p>

<p>打印这个立方体大约需要13分钟：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485182137432.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485182148716.png" alt="Alt text" /></p>

<hr />

<p>坐等结果。</p>

<p>打印完了。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485182661586.png" alt="Alt text" /></p>

<p>注意：当完成后，不要记得去去模型。要等到热床和挤出头都冷却了，这个时候，我们在去取模型。</p>

<p>要是我们急于去取模型的话，模型这个时候还是热的，你用手取模型，模型会被你按变形的。并且，我们要等到挤出头和热床的温度降到常温，我们再在<strong>Repetier</strong>软件 点击 <strong>断开</strong> 按钮。其实我们就是为了能够看到这个挤出头和热床的实时温度。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485182870015.png" alt="Alt text" /></p>

<hr />

<hr />

<p>现在，已经降到了室温，起的时候很难起，我怕使太大的力气把热床底盘按得不在平衡了，但是不使太大的力气，又取不下来。</p>

<p>没有办法，我就只能使劲的掰，才能掰下来。所以，下次，我每次打印前需要校正。</p>

<p>我将其掰下来后，你可以看到下面的图片，底部好像是被压得变形了。可能的原因就是，我猜测就是热床的温度太高了。我现在将其设置为60度。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485183957977.png" alt="Alt text" /></p>

<p>不管总体来说比没有使用热床要好得多：（下图是之前打印的模型）</p>

<p><img src="http://aobojaing.github.io/images/2017-2-19-3D-printer-hot-bed/1485166773479.png" alt="Alt text" /></p>

<p>我要不把它设置为40度！试试看。 2017年1月23日23:12:28</p>

<p>也有可能是热床底盘的问题，它上面的三个螺丝可能应该在往下拧那么一点点的距离，可能就会好得多！</p>

<p>好的，今天的3D打印的事情就到这里了，明天，我就开始学习STL文件的模型建模。（SolidWorks软件）</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第一次 测试3D打印机 — 出现问题：打不出来]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/18/3D-printer-First-test-a-problem-not-print-out/"/>
    <updated>2017-02-18T22:12:49+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/18/3D-printer-First-test-a-problem-not-print-out</id>
    <content type="html"><![CDATA[<hr />

<p>可能的原因：</p>

<ul>
<li>料 出的少</li>
<li>没有热板，地板最好是热的，这样比较容易上料（打第一层的时候。）</li>
<li>温度没有掌握好</li>
<li>设置没有配置好</li>
<li>打第一层的时候，低板与出料头的距离太大。</li>
</ul>


<hr />

<p>2017-1-19 05:33:24</p>

<p>不管了，我这几天，3D打印方面，主要做的方面是：</p>

<ul>
<li>总结经验</li>
<li>学习建模型 &mdash; （3D 打印的六足机器人模型 和 URDF中六足机器人的虚拟模型。）</li>
</ul>


<hr />

<p>这个前几层打不上料的问题，现在视乎已经解决了。</p>

<p>解决方法就是，将底板与出料口的距离竟可以的缩短，最好做到0距离。</p>

<hr />

<p>但是现在还有一个问题：开始的时候挺好的，但打一会，就不再出料。这是怎么回事？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3D 打印大型模型时的经验和注意事项]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/18/3D-printer-experience-and-precautions-when-printing-large-models/"/>
    <updated>2017-02-18T22:09:58+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/18/3D-printer-experience-and-precautions-when-printing-large-models</id>
    <content type="html"><![CDATA[<hr />

<p>1 . 注意 需要注意电源线一定要插好，插牢，不可以断电了。</p>

<blockquote><p>我之前一次，就是，电源线插头由于没有插紧，打到一半的，断电了。</p></blockquote>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485307588623.png" alt="Alt text" /></p>

<hr />

<p>2 . 同时挤出料的步进电机的位置的PLA料线要下面这个样子摆放：</p>

<p>简单的说：就是，靠近挤出料步进电机的PLA线，它不可以在顶部框里面太多圈，最好、最理想的是一圈，就像下图这样：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485308021035.png" alt="Alt text" /></p>

<blockquote><p>错误的放法：（这是非常不可以的做法，因为这样会导致，在挤出PLA线的步进电机连接PLA线圈的那端的入口，入口出在运行一会儿的时间后，会出现死扣现象。）</p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485309295046.png" alt="Alt text" /></p></blockquote>

<p>3 . 同时要注意：要不断的转动：（逆时针转动）</p>

<blockquote><p>这样做的好处是：防止打印一段时间后，PLA线出现拧紧现象。</p></blockquote>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485307763855.png" alt="Alt text" /></p>

<hr />

<p>3 . 最好要使用SD卡，就是将生成的程序保存到SD卡里面，然后在使用读取SD卡的方式来进行打印。（详细的通过SD卡打印模型的介绍，请参考这篇笔记：使用SD卡打印模型）</p>

<blockquote><p>使用SD卡的好处是：</p>

<p>主要是这个软件的原因，如果我们不将生成的程序保存到SD卡上而是直接使用实时的方式，让电脑控制打印机，这个软件消耗的内存特别大：4700M多的内存，我的天啊，每次都是打印到不一会儿，就提示内存不足，然后软件自动异常关闭，然后打印就停止了。</p>

<p>而使用SD卡就可以解决这个问题：</p>

<p>你可以看到，现在所消耗的内存就很小了。属于正常的情况了。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485304742210.png" alt="Alt text" /></p></blockquote>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485303479812.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485303763458.png" alt="Alt text" /></p>

<hr />

<p>在SD卡启动打印，和在电脑启动打印，在开始的时候是一样的：先加入热床，然后出料口移动到热床位置，然后加入挤出口。热床的温度和挤出口的温度都达到了指定的温度后，就开始打印了。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485304615579.png" alt="Alt text" /></p>

<blockquote><p>但是使用SD卡时，比较奇怪的是：当先加热热床的时候，两个（热床和挤出口）都显示的是：关闭 状态。热床的当前温度在不断的上升，当热床达到指定温度后（显示方面，是不能判断热床是否加入热成功的。），热床还是显示为：关闭状态，它的<code>/</code>右侧仍然没有变成指定的指定温度。接着挤出头下降，挤出头开始升温。升到指定温度。打印机就开始工作了。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485304630660.png" alt="Alt text" /></p></blockquote>

<hr />

<p>得到的模型：</p>

<p>正面：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485310579275.png" alt="Alt text" /></p>

<p>反面：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485310602262.png" alt="Alt text" /></p>

<hr />

<p>用砂纸处理后：</p>

<p>正面：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485310642550.png" alt="Alt text" /></p>

<p>反面：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485310659869.png" alt="Alt text" /></p>

<hr />

<blockquote><p>简单的评论一下这个得到的模型：</p>

<p>下面不是很好，为什么不好呢。可能是因为圆环下面窄，中间宽，上面窄，所以开始打印的时候，是窄的，然后慢慢变宽。可能就是打印，从窄到宽这个过程，就得到的效果就不是很好。所以，就会出现现在得到的效果。</p>

<p>但是上面非常好，就是从宽到窄的一个过程，打印机打印的非常好。</p>

<p>所以，我推测，出现上面的下体打印效果差的原因可能有两个。</p>

<p>1 . 可能是打印机打印从窄到宽的模型部分时，效果就比较差。这是无法修复的，属于打印机的与生俱来的毛病。</p>

<p>2 . 也可能是因为，打印机打印接近底板地方的时候，打印的效果就是不怎么好。这个我们就可以修复它。</p>

<p>对于可能性2，我们需要通过实验来验证是不是这个原因。所以，我们又做了一个模型。</p>

<p>我们直接使用这个模型来验证：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485330460807.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485330717421.png" alt="Alt text" /></p>

<p>经过了接近两个小时的打印，得到了最终的结果：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485390402045.png" alt="Alt text | 480x0" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485390431885.png" alt="Alt text | 480x0" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485390455275.png" alt="Alt text | 480x0" /></p>

<p>从得到的结果，我们可以看到，从窄到宽的两个部分都不怎么好。</p>

<p>所以，我猜测最可能的原因就是因为：我的模型不够“光滑”。</p></blockquote>

<p>我重新设计一个模型：</p>

<p>这个模型，我分了很多面。（之前的只是横竖都是50个分面），现在是横竖都是255个分面。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485391232182.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485391327521.png" alt="Alt text" /></p>

<hr />

<p>现在打印看看效果：</p>

<p>你可以从打印的效果，可以看出：跟之前没有什么却别。并没有任何效果的提升。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485394881419.png" alt="Alt text" /></p>

<hr />

<p>我们再打印一个模型：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485403493320.png" alt="Alt text" /></p>

<p>如果模型有问题，你可以把模型上传到下面这个网络里面，进行修复。</p>

<p><a href="https://tools3d.azurewebsites.net/">https://tools3d.azurewebsites.net/</a></p>

<p><img src="http://aobojaing.github.io/images/2017-2-18-3D-printer-experience-and-precautions-when-printing-large-models/1485449251335.png" alt="Alt text" /></p>

<blockquote><p>或者是 Windows 10系统里面自带的软件：<strong>3D Builder</strong> 软件进行修复。（我的电脑是Windows 10 的，所以，我比较习惯使用这个<strong>3D Builder</strong>软件来修复我使用SolidWorks软件设计好的模型。）</p></blockquote>

<hr />

<h2>解决问题：当打印从小面积到大面积的模型部分的时候出现的打印效果很差问题</h2>

<p>解决办法就是：我现在习惯，不管我打印什么样的模型，我都习惯将模型倾斜45度角进行打印。这样可以有效的解决上面说的这个问题。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows上手动编译VTK源代码]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/11/Windows-Compile-vtk-source/"/>
    <updated>2017-02-11T08:25:21+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/11/Windows-Compile-vtk-source</id>
    <content type="html"><![CDATA[<hr />

<h1>下载 VTK （7.1.0 版本）</h1>

<p>下载网站：<a href="http://www.vtk.org/download/">http://www.vtk.org/download/</a></p>

<p>下载下面这个：大约40多M</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486664521880.png" alt="Alt text" /></p>

<hr />

<h2>使用CMake-GUI软件生成编译文件</h2>

<p>解压VTK。然后使用CMake-GUI软件，生成编译文件：</p>

<p>第一次点击 <strong>Configure</strong> 按钮，选择的编译器是：<strong>Visual Studio 10 2010</strong>（就是VS2010 软件 32位的），大约要执行3分多钟。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486667440556.png" alt="Alt text" /></p>

<p>出现了红色的条目。然后，在点击<strong>Configure</strong> 按钮一次。</p>

<p>不在有红色条目。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486667504849.png" alt="Alt text" /></p>

<p>点击<strong>Generate</strong> 按钮。</p>

<p>搞定：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486667544319.png" alt="Alt text" /></p>

<hr />

<h2>开始编译VTK：</h2>

<p>我们使用VS2010软件编译。使用VS2010软件打开下面的文件：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486667661222.png" alt="Alt text" /></p>

<p>点击生成：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486667698053.png" alt="Alt text" /></p>

<blockquote><p>VTK库是一个比较底层的库，它没有什么依赖库，所以编译VTK库是一件比较容易的事情。</p></blockquote>

<p>执行了30多分钟，现在，全部编译成功：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486669531270.png" alt="Alt text" /></p>

<hr />

<p>然后我们在生成 <strong>INSTALL</strong></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486670425630.png" alt="Alt text" /></p>

<p>有一个执行失败：失败的原因是：需要管理员权限。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486670387856.png" alt="Alt text" /></p>

<hr />

<p>解决办法：（参考网站：<a href="http://public.kitware.com/pipermail/vtkusers/2010-August/061898.html">这里</a>）</p>

<p>所以，我们现在关闭这个VS2010软件。打开CMake-GUI，重新生成编译文件：</p>

<p>我们将 <strong>CMAKE_INSTALL_PREFIX</strong> 条目设置为一个我们有权限新建文件的路径：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486671350467.png" alt="Alt text" /></p>

<p>再次点击 <strong>Configure</strong> 按钮。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486671408818.png" alt="Alt text" /></p>

<p>最后在点击 <strong>Generates</strong> 按钮。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486671440035.png" alt="Alt text" /></p>

<hr />

<p>现在点击：<strong>VTK.sln</strong> 文件</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486671467333.png" alt="Alt text" /></p>

<hr />

<p>对着<strong>ALL_BUILD</strong> 右键，点击 <strong>生成</strong></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486671511547.png" alt="Alt text" /></p>

<p>这次执行，也就5分钟左右。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486671854513.png" alt="Alt text" /></p>

<hr />

<p>现在，我们生成 <strong>INSTALL</strong> ：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486671928418.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486671904455.png" alt="Alt text" /></p>

<hr />

<p>然后，我们再将这个文件夹剪切到<code>C:\Program Files (x86)</code> 路径里面：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486672083636.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486672171677.png" alt="Alt text" /></p>

<p>我们需要将<code>\bin\</code> 路径（<code>C:\Program Files (x86)\VTK\bin</code>）添加到环境变量里面。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-Compile-vtk-source/1486672352228.png" alt="Alt text" /></p>

<hr />

<h2>搞定</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows 安装OpenNI2]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/11/Windows-install-OpenNI2/"/>
    <updated>2017-02-11T08:20:56+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/11/Windows-install-OpenNI2</id>
    <content type="html"><![CDATA[<hr />

<h2>下载</h2>

<p>到这个网站下载：<a href="https://structure.io/openni">https://structure.io/openni</a></p>

<p>我们下载 x86的，就是32位的。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-install-OpenNI2/1486673648122.png" alt="Alt text" /></p>

<p>下载完成后，解压：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-install-OpenNI2/1486673700821.png" alt="Alt text" /></p>

<hr />

<p>双击这个 <code>.msi</code> 文件，开始安装OpenNI2：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-install-OpenNI2/1486673740660.png" alt="Alt text" /></p>

<hr />

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-install-OpenNI2/1486673618477.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-install-OpenNI2/1486673750699.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-install-OpenNI2/1486673806305.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Windows-install-OpenNI2/1486673820166.png" alt="Alt text" /></p>

<h2></h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows 上 使用CMake-GUI 软件生成 Zlib 和 Png 库的编译文件，然后使用VS2010编译]]></title>
    <link href="http://aobojaing.github.io/blog/2017/02/11/Compile-zlib-and-png-using-CMake-GUI-and-VS2010/"/>
    <updated>2017-02-11T08:08:16+08:00</updated>
    <id>http://aobojaing.github.io/blog/2017/02/11/Compile-zlib-and-png-using-CMake-GUI-and-VS2010</id>
    <content type="html"><![CDATA[<hr />

<p>当我在编译Windows 上编译 PCL源代码的时候，它zlib库和png库的依赖，但是现在我的电脑里面并没有两个库。所以，我们现在就来手动的下载这两个库的源代码，然后亲自编译它们。</p>

<hr />

<p>参考网站：<a href="http://www.voidcn.com/blog/glunoy/article/p-6019106.html">http://www.voidcn.com/blog/glunoy/article/p-6019106.html</a></p>

<p>我现在知道了。png库是依赖于zlib库的。（所以我们需要先编译zlib库）</p>

<p>现在我们电脑里面已经有zlib库了（我也不知道这个库是正有还是假有。不过当我们下面使用CMake-GUI软件生成png库的时候，CMake-GUI软件自动的天添加了zlib库的include文件的路径。所以，现在，我们就姑且认为当前的电脑立里面已经存在zlib库了。（但是我们继续后面的步骤发现，其实电脑里面并没有zlib库。）），但是没有png库，我们现在需要下载源码并编译：</p>

<p>到这里png库官网下载：<a href="http://libpng.sourceforge.net/index.html">http://libpng.sourceforge.net/index.html</a></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486733756039.png" alt="Alt text" /></p>

<p>下载 <code>libpng16</code>库：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486733871091.png" alt="Alt text" /></p>

<p>下载，人下载最多的那个：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486733985739.png" alt="Alt text" /></p>

<p>接着是：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486734040450.png" alt="Alt text" /></p>

<p>下载后解压。</p>

<p>然后使用CMake-GUI软件生成编译文件：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486734198117.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486734205651.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486734211664.png" alt="Alt text" /></p>

<p>出现一个错误：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486734240388.png" alt="Alt text" /></p>

<p>错误的原因就是没有找到<code>ZLIB</code>库的链接文件：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486734281258.png" alt="Alt text" /></p>

<p>手动添加，这个两个（Debug 和 Release）都填写同一个文件：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486734344171.png" alt="Alt text" /></p>

<p>现在再点击 <strong>Configure</strong> 按钮。</p>

<p>没有错误了。但是现在有红色的条目：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486734380225.png" alt="Alt text" /></p>

<p>现在再点击一次 <code>Configure</code> 按钮。红色条目消失：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486734519705.png" alt="Alt text" /></p>

<p>现在点击 <strong>Generate</strong> 按钮生成编译文件：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486734548317.png" alt="Alt text" /></p>

<hr />

<p>现在开始使用VS2010软件编译：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486734582464.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486734726006.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486734698502.png" alt="Alt text" /></p>

<p>看来现在不行啊，我需要先下载并编译<code>zlib</code>库，然后在下载并编译<code>png</code>库。这才是正确的步骤。</p>

<hr />

<p>我们现在下载并编译zlib库：</p>

<p>下载zlib库源代码：</p>

<p>下载：<a href="https://sourceforge.net/projects/libpng/files/">https://sourceforge.net/projects/libpng/files/</a></p>

<p>依次的步骤是：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735206889.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735242472.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735278358.png" alt="Alt text" /></p>

<p>下载完成后，我使用7-zip软件对其进行了两次解压。</p>

<p>然后使用CMake-GUI软件给它生产编译文件：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735448018.png" alt="Alt text" /></p>

<p>点击 <strong>Configure</strong>按钮进行配置：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735463109.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735469279.png" alt="Alt text" /></p>

<p>没有出现错误，出现了红色的条目：</p>

<p>我们现在来仔细的看看<strong>INSTALL</strong>条目：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735527480.png" alt="Alt text" /></p>

<p>默认的添加的路径都是<code>C:\Program Files (x86)</code>。我们不能使用这个安装路径，原因是当我们一会在使用VS2010软件编译生成的编译文件的时候，会出现错误的，错误的原因是：没有权限。所以，我需要将这部分INSTALL条目的路径都修改为我们有权限的路径。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735689013.png" alt="Alt text" /></p>

<p>然后在点击 <strong>COnfigure</strong> 按钮。红色条目消失。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735739401.png" alt="Alt text" /></p>

<p>然后在点击 <strong>Generate</strong> 按钮。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735744957.png" alt="Alt text" /></p>

<hr />

<p>现在使用VS2010软甲打开刚刚生成的<code>.sln</code>文件：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735790730.png" alt="Alt text" /></p>

<p>生成：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735812669.png" alt="Alt text" /></p>

<p>很快，不到1秒钟就编译完成了：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735840702.png" alt="Alt text" /></p>

<p>然后对 <strong>INSTALL</strong>项目进行<strong>生成</strong></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735888551.png" alt="Alt text" /></p>

<p>也是秒速编译完成：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735908123.png" alt="Alt text" /></p>

<p>生成成功：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486735924463.png" alt="Alt text" /></p>

<p>现在，我们将这个生成的文件夹，剪切到<code>C:\third_packages</code>路径里面。（我自己的一个习惯，我喜欢将第三方库放在这个路径下。）</p>

<p>我们还需要将zlib库的png路径添加到系统的环境变量里面。</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486736460782.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486736449182.png" alt="Alt text" /></p>

<hr />

<p>现在我们可以将下面这两个文件夹给删除了。（一个是zlib的源代码。一个是zlib的编译文件）（当然，我们删除这两个文件夹之前，需要先关闭VS2010软件，因为刚刚VS2010软件一直在使用其中一个文件。CMake-GUI软件可以不用关闭，它不影响。）</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486736039738.png" alt="Alt text" /></p>

<hr />

<p>接下来，我们来编译 png库：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486736190279.png" alt="Alt text" /></p>

<p>修改zlib库（png库依赖于这个库）条目为正确的路径：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486736285036.png" alt="Alt text" /></p>

<p>现在点击 <strong>Configure</strong> 按钮。</p>

<p>红色的条目都消失了。现在有用一个点：我们需要注意这个安装路径：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486736543109.png" alt="Alt text" /></p>

<p>和zlib库是一样，我们需要给这个安装路径修改为一个我们可以控制的权限的路径。</p>

<p>修改为：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486736593446.png" alt="Alt text" /></p>

<p>现在点击 <strong>Configure</strong> 按钮，然后在点击 <strong>Generate</strong> 按钮：搞定</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486736628850.png" alt="Alt text" /></p>

<hr />

<p>现在使用VS2010软件对生成的编译文件进行编译：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486736678641.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486736696702.png" alt="Alt text" /></p>

<p>编译成功，一共没有用了3秒钟：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486736728357.png" alt="Alt text" /></p>

<hr />

<p>然后是编译 <strong>INSTALL</strong>项目：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486736754817.png" alt="Alt text" /></p>

<p>秒速编译完成：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486736783846.png" alt="Alt text" /></p>

<p>一样，我们将得到的文件夹剪切到 <code>C:\third_packages</code>这个路径里面。</p>

<p>然后将<code>png</code>路径添加到环境变量里面：</p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486736889900.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2017-2-11-Compile-zlib-and-png-using-CMake-GUI-and-VS2010/1486736877915.png" alt="Alt text" /></p>

<hr />

<p>最后一步就是清理战场：删除下面两个文件夹：（清理前，需要先关闭VS2010软件）</p>

<hr />

<p>好的，这样，zlib 和 png 这两个库就编译完成了。</p>

<h2>搞定</h2>
]]></content>
  </entry>
  
</feed>
