<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: wchar_t * | AoboSir 博客]]></title>
  <link href="http://aobojaing.github.io/tags/wchar-t-star/atom.xml" rel="self"/>
  <link href="http://aobojaing.github.io/"/>
  <updated>2017-02-21T01:19:40+08:00</updated>
  <id>http://aobojaing.github.io/</id>
  <author>
    <name><![CDATA[Aobo Jaing]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[C++ string 、char 、char *、wstring、wchar_t * 、wchar_t 之间的转换]]></title>
    <link href="http://aobojaing.github.io/blog/2016/12/16/cpp-convert-string-wstring-char-wchar_t-pointer/"/>
    <updated>2016-12-16T07:28:48+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/12/16/cpp-convert-string-wstring-char-wchar_t-pointer</id>
    <content type="html"><![CDATA[<hr />

<h2><code>char</code> 与 <code>wchar_t</code> 之间的转换</h2>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;iomanip&gt;

int main(void)
{
    char c = 'a';
    std::cout &lt;&lt; c &lt;&lt; std::endl;
    //char -&gt; wchar_t
    wchar_t wc = (wchar_t)c;
    std::cout &lt;&lt; "U+" &lt;&lt; std::setw(4) &lt;&lt; std::setfill('0') &lt;&lt; std::hex &lt;&lt; wc &lt;&lt; std::endl;
    //wchar_t -&gt; char
    char c_ = (char)wc;
    std::cout &lt;&lt; c_ &lt;&lt; std::endl;

    system("pause");
    return 0;
}
</code></pre>

<p>输出：</p>

<pre><code>a
U+0061
a
请按任意键继续. . .
</code></pre>

<blockquote><p>Unicode编码表：<a href="http://blog.csdn.net/fedawn/article/details/7307993">A-Z,a-z,0-9的unicode编码表</a></p></blockquote>

<h2><code>string</code> 与 <code>wstring</code> 之间的转换</h2>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;iomanip&gt;

int main(void)
{
    std::string str = "HelloWorld";
    std::cout &lt;&lt; str &lt;&lt; std::endl;
    //string -&gt; wstring
    std::wstring wstr;
    wstr.assign(str.begin(), str.end());
    // std::cout &lt;&lt; wstr.c_str() &lt;&lt; std::endl; //error 这样是打印不出来的
    //std::cout &lt;&lt; wstr.c_str() &lt;&lt; std::endl; //error 编译不报错，但是它打印的是wstr第一个字符的地址
    //打印 success
    std::cout &lt;&lt; "Unicode is ";
    for(int i=0; i&lt;wstr.length(); i++){
        std::cout &lt;&lt; "U+" &lt;&lt; std::setw(4) &lt;&lt; std::setfill('0') &lt;&lt; std::hex &lt;&lt; wstr[i] &lt;&lt; " ";
    }
    std::cout &lt;&lt; std::endl;
    //打印 end

    //wstring -&gt; string
    std::string str_;
    str_.assign(wstr.begin(), wstr.end());
    std::cout &lt;&lt; str_ &lt;&lt; std::endl;

    system("pause");
    return 0;
}
</code></pre>

<p>输出：</p>

<pre><code>HelloWorld
Unicode is U+0048 U+0065 U+006c U+006c U+006f U+0057 U+006f U+0072 U+006c U+0064
HelloWorld
请按任意键继续. . .
</code></pre>

<h2><code>char *</code> 与 <code>string</code> 之间的转换</h2>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;string&gt;

int main(void)
{
    std::string str = "HelloWorld";
    //string -&gt; char *
    char * cstr = (char *)str.c_str();
    std::cout &lt;&lt; cstr &lt;&lt; std::endl;
    //char * -&gt; string
    std::string str_ = cstr;
    std::cout &lt;&lt; str_ &lt;&lt; std::endl;

    system("pause");
    return 0;
}
</code></pre>

<p>输出：</p>

<pre><code>HelloWorld
HelloWorld
请按任意键继续. . .
</code></pre>

<h2><code>char *</code> 与 <code>wchar_t *</code> 之间的转换</h2>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;iomanip&gt;

int main(void)
{
    char * cstr = "HelloWorld";
    std::cout &lt;&lt; cstr &lt;&lt; std::endl;

    // char * -&gt; wchar_t *
    //wchar_t * wcstr = (wchar_t *)cstr; //error
    //success
    size_t len = strlen(cstr) + 1;
    size_t converted = 0;
    wchar_t *wcstr;
    wcstr=(wchar_t*)malloc(len*sizeof(wchar_t));
    mbstowcs_s(&amp;converted, wcstr, len, cstr, _TRUNCATE);

    //打印
    wchar_t * temp = wcstr;
    int i = 0;
    std::cout &lt;&lt; "Unicode is ";
    while(temp[i]!='\0'){
        std::cout &lt;&lt; "U+" &lt;&lt; std::setw(4) &lt;&lt; std::setfill('0') &lt;&lt; std::hex &lt;&lt; temp[i] &lt;&lt; " ";
        i++;
    }
    std::cout &lt;&lt; std::endl;
    //打印 end

    std::cout &lt;&lt; "------------------" &lt;&lt; std::endl;
    //-------------------------------------------------

    wchar_t * wcstr_ = L"HelloWorld";
    //打印
    wchar_t * temp_ = wcstr_;
    int i_ = 0;
    std::cout &lt;&lt; "Unicode is ";
    while(temp_[i_]!='\0'){
        std::cout &lt;&lt; "U+" &lt;&lt; std::setw(4) &lt;&lt; std::setfill('0') &lt;&lt; std::hex &lt;&lt; temp_[i_] &lt;&lt; " ";
        i_++;
    }
    std::cout &lt;&lt; std::endl;
    //打印 end

    //wchar_t * -&gt; char *
    size_t len_ = wcslen(wcstr_) + 1;
    size_t converted_ = 0;
    char * cstr_;
    cstr_ = (char*)malloc(len*sizeof(char));
    wcstombs_s(&amp;converted_, cstr_, len_, wcstr_, _TRUNCATE);
    std::cout &lt;&lt; cstr_ &lt;&lt; std::endl;

    system("pause");
    return 0;
}
</code></pre>

<p>输出：</p>

<pre><code>HelloWorld
Unicode is U+0048 U+0065 U+006c U+006c U+006f U+0057 U+006f U+0072 U+006c U+0064
------------------
Unicode is U+0048 U+0065 U+006c U+006c U+006f U+0057 U+006f U+0072 U+006c U+0064
HelloWorld
请按任意键继续. . .
</code></pre>

<blockquote><p>注意：</p>

<ul>
<li><code>cstr</code>、<code>wcstr</code>、<code>cstr_</code> 是地址变量，使用 <code>std::cout &lt;&lt; cstr_ &lt;&lt; std::endl;</code>代码打印的值是地址，并不是字符串的值。</li>
<li><code>wchar_t *</code> 与 <code>char *</code> 之间的转换，使用<code>wchar_t * wcstr = (wchar_t *)cstr;</code>是错误的。（异想天开）</li>
</ul>
</blockquote>

<h2><code>wchar_t *</code> 与 <code>wstring</code> 之间的转换</h2>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;iomanip&gt;

int main(void)
{
    std::wstring wstr = L"HelloWorld";
    //打印
    std::cout &lt;&lt; "Unicode is ";
    for(int i=0; i&lt;wstr.length(); i++){
        std::cout &lt;&lt; "U+" &lt;&lt; std::setw(4) &lt;&lt; std::setfill('0') &lt;&lt; std::hex &lt;&lt; wstr[i] &lt;&lt; " ";
    }
    std::cout &lt;&lt; std::endl;
    //打印 end
    //wstring -&gt; wchar_t *
    wchar_t * wcstr = (wchar_t *)wstr.c_str();
    //打印
    wchar_t * temp = wcstr;
    int i = 0;
    std::cout &lt;&lt; "Unicode is ";
    while(temp[i]!='\0'){
        std::cout &lt;&lt; "U+" &lt;&lt; std::setw(4) &lt;&lt; std::setfill('0') &lt;&lt; std::hex &lt;&lt; temp[i] &lt;&lt; " ";
        i++;
    }
    std::cout &lt;&lt; std::endl;
    //打印 end
    //wchar_t * -&gt; wstring
    std::wstring wstr_ = wcstr;
    //打印
    std::cout &lt;&lt; "Unicode is ";
    for(int i=0; i&lt;wstr_.length(); i++){
        std::cout &lt;&lt; "U+" &lt;&lt; std::setw(4) &lt;&lt; std::setfill('0') &lt;&lt; std::hex &lt;&lt; wstr_[i] &lt;&lt; " ";
    }
    std::cout &lt;&lt; std::endl;
    //打印 end

    system("pause");
    return 0;
}
</code></pre>

<p>输出：</p>

<pre><code>Unicode is U+0048 U+0065 U+006c U+006c U+006f U+0057 U+006f U+0072 U+006c U+0064
Unicode is U+0048 U+0065 U+006c U+006c U+006f U+0057 U+006f U+0072 U+006c U+0064
Unicode is U+0048 U+0065 U+006c U+006c U+006f U+0057 U+006f U+0072 U+006c U+0064
请按任意键继续. . .
</code></pre>

<hr />

<h2><code>wchar_t *</code> 与 <code>string</code> 之间的转换</h2>

<p>知道了上面的几种转换，我们就可以通过组合它们，来实现，比如：<code>wchar_t *</code> 与 <code>string</code> 之间的转换。</p>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;iomanip&gt;

int main(void)
{
    std::wstring wstr = L"HelloWorld";
    wchar_t * wcstr = (wchar_t *)wstr.c_str();
    //打印
    wchar_t * temp = wcstr;
    int i = 0;
    std::cout &lt;&lt; "Unicode is ";
    while(temp[i]!='\0'){
        std::cout &lt;&lt; "U+" &lt;&lt; std::setw(4) &lt;&lt; std::setfill('0') &lt;&lt; std::hex &lt;&lt; temp[i] &lt;&lt; " ";
        i++;
    }
    std::cout &lt;&lt; std::endl;
    //打印 end

    //wchar_t * -&gt; string (wchar_t * -&gt; wstring -&gt; string)
    std::wstring wstr_ = wcstr;
    std::string str;
    str.assign(wstr_.begin(), wstr_.end());
    std::cout &lt;&lt; str &lt;&lt; std::endl;
    //string -&gt; wchar_t * (string -&gt; wstring -&gt; wchar_t *)
    wstr_.assign(str.begin(), str.end());
    wchar_t * wcstr_ = (wchar_t *)wstr_.c_str();
    //打印
    wchar_t * temp_ = wcstr;
    int i_ = 0;
    std::cout &lt;&lt; "Unicode is ";
    while(temp_[i_]!='\0'){
        std::cout &lt;&lt; "U+" &lt;&lt; std::setw(4) &lt;&lt; std::setfill('0') &lt;&lt; std::hex &lt;&lt; temp_[i_] &lt;&lt; " ";
        i_++;
    }
    std::cout &lt;&lt; std::endl;
    //打印 end

    system("pause");
    return 0;
}
</code></pre>

<p>输出：</p>

<pre><code>Unicode is U+0048 U+0065 U+006c U+006c U+006f U+0057 U+006f U+0072 U+006c U+0064
HelloWorld
Unicode is U+0048 U+0065 U+006c U+006c U+006f U+0057 U+006f U+0072 U+006c U+0064
请按任意键继续. . .
</code></pre>

<hr />
]]></content>
  </entry>
  
</feed>
