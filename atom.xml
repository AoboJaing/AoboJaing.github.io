<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[AoboSir 博客]]></title>
  <link href="http://aobojaing.github.io/atom.xml" rel="self"/>
  <link href="http://aobojaing.github.io/"/>
  <updated>2016-12-01T09:03:54+08:00</updated>
  <id>http://aobojaing.github.io/</id>
  <author>
    <name><![CDATA[Aobo Jaing]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Learning Python 024 判断文件和文件夹是否存在]]></title>
    <link href="http://aobojaing.github.io/blog/2016/12/01/determine-whether-files-and-folders-exist/"/>
    <updated>2016-12-01T08:46:09+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/12/01/determine-whether-files-and-folders-exist</id>
    <content type="html"><![CDATA[<h1>Learning Python 024 判断文件和文件夹是否存在 &mdash; Over &mdash; 2016年12月1日 星期四</h1>

<p>@(Learning Python)</p>

<hr />

<ul>
<li>使用的电脑系统：Windows 10 64位</li>
<li>使用的开发集成环境：PyCharm 2016.1.4</li>
<li>使用的Python的版本：python2.7.10 或者 python 3.5.0</li>
</ul>


<hr />

<h2>判断文件</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="s">r&#39;D:\WorkSpace\test_ws\ao.txt&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>或者下面的代码。（这两种方式是对于判断一个文件是否存在是等价的。）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="s">r&#39;D:\WorkSpace\test_ws\ao.txt&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>判断文件夹</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="s">r&#39;D:\WorkSpace\test_ws&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git(GitHub) 002 如何在GitHub for Windows 软件上为代码库创建一个版本标签]]></title>
    <link href="http://aobojaing.github.io/blog/2016/12/01/GitHub-For-Windows-Adding-tag/"/>
    <updated>2016-12-01T08:04:17+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/12/01/GitHub-For-Windows-Adding-tag</id>
    <content type="html"><![CDATA[<hr />

<p>参考网站：</p>

<ul>
<li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001376951758572072ce1dc172b4178b910d31bc7521ee4000">git 创建标签</a></li>
<li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001376951885068a0ac7d81c3a64912b35a59b58a1d926b000">git 操作标签</a></li>
<li><a href="http://stackoverflow.com/questions/13862517/github-for-windows-adding-tags">Github for Windows - Adding tags</a></li>
</ul>


<hr />

<p>要想给代码库贴标签，Github For Windows 软件上没没有这个按钮。你需要在Github For Windows 软件上打开 <strong>Git 命令行窗口</strong>，还是要使用命令行工具来完成这个工作。</p>

<p><img src="http://aobojaing.github.io/images/2016-12-1-GitHub-For-Windows-Adding-tag/1480548346142.png" alt="Alt text" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git tag -a v1.0 -m "description information"
</span><span class='line'>git push origin v1.0</span></code></pre></td></tr></table></div></figure>


<hr />

<p>当你执行完<code>git tag -a v1.0 -m "description information"</code>，想要查看一下，你可以执行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git show v1.0</span></code></pre></td></tr></table></div></figure>


<p>如果你执行完<code>git tag -a v1.0 -m "description information"</code>，想要删除这个标签，可以执行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git tag -d v1.0</span></code></pre></td></tr></table></div></figure>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Python 023 类编程]]></title>
    <link href="http://aobojaing.github.io/blog/2016/12/01/class-programming-object/"/>
    <updated>2016-12-01T07:03:26+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/12/01/class-programming-object</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>使用的电脑系统：Windows 10 64位</li>
<li>使用的开发集成环境：PyCharm 2016.1.4</li>
<li>使用的Python的版本：python 3.5.0</li>
</ul>


<hr />

<h1>怎么使用python编写一个 <strong>类</strong></h1>

<p>参考网站：<a href="http://python3-cookbook.readthedocs.io/zh_CN/latest/c08/p01_change_string_representation_of_instances.html">Python3-cookbook 类与对象</a></p>

<p>随便编写一个Python类，类里面至少有下面三个函数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">Pair</span><span class="p">:</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">x</span> <span class="o">=</span> <span class="n">x</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">y</span> <span class="o">=</span> <span class="n">y</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&#39;Pair({0.x!r}, {0.y!r})&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&#39;({0.x!s}, {0.y!s})&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>__init__()</code> 函数就是类的构造函数。</li>
<li><code>__repr__()</code>  和 <code>__str__()</code> 函数 都是用来输出字符串用的。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">p</span> <span class="o">=</span> <span class="n">Pair</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">p</span>
</span><span class='line'><span class="n">Pair</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span> <span class="c"># __repr__() output</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">p</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span> <span class="c"># __str__() output</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Python 022 调用DOS命令 --- 实例：调用Windows里面的copy命令]]></title>
    <link href="http://aobojaing.github.io/blog/2016/12/01/python-DOS-system-windows-Command-Line-os/"/>
    <updated>2016-12-01T05:47:12+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/12/01/python-DOS-system-windows-Command-Line-os</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>使用的电脑系统：Windows 10 64位</li>
<li>使用的开发集成环境：PyCharm 2016.1.4</li>
<li>使用的Python的版本：python 2.7.10 和 python 3.5.0</li>
</ul>


<hr />

<blockquote><p>本篇博客对 Python2 和 Python3 都适用。</p></blockquote>

<hr />

<h2>实例：调用Windows里面的<code>copy</code>命令</h2>

<p>比如现在，我想把这个路径<code>F:\原文件夹</code>里面的所有文件复制到这个路径<code>F:\目标文件夹</code>里面。可以在<strong>DOS</strong>命令行窗口里面执行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>copy "F:\原文件夹\*" "F:\目标文件夹\"</span></code></pre></td></tr></table></div></figure>


<p>所以，我们要使用Python调用DOS命令行工具的步骤就两步：</p>

<ol>
<li>构造命令字符串。</li>
<li>使用<code>os.system()</code>函数执行命令字符串。</li>
</ol>


<hr />

<p>我们使用python调用Windows系统DOS命令行里面的<strong>copy</strong>工具来进行文件的复制。代码如下：</p>

<p>适合在Python3中执行的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'>
</span><span class='line'><span class="n">org_folder</span> <span class="o">=</span> <span class="s">r&#39;F:\原文件夹&#39;</span>
</span><span class='line'><span class="n">res_folder</span> <span class="o">=</span> <span class="s">r&#39;F:\目标文件夹&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 构造命令字符串</span>
</span><span class='line'><span class="n">copy_command</span> <span class="o">=</span> <span class="s">&#39;copy &quot;&#39;</span> <span class="o">+</span> <span class="n">org_folder</span> <span class="o">+</span> <span class="s">r&#39;\*&quot; &quot;&#39;</span> <span class="o">+</span> <span class="n">res_folder</span> <span class="o">+</span> <span class="s">r&#39;\&quot;&#39;</span>
</span><span class='line'><span class="c"># copy_command = copy_command.decode(&#39;utf-8&#39;).encode(&#39;GB18030&#39;)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">copy_command</span><span class="p">)</span> <span class="c"># 如果你使用的是Python2，需要将这一行的注释去掉。</span>
</span><span class='line'><span class="c"># print(copy_command)</span>
</span><span class='line'><span class="c"># 使用os.system()函数执行命令字符串</span>
</span><span class='line'><span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="n">copy_command</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的代码如果在python2中执行，不将第10行的注释去掉的话，会因为字符串编码和解码的不正确问题，导致系统找不到指定的路径。：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">copy</span> <span class="s">&quot;F:\鍘熸枃浠跺す\*&quot;</span> <span class="s">&quot;F:\鐩爣鏂囦欢澶筡&quot;</span>
</span><span class='line'><span class="err">系统找不到指定的路径。</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>经验：我发现了两件事：</h2>

<p><strong>第一件事 .</strong> 在<strong>DOS</strong> 里面，执行下面的命令，有的是对的，有的是错的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># Succesfull</span>
</span><span class='line'><span class="n">copy</span> <span class="s">&quot;F:\原文件夹\*&quot;</span> <span class="s">&quot;F:\目标文件夹</span><span class="se">\&quot;</span>
</span><span class='line'><span class="c"># Succesfull</span>
</span><span class='line'><span class="n">copy</span> <span class="s">&quot;F:\原文件夹</span><span class="se">\\</span><span class="s">*&quot;</span> <span class="s">&quot;F:\目标文件夹</span><span class="se">\\</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># error</span>
</span><span class='line'><span class="n">copy</span> <span class="s">&quot;F:/原文件夹/*&quot;</span> <span class="s">&quot;F:/目标文件夹/&quot;</span>
</span><span class='line'><span class="c"># error</span>
</span><span class='line'><span class="n">copy</span> <span class="s">&quot;F://原文件夹//*&quot;</span> <span class="s">&quot;F://目标文件夹//&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>总结：</p>

<ol>
<li><code>\</code>是一个特殊字符，它不能再字符串中正常的显示，如果必须显示，就这样写：<code>\\</code></li>
<li><strong>DOS</strong> 命令里面指定文件路径时，只能使用<code>\</code>，不能使用<code>/</code> 和 <code>//</code> ，使用这两个都是错的，都会导致 <strong>DOS</strong>找不到指定的文件路径</li>
<li>在<strong>DOS</strong> 命令里面，指定文件路径的 <code>\</code> ，你写成 <code>\\</code> 或者 <code>\\\</code> 或者 <code>\\\\\\</code> &hellip; 对是可以正常执行的，不会出现错误。</li>
</ol>


<hr />

<p><strong>第二件事 .</strong> 同时，我发现：</p>

<p>python 的字符串前面加上<code>r</code>，说明这个字符串是<code>raw string</code>，即无需转义的字符串，意思就是这个字符串里面有什么就是什么。</p>

<p>但是我发现了python的一个bug：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># error</span>
</span><span class='line'><span class="nb">str</span> <span class="o">=</span> <span class="s">r&#39;D:\WorkSpace\test_ws</span><span class="se">\&#39;</span>
</span><span class='line'><span class="c"># 经验：就算是在字符串前面加上了 r ，字符串最后一个字符也不能是 /</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># succes</span>
</span><span class='line'><span class="nb">str</span> <span class="o">=</span> <span class="s">r&#39;D:\WorkSpace\test_ws</span><span class="se">\\</span><span class="s">&#39;</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>
</span><span class='line'><span class="c"># 输出：D:\WorkSpace\test_ws\\</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># succes,但是不是我们要的结果</span>
</span><span class='line'><span class="nb">str</span> <span class="o">=</span> <span class="s">&#39;D:\WorkSpace</span><span class="se">\t</span><span class="s">est_ws</span><span class="se">\\</span><span class="s">&#39;</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>
</span><span class='line'><span class="c"># 输出：D:\WorkSpace   est_ws\</span>
</span></code></pre></td></tr></table></div></figure>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Python 021 创建文件夹、创建文件]]></title>
    <link href="http://aobojaing.github.io/blog/2016/12/01/python-create-file-create-folder-open/"/>
    <updated>2016-12-01T04:45:53+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/12/01/python-create-file-create-folder-open</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>使用的电脑系统：Windows 10 64位</li>
<li>使用的开发集成环境：PyCharm 2016.1.4</li>
<li>使用的Python的版本：python 2.7.10 和 python 3.5.0</li>
</ul>


<hr />

<blockquote><p>本篇博客对 Python2 和 Python3 都适用。</p></blockquote>

<h2>Python 创建文件夹</h2>

<p>参考网站：</p>

<ul>
<li><a href="http://www.qttc.net/201209207.html">Python创建目录文件夹</a></li>
<li><a href="http://www.cnblogs.com/zhoujie/archive/2013/04/10/python7.html">python学习笔记（七）——文件和目录操作</a></li>
</ul>


<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'>
</span><span class='line'><span class="n">folder_name</span> <span class="o">=</span> <span class="s">&#39;2016-11-27-demo&#39;</span>
</span><span class='line'><span class="n">root_directory</span> <span class="o">=</span> <span class="s">&#39;D:/WorkSpace/test_ws/&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">root_directory</span><span class="o">+</span><span class="n">folder_name</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>注意：如果想要创建的文件夹是已经存在的，那么执行上面的程序会出现下面的错误：<code>FileExistsError: [WinError 183] 当文件已存在时，无法创建该文件。</code></p></blockquote>

<p>所以这段代码容易出现错误：如果文件夹已存在或者文件夹名中有不允许使用的字符时，<code>os.mkdir()</code>函数都会执行失败。所以，这段代码需要进行异常处理：</p>

<p>参考网站：<a href="http://www.runoob.com/python/python-exceptions.html">Python 异常处理</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">root_directory</span><span class="o">+</span><span class="n">folder_name</span><span class="p">)</span>
</span><span class='line'><span class="k">except</span> <span class="ne">OSError</span><span class="p">:</span>
</span><span class='line'>    <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样，在运行程序的时候就不会再出现错误了。但是当你给定的文件名中有非法字符时，创建文件夹是不会成功的，但是程序不会报错。</p>

<h2>Python 创建文件</h2>

<p>参考网站：<a href="https://blog.linuxeye.com/365.html">Python文件处理 open()</a></p>

<p>比如你想在<code>F:\</code>根目录里面创建一个名为 <code>data.txt</code> 文件，你可以这样做：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">file_path</span> <span class="o">=</span> <span class="s">r&#39;F:\data.txt&#39;</span>
</span><span class='line'><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>第二个参数 <code>'w'</code> 也可以写成：<code>'wt'</code>。它们等价。</p>

<p>或者</p>

<p>如果你想创建以指定编码的文件，请参考这篇博客：<a href="http://www.aobosir.com/blog/2016/11/29/python-open-save-file-specify-encoding-utf-8/">写文件时，将其用指定的编码方式保存（比如：UTF-8无BOM编码方式）</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Python 020 Pass 的用法]]></title>
    <link href="http://aobojaing.github.io/blog/2016/12/01/python-pass/"/>
    <updated>2016-12-01T04:12:13+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/12/01/python-pass</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>使用的电脑系统：Windows 10 64位</li>
<li>使用的开发集成环境：PyCharm 2016.1.4</li>
<li>使用的Python的版本：python 2.7.10 和 python 3.5.0</li>
</ul>


<hr />

<h2>pass 的用法</h2>

<p>参考网站：<a href="http://www.runoob.com/python/python-pass-statement.html">Python pass 语句</a></p>

<blockquote><p>Python2 和 Python3 中 pass 的用法都是一样的。</p></blockquote>

<p><code>pass</code> 就是一个空语句，没有任何实际意义，作用是保存程序结构的完整性。</p>

<p>因为Python不像C/C++语言那样，定义一个代码块使用 <code>{}</code>。Python是使用<strong>缩进</strong>的形式来表述一个代码块的。</p>

<p>比如说想C语言里面的下面这段代码，如果换成Python，怎么写呢？</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">){</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>换成Python，这样写：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>  <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Python 019 生成器（Generators）和 Yield]]></title>
    <link href="http://aobojaing.github.io/blog/2016/11/30/python2-python3-Generators-yield/"/>
    <updated>2016-11-30T23:17:17+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/11/30/python2-python3-Generators-yield</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>使用的电脑系统：Windows 10 64位</li>
<li>使用的开发集成环境：PyCharm 2016.1.4</li>
<li>使用的Python的版本：python 2.7.10 和 python 3.5.0</li>
</ul>


<hr />

<h2>知识点：生成器</h2>

<p><a href="http://python3-cookbook.readthedocs.io/zh_CN/latest/c04/p03_create_new_iteration_with_generators.html">生成器只能用于迭代操作。</a></p>

<p>一个函数，其中带 <code>yield</code>    关键字的代码，它不会执行，只是记下有这个操作；其他代码正常的执行。而被记下的这些操作会像队列一样存起来，这个“队列”就是 <strong>生成器</strong>，并且会类似于<code>return</code>一样返回。</p>

<p>一个函数的代码里面有 <code>yield</code> 关键字，那么这个函数就是一个<strong>制造生成器的函数</strong>。</p>

<blockquote><p>生成器是Python中的高级特性。我之前学习过，还写了一个博客：<a href="http://blog.csdn.net/github_35160620/article/details/51985596?locationNum=1&amp;fps=1">Learning Python 011 高级特性 2</a></p></blockquote>

<hr />

<h2>Python3 例子</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">def</span> <span class="nf">f</span><span class="p">():</span>
</span><span class='line'><span class="o">...</span>     <span class="k">yield</span> <span class="mi">1</span>
</span><span class='line'><span class="o">...</span>     <span class="k">yield</span> <span class="mi">2</span>
</span><span class='line'><span class="o">...</span>     <span class="k">yield</span> <span class="mi">3</span>
</span><span class='line'><span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">g</span> <span class="o">=</span> <span class="n">f</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">g</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">generator</span> <span class="nb">object</span> <span class="n">f</span> <span class="n">at</span> <span class="mh">0x0000023B63151258</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">type</span><span class="p">(</span><span class="n">g</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="k">class</span> <span class="err">&#39;</span><span class="nc">generator</span><span class="s">&#39;&gt;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">g</span><span class="p">)</span>
</span><span class='line'><span class="mi">1</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">g</span><span class="p">)</span>
</span><span class='line'><span class="mi">2</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">g</span><span class="p">)</span>
</span><span class='line'><span class="mi">3</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">g</span><span class="p">)</span>
</span><span class='line'><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;&lt;stdin&gt;&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
</span><span class='line'><span class="ne">StopIteration</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">list</span><span class="p">(</span><span class="n">g</span><span class="p">)</span>
</span><span class='line'><span class="p">[]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">g</span> <span class="o">=</span> <span class="n">f</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">list</span><span class="p">(</span><span class="n">g</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">list</span><span class="p">(</span><span class="n">g</span><span class="p">)</span>
</span><span class='line'><span class="p">[]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">def</span> <span class="nf">counter</span><span class="p">(</span><span class="n">num</span><span class="p">):</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span><span class="p">(</span><span class="s">&#39;Run to the &#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">num</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39; yield&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">def</span> <span class="nf">f</span><span class="p">():</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span><span class="p">(</span><span class="s">&#39;start!&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>     <span class="k">yield</span> <span class="n">counter</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>     <span class="k">yield</span> <span class="n">counter</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>     <span class="k">yield</span> <span class="n">counter</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span><span class="p">(</span><span class="s">&#39;Done!&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">g</span> <span class="o">=</span> <span class="n">f</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">g</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">generator</span> <span class="nb">object</span> <span class="n">f</span> <span class="n">at</span> <span class="mh">0x000001D4843E1258</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">g</span><span class="p">)</span>
</span><span class='line'><span class="n">start</span><span class="err">!</span>
</span><span class='line'><span class="n">Run</span> <span class="n">to</span> <span class="n">the</span> <span class="mi">1</span> <span class="k">yield</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">g</span><span class="p">)</span>
</span><span class='line'><span class="n">Run</span> <span class="n">to</span> <span class="n">the</span> <span class="mi">2</span> <span class="k">yield</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">g</span><span class="p">)</span>
</span><span class='line'><span class="n">Run</span> <span class="n">to</span> <span class="n">the</span> <span class="mi">3</span> <span class="k">yield</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">g</span><span class="p">)</span>
</span><span class='line'><span class="n">Done</span><span class="err">!</span>
</span><span class='line'><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;&lt;stdin&gt;&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
</span><span class='line'><span class="ne">StopIteration</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">list</span><span class="p">(</span><span class="n">g</span><span class="p">)</span>
</span><span class='line'><span class="p">[]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">g</span> <span class="o">=</span> <span class="n">f</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">list</span><span class="p">(</span><span class="n">g</span><span class="p">)</span>
</span><span class='line'><span class="n">start</span><span class="err">!</span>
</span><span class='line'><span class="n">Run</span> <span class="n">to</span> <span class="n">the</span> <span class="mi">1</span> <span class="k">yield</span>
</span><span class='line'><span class="n">Run</span> <span class="n">to</span> <span class="n">the</span> <span class="mi">2</span> <span class="k">yield</span>
</span><span class='line'><span class="n">Run</span> <span class="n">to</span> <span class="n">the</span> <span class="mi">3</span> <span class="k">yield</span>
</span><span class='line'><span class="n">Done</span><span class="err">!</span>
</span><span class='line'><span class="p">[</span><span class="bp">None</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="bp">None</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Python2 实例</h2>

<p>生成器在 python2 的用法和在python3中的用法一样，唯一的区别是：</p>

<ul>
<li>python2 中 可以使用<code>next(g)</code> 或者 <code>g.next()</code>。 这样两个等价</li>
<li>python3 中 只有<code>next(g)</code>，没有<code>g.next()</code>。</li>
</ul>


<hr />

<p>参考网站：<a href="http://wiki.jikexueyuan.com/project/start-learning-python/215.html">生成器</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Python 018 Python2 和 Python3 中 Range()函数的使用]]></title>
    <link href="http://aobojaing.github.io/blog/2016/11/30/python2-python3-range-function/"/>
    <updated>2016-11-30T13:37:04+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/11/30/python2-python3-range-function</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>使用的电脑系统：Windows 10 64位</li>
<li>使用的开发集成环境：PyCharm 2016.1.4</li>
<li>使用的Python的版本：python 2.7.10 和 python 3.5.0</li>
</ul>


<hr />

<h2><code>range()</code> 函数</h2>

<ul>
<li>Python2中：用来创建一个列表（list）。</li>
<li>Python3中：用来创建一个可以生成list或者tuple的生成器。</li>
</ul>


<h2>Python2 <code>range()</code>函数 知识点</h2>

<p>Python2 中的<code>range()</code> 函数可以生成一个list。（分配内存空间）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="c"># [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="c"># [4, 5, 6, 7, 8, 9]</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Python2 中的<code>xrange()</code>函数不是生成一个list，而是生成一个生成器，不分配内存。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="c"># xrange(10)</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">xrange</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
</span><span class='line'><span class="c"># [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span>
</span><span class='line'><span class="n">c</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">xrange</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
</span><span class='line'><span class="c"># (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Python3 <code>range()</code>函数 知识点</h2>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="c"># range(0, 10)</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出：（打印出来的不是一个列表，而是一个生成器）。</p>

<p>Python3 选择这样做的原因：可以节约内存空间，详情请参考这篇博客：<a href="http://www.aobosir.com/blog/2016/11/30/python2-python3-Memory-release-gc/">Python2和Python3的内存释放</a>。</p>

<p>Python3中的<code>range()</code>函数的功能和Python2中的<code>xrange()</code>函数一样，所以在Python3中没有<code>xrange()</code>函数。</p>

<hr />

<p>要想生成<strong>list</strong>或者<strong>tuple</strong>，这样做：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
</span><span class='line'><span class="c"># [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span>
</span><span class='line'><span class="c"># [4, 5, 6, 7, 8, 9]</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
</span><span class='line'><span class="c"># (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span>
</span><span class='line'><span class="c"># (4, 5, 6, 7, 8, 9)</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2><code>range()</code>函数的使用</h2>

<p>下面这段代码在Python2 和 Python3中得到的运行结果都是一样的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="mi">0</span>
</span><span class='line'><span class="mi">1</span>
</span><span class='line'><span class="mi">2</span>
</span><span class='line'><span class="mi">3</span>
</span><span class='line'><span class="mi">4</span>
</span><span class='line'><span class="mi">5</span>
</span><span class='line'><span class="mi">6</span>
</span><span class='line'><span class="mi">7</span>
</span><span class='line'><span class="mi">8</span>
</span><span class='line'><span class="mi">9</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行结果是一样的，但是运行的原理不同：</p>

<ul>
<li>Python2：在第一次执行 <code>range(10)</code>，就生成了一个<code>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</code>列表。</li>
<li>Python3：在每次执行<code>range(10)</code>时，生成一个元素<code>i</code>。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Python 017 — Python2 和 Python3 的内存释放]]></title>
    <link href="http://aobojaing.github.io/blog/2016/11/30/python2-python3-Memory-release-gc/"/>
    <updated>2016-11-30T13:34:56+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/11/30/python2-python3-Memory-release-gc</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>使用的电脑系统：Windows 10 64位</li>
<li>使用的开发集成环境：PyCharm 2016.1.4</li>
<li>使用的Python的版本：python 2.7.10 和 python 3.5.0</li>
</ul>


<hr />

<h2>学习Python的内存释放知识点的动机</h2>

<p>之前我学过很多Python的程序，偶然的一次，我打开任务管理器，看到我写的程序，运行时占用了大量的内存，所以，我希望学会如何释放内存，来优化我的程序，也不给电脑照成太大的负担，所以，我想学会：Python的内存释放这个知识点。</p>

<hr />

<p>参考网站： <a href="http://qinqianshan.com/python-memory-the-gc-module-released/">gc模块–Python内存释放</a></p>

<p>下面写几个实验程序，里面都是使用<code>range()</code> 函数来分配内存空间的。<code>range()</code>函数的详细介绍，请见这篇博客：<a href="http://www.aobosir.com/blog/2016/11/30/python2-python3-range-function/">range()函数在python2 和 python3中的使用介绍</a>。</p>

<h2>Python2 内存释放</h2>

<p>未优化前的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1000</span><span class="o">*</span><span class="mi">10000</span><span class="p">)</span>
</span><span class='line'><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>  <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-11-30-python2-python3-Memory-release-gc/1480424648330.png" alt="Alt text" /></p>

<hr />

<p>优化内存的代码：</p>

<p>使用手动释放内存的方法来优化内存。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">gc</span>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1000</span><span class="o">*</span><span class="mi">10000</span><span class="p">)</span>
</span><span class='line'><span class="k">del</span> <span class="n">a</span>
</span><span class='line'><span class="n">gc</span><span class="o">.</span><span class="n">collect</span><span class="p">()</span>
</span><span class='line'><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>  <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看出，占用的内存空间明显减小了。</p>

<p><img src="http://aobojaing.github.io/images/2016-11-30-python2-python3-Memory-release-gc/1480424705571.png" alt="Alt text" /></p>

<hr />

<p>既优化了内存，也优化了CPU 的代码</p>

<p>使用睡眠来优化CPU运行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">gc</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1000</span><span class="o">*</span><span class="mi">10000</span><span class="p">)</span>
</span><span class='line'><span class="k">del</span> <span class="n">a</span>
</span><span class='line'><span class="n">gc</span><span class="o">.</span><span class="n">collect</span><span class="p">()</span>
</span><span class='line'><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>  <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">1.0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-11-30-python2-python3-Memory-release-gc/1480424877933.png" alt="Alt text" /></p>

<hr />

<h2>Python3 内存释放</h2>

<p>未优化前的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1000</span><span class="o">*</span><span class="mi">10000</span><span class="p">)</span>
</span><span class='line'><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>  <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用Python3库运行未优化的代码，所需要的消耗的内存空间和使用Python2运行优化内存的代码消耗的内存空间 差不多。</p>

<p><img src="http://aobojaing.github.io/images/2016-11-30-python2-python3-Memory-release-gc/1480433041923.png" alt="Alt text" /></p>

<hr />

<p>优化内存的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">gc</span>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1000</span><span class="o">*</span><span class="mi">10000</span><span class="p">)</span>
</span><span class='line'><span class="k">del</span> <span class="n">a</span>
</span><span class='line'><span class="n">gc</span><span class="o">.</span><span class="n">collect</span><span class="p">()</span>
</span><span class='line'><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>  <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看出，所暂用的内存空间没有任何增减。</p>

<p><img src="http://aobojaing.github.io/images/2016-11-30-python2-python3-Memory-release-gc/1480432975323.png" alt="Alt text" /></p>

<hr />

<p>既优化了内存，也优化了CPU 的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">gc</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1000</span><span class="o">*</span><span class="mi">10000</span><span class="p">)</span>
</span><span class='line'><span class="k">del</span> <span class="n">a</span>
</span><span class='line'><span class="n">gc</span><span class="o">.</span><span class="n">collect</span><span class="p">()</span>
</span><span class='line'><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>  <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">1.0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-11-30-python2-python3-Memory-release-gc/1480432888777.png" alt="Alt text" /></p>

<hr />

<h2>总结</h2>

<p>Python3 真的是比 Python2 更加的完善了，从这一点上也可以看出来，Python语言是第4代语言里面非常杰出的语言。随着它的不断发展，它会运行速度慢和内存消耗大的缺点会慢慢的消失（因为：<a href="http://python3-cookbook.readthedocs.io/zh_CN/latest/chapters/p15_c_extensions.html">许多Python内置库是用C语言写的</a>）。我看好Python。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Python 016 写文件时，将其用指定的编码方式保存（比如：UTF-8无BOM编码方式）]]></title>
    <link href="http://aobojaing.github.io/blog/2016/11/29/python-open-save-file-specify-encoding-utf-8/"/>
    <updated>2016-11-29T20:13:51+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/11/29/python-open-save-file-specify-encoding-utf-8</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>使用的电脑系统：Windows 10 64位</li>
<li>使用的开发集成环境：PyCharm 2016.1.4</li>
<li>使用的Python的版本：python 3.5.0</li>
</ul>


<hr />

<h2>学习这个知识点的原因</h2>

<p>举一个实例：</p>

<p><strong>Octopress</strong>站点路径里面博文文件（<code>.markdown</code>后缀文件）必须要是以UTF-8无BOM编码方式编码的文件，否则执行<code>rake generate</code>命令会出现下面这个错误：</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-python-open-save-file-specify-encoding-utf-8/1480419391696.png" alt="Alt text" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Error reading file F:/octopress/source/_posts/xxxx.markdown: invalid byte sequence in UTF-8
</span><span class='line'>  Liquid Exception: invalid byte sequence in UTF-8 in _posts/xxxx.markdown/#excerpt</span></code></pre></td></tr></table></div></figure>


<p>所以，为了解决不要出现这个问题，我们需要将文件指定你希望的编码方式保存。</p>

<h2>将其用指定的编码方式保存（比如：UTF-8无BOM编码方式）</h2>

<p>其实很简单，我们只需要这样做：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&#39;utf-8&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样<code>file</code>文件就是以<strong>Utf-8无BOM编码方式</strong>编码的文件。</p>

<blockquote><p>我们也看到了，其实不是将<code>file</code>保存为以<strong>Utf-8无BOM编码方式</strong>编码的文件，而是创建这个一个以<strong>Utf-8无BOM编码方式</strong>编码的文件 <code>file</code>。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Python 015 解决问题：读取文件时，出现乱码或者“UnicodeDecodeError 'Gbk' Codec Can't Decode Byte 0xXX in Position XX: Incomplete Multibyte Sequence” 错误]]></title>
    <link href="http://aobojaing.github.io/blog/2016/11/29/Python-read-file-Garbled-UnicodeDecodeError-gbk-codec-cant-decode-error/"/>
    <updated>2016-11-29T19:18:27+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/11/29/Python-read-file-Garbled-UnicodeDecodeError-gbk-codec-cant-decode-error</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>使用的电脑系统：Windows 10 64位</li>
<li>使用的开发集成环境：PyCharm 2016.1.4</li>
<li>使用的Python的版本：python 3.5.0</li>
</ul>


<hr />

<h2>出现的错误</h2>

<p>读取文件时，出现<strong>乱码</strong>或者<code>UnicodeDecodeError: 'gbk' codec can't decode byte 0xXX in position XX: incomplete multibyte sequence</code> 错误</p>

<hr />

<h2>出现错误的原因</h2>

<p>这两个错误可能会出现一个，两个错误的出现的原因是一样的：当我们使用了一个不正确的编码方式去读取一个不是用这个编码方式编码的文件时，轻者出现乱码，重者出现<code>UnicodeDecodeError</code>错误。</p>

<hr />

<h2>模拟错误发生现场</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;newfile.txt&#39;</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&#39;utf-8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nb">file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;你好，AoboSir.&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nb">file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;newfile.txt&#39;</span><span class="p">,</span> <span class="s">&#39;r&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="nb">file</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span><span class='line'><span class="nb">file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行输出：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">浣犲ソ锛孉</span><span class="n">oboSir</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;newfile.txt&#39;</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&#39;utf-8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nb">file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;你好，AoboSir。&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nb">file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;newfile.txt&#39;</span><span class="p">,</span> <span class="s">&#39;r&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="nb">file</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span><span class='line'><span class="nb">file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行输出：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;D:/WorkSpace/test_ws/demo/learning_python_15.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">6</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="nb">file</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span><span class='line'><span class="ne">UnicodeDecodeError</span><span class="p">:</span> <span class="s">&#39;gbk&#39;</span> <span class="n">codec</span> <span class="n">can</span><span class="s">&#39;t decode byte 0x82 in position 35: incomplete multibyte sequence</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>解决办法</h2>

<p>读取文件时，指定正确的编码方式：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;newfile.txt&#39;</span><span class="p">,</span> <span class="s">&#39;r&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&#39;utf-8&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>现在再运行，就正常了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">你好，</span><span class="n">AoboSir</span><span class="err">。</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>搞定</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 搭建静态博客站点 — 让中文的分类列表（Categories）的超链接正常使用]]></title>
    <link href="http://aobojaing.github.io/blog/2016/11/29/octopress-build-static-blog-site-categories-cn-url-404-not-found/"/>
    <updated>2016-11-29T13:49:25+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/11/29/octopress-build-static-blog-site-categories-cn-url-404-not-found</id>
    <content type="html"><![CDATA[<hr />

<h2>前言</h2>

<p>之前，我是按照我写的<a href="http://www.aobosir.com/blog/2016/10/12/octopress-build-static-blog-site-add-categories-list-for-site-sidebar/">这篇博客</a>为<strong>Octopress</strong>站点侧边栏添加分类列表（Categories）。</p>

<hr />

<h2>出现的问题</h2>

<p>基于Octopress的博客系统自带了一个很好用分类目录插件。但遗憾的是它不支持中文链接URL，所以导致了：如果你分类列表有中文，那么点击的时候会链接到404页面。</p>

<hr />

<h2>解决思路</h2>

<p>中文取拼音。</p>

<hr />

<h2>解决方法</h2>

<p>参考网站：<a href="http://jiankg.github.io/2014/10/16/jie-jue-octopressfen-lei-mu-lu-zhi-chi-zhong-wen-de-wen-ti/">解决Octopress分类目录支持中文的问题</a></p>

<p><code>/plugins/category_sidebar.rb</code> (若没有，自行创建)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;stringex&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Jekyll</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">CategoryListTag</span> <span class="o">&lt;</span> <span class="no">Liquid</span><span class="o">::</span><span class="no">Tag</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">render</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>      <span class="n">html</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>      <span class="n">categories</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">registers</span><span class="o">[</span><span class="ss">:site</span><span class="o">].</span><span class="n">categories</span><span class="o">.</span><span class="n">keys</span>
</span><span class='line'>      <span class="n">categories</span><span class="o">.</span><span class="n">sort</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">category</span><span class="o">|</span>
</span><span class='line'>        <span class="n">posts_in_category</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">registers</span><span class="o">[</span><span class="ss">:site</span><span class="o">].</span><span class="n">categories</span><span class="o">[</span><span class="n">category</span><span class="o">].</span><span class="n">size</span>
</span><span class='line'>        <span class="n">html</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;&lt;li class=&#39;category&#39;&gt;&lt;a href=&#39;/blog/categories/</span><span class="si">#{</span><span class="n">category</span><span class="o">.</span><span class="n">to_url</span><span class="o">.</span><span class="n">downcase</span><span class="si">}</span><span class="s2">/&#39;&gt;</span><span class="si">#{</span><span class="n">category</span><span class="si">}</span><span class="s2"> (</span><span class="si">#{</span><span class="n">posts_in_category</span><span class="si">}</span><span class="s2">)&lt;/a&gt;&lt;/li&gt;</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">html</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Liquid</span><span class="o">::</span><span class="no">Template</span><span class="o">.</span><span class="n">register_tag</span><span class="p">(</span><span class="s1">&#39;category_sidebar&#39;</span><span class="p">,</span> <span class="no">Jekyll</span><span class="o">::</span><span class="no">CategoryListTag</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>搞定</h2>

<p>现在你可以重新执行<code>rake generate</code>和<code>rake preview</code>、 <code>rake deploy</code>，分类列表中有中文字符的分类，就可以正常打开了，而实际的链接就是对应的拼音。</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 搭建静态博客站点 --- 添加访客统计]]></title>
    <link href="http://aobojaing.github.io/blog/2016/11/29/octopress-build-static-blog-site-add-Visitors-Pageviews-Counter/"/>
    <updated>2016-11-29T13:26:33+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/11/29/octopress-build-static-blog-site-add-Visitors-Pageviews-Counter</id>
    <content type="html"><![CDATA[<hr />

<p>参考网站：<a href="http://tianweili.github.io/blog/2015/01/11/setup-octopress-blog/#h28">Octopress博客的个性化配置：添加访客统计</a></p>

<hr />

<p><strong>Step 1 . </strong> 本博客的访客统计系统使用的是<strong>Flag Counter</strong>，所以要先去<a href="http://www.flagcounter.com/"><strong>Flag Counter</strong></a>获取代码。</p>

<p><strong>Step 2 . </strong> 拿到代码后添加<code>.\source\_includes\custom\asides\flag_counter.html</code>文件：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;section&gt;
</span><span class='line'>  &lt;h1&gt;访客统计&lt;/h1&gt;
</span><span class='line'>  &lt;br/&gt;
</span><span class='line'>  &lt;a href="http://s07.flagcounter.com/more/2SH"&gt;&lt;img src="http://s07.flagcounter.com/count/2SH/bg_FFFFFF/txt_000000/border_CCCCCC/columns_2/maxflags_12/viewers_0/labels_0/pageviews_1/flags_0/" alt="Flag Counter" border="0"&gt;&lt;/a&gt;
</span><span class='line'>&lt;/section&gt;</span></code></pre></td></tr></table></div></figure>


<p><strong>Step 3 . </strong> 将页面添加到侧边栏，在<code>./_config.yml</code>配置文件中添加下面一行配置：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>default_asides: [……, custom/asides/flag_counter.html]</span></code></pre></td></tr></table></div></figure>


<p><strong>Step 4 . </strong> 最后添加控制开关，在<code>./_config.yml</code>配置文件中添加下面一行配置：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Flag Counter
</span><span class='line'>flag_counter: true</span></code></pre></td></tr></table></div></figure>


<h2>搞定</h2>

<hr />

<p>现在执行 <code>rake generate</code> 来生成博客站点。</p>

<blockquote><p>如果你在执行这一步的时候不到了下面这个问题：</p>

<pre><code>  Liquid Exception: invalid byte sequence in UTF-8 in _layouts/page.html
jekyll 2.5.3 | Error:  invalid byte sequence in UTF-8
</code></pre>

<p><img src="http://aobojaing.github.io/images/2016-11-29-octopress-build-static-blog-site-add-Visitors-Pageviews-Counter/1480394392417.png" alt="Alt text" /></p>

<p>解决办法：</p>

<p><code>.\source\_includes\custom\asides\flag_counter.html</code> 文件使用 <a href="http://www.aobosir.com/blog/2016/10/10/Windows-install-Notepad++/"><strong>Notepad++</strong> 软件</a> 转换为UTF-8无BOM编码格式，即可解决问题。</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-octopress-build-static-blog-site-add-Visitors-Pageviews-Counter/1480394475393.png" alt="Alt text" /></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在 JetBrains PyCharm 软件上使用 Git(Github)]]></title>
    <link href="http://aobojaing.github.io/blog/2016/11/29/JetBrains-PyCharm-software-use-Git-GitHub-For-Windows/"/>
    <updated>2016-11-29T11:44:46+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/11/29/JetBrains-PyCharm-software-use-Git-GitHub-For-Windows</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑：Windows 10 64位</li>
<li>PyCharm 软件的版本：PyCharm 2016.1.4</li>
<li>Git For Windows版本：Git-2.10.0-64-bit</li>
<li>GitHub For Windows软件版：GitHub For Windows 3.0.5.2</li>
</ul>


<hr />

<p>参考网站：<a href="https://www.youtube.com/watch?v=bsN7ogDz02g">How to Use PyCharm with Github</a></p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-JetBrains-PyCharm-software-use-Git-GitHub-For-Windows/1480361358084.png" alt="Alt text" /></p>

<hr />

<p>在 JetBrains PyCharm 软件上使用 Git(Github)，开发项目时，推送代码修改到远程库会变得更加便捷。</p>

<hr />

<h2>准备工作</h2>

<p>你的电脑里面需要有的软件：</p>

<ul>
<li>Git For Windows</li>
<li>GitHub For Windows</li>
<li>JetBrains PyCharm</li>
</ul>


<p>你可以到这里查看如何下载和安装这些软件的图文教程：</p>

<ul>
<li><a href="http://www.aobosir.com/blog/2016/11/29/Git-GitHub-001-For-Windows-download-install-tutorial/">Git For Windows 和 GitHub For Windows 这两个软件的下载和安装的教程</a></li>
<li><a href="http://www.aobosir.com/blog/2016/11/29/PyCharm-software-professional-download-install-Crack-Registration/">PyCharm 软件的下载、安装、破解教程</a></li>
</ul>


<hr />

<h2>在 JetBrains PyCharm 软件上使用 Git(Github)</h2>

<p>对于已有项目文件夹，</p>

<p><strong>Step 1 . </strong> 在文件夹里面打开命令行，执行 <code>git init</code> 命令，将这个项目文件夹做成本地库。</p>

<p><strong>Step 2 . </strong> 使用<strong>GitHub For Windows</strong> 软件克隆本地库，忽略一些文件，并上传到GitHub远程。</p>

<p>具体详细的步骤如下：</p>

<p>克隆本地库：</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-JetBrains-PyCharm-software-use-Git-GitHub-For-Windows/1480384008856.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-JetBrains-PyCharm-software-use-Git-GitHub-For-Windows/1480384665342.png" alt="Alt text" /></p>

<p>添加<code>ignorefile</code> 文件</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-JetBrains-PyCharm-software-use-Git-GitHub-For-Windows/1480384713963.png" alt="Alt text" /></p>

<p>点击 <strong>+ Add a default .gitignore file.</strong> 按钮</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-JetBrains-PyCharm-software-use-Git-GitHub-For-Windows/1480386549071.png" alt="Alt text" /></p>

<p>我们这个项目使用的开发软件是 <strong>JetBrains PyCharm</strong> 软件，所以我们需要写一个符合 <strong>JetBrains PyCharm</strong> 软件 的 <code>.gitignore</code> 文件。</p>

<p>其实我们不需要自己写 <code>.gitignore</code> 文件，GitHub 官方已经为我们写好很多的  <code>.gitignore</code> 文件。</p>

<p>点击 <strong>example</strong>：</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-JetBrains-PyCharm-software-use-Git-GitHub-For-Windows/1480386671756.png" alt="Alt text" /></p>

<p>弹出一个网页，将里面的<code>gitignore/Global/JetBrains.gitignore</code> 的内容复制粘贴：</p>

<p>（我们再在里面添加一行：<code>.idea/*</code>）</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-JetBrains-PyCharm-software-use-Git-GitHub-For-Windows/1480387492001.png" alt="Alt text" /></p>

<p>现在，直接点击 <code>OK</code> 就可以了。</p>

<p>现在，你可以发现，只有3个改变的文件了：（这是因为一些文件被忽略，不需要上传到远程。）</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-JetBrains-PyCharm-software-use-Git-GitHub-For-Windows/1480387512124.png" alt="Alt text" /></p>

<p>输入 <strong>Summary</strong> 和 <strong>Description</strong> ，点击 <strong>Commit to master</strong> 按钮将修改提交到指定分支上（当前指定分支是：<code>master</code>）。</p>

<p>最后点击 <strong>Publish</strong> 按钮，推送到远程库。</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-JetBrains-PyCharm-software-use-Git-GitHub-For-Windows/1480387792020.png" alt="Alt text" /></p>

<p>第一次推送，需要填写下面的信息。注意：<code>Name</code> 默认不变；<code>Description</code> 里面输入好描述信息（中英文都可以）。</p>

<p>同时选中好要推送到的GitHub账号。</p>

<p>填好之后点击 <strong>Pubish xxx</strong> 按钮。（可能会失败，白天可能是因为GitHub官网服务器的原因，晚上会好一点。解决办法就是：多试几次。）</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-JetBrains-PyCharm-software-use-Git-GitHub-For-Windows/1480387921240.png" alt="Alt text" /></p>

<p><strong>Step 3 . </strong> 使用 <strong>PyCharm</strong> 软件打开看看那个python项目。</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-JetBrains-PyCharm-software-use-Git-GitHub-For-Windows/1480388438196.png" alt="Alt text" /></p>

<p>你会看到：</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-JetBrains-PyCharm-software-use-Git-GitHub-For-Windows/1480388544163.png" alt="Alt text" /></p>

<p><strong>Step 4 . </strong> 当你对项目进行增减代码后，你想要将修改推送到远程库时。</p>

<p>方法1 ： 就点击上图中红圈里面的图标。然后进行推送。</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-JetBrains-PyCharm-software-use-Git-GitHub-For-Windows/1480388727382.png" alt="Alt text" /></p>

<p>方法2 ： 你也可以使用 <strong>GitHub For Windows</strong> 软件进行推送。</p>

<p>（推送方法：输入 <strong>Summary</strong> 和 <strong>Description</strong> ，点击 <strong>Commit to master</strong> 按钮将修改提交到指定分支上（当前指定分支是：<code>master</code>）。最后点击 <strong>Sync</strong> 按钮，推送到远程库。）</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-JetBrains-PyCharm-software-use-Git-GitHub-For-Windows/1480388817420.png" alt="Alt text" /></p>

<blockquote><p>两个方法互不干扰，你使用了其中任意一种方法推送了修改，那么另外一种方法里面也好显示推送完成，没有修改的文件了。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PyCharm 软件（professional版 专业版）在Windows系统上的下载、安装、破解图文教程]]></title>
    <link href="http://aobojaing.github.io/blog/2016/11/29/PyCharm-software-professional-download-install-Crack-Registration/"/>
    <updated>2016-11-29T06:04:12+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/11/29/PyCharm-software-professional-download-install-Crack-Registration</id>
    <content type="html"><![CDATA[<hr />

<h2>下载 PyCharm 软件（professional版 专业版）</h2>

<p>官网下载：<a href="https://www.jetbrains.com/pycharm/download/#section=windows">https://www.jetbrains.com/pycharm/download/#section=windows</a></p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-PyCharm-software-professional-download-install-Crack-Registration/1480370112104.png" alt="Alt text" /></p>

<h2>安装</h2>

<p>傻瓜式安装，无需多言。</p>

<h2>破解</h2>

<p>破解就是注册的意思。这个软件是付费试用的，如果你不输入注册码，这个软件你只能用30天。</p>

<p>破解方法在这里：
<a href="http://blog.csdn.net/tianzhaixing2013/article/details/44997881">http://blog.csdn.net/tianzhaixing2013/article/details/44997881</a>
（这里有PyCharm软件 2014、2015、2016 版本的注册方法，都可行。）</p>

<p>PyCharm 2016 （professional版）的激活码：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>43B4A73YYJ-eyJsaWNlbnNlSWQiOiI0M0I0QTczWVlKIiwibGljZW5zZWVOYW1lIjoibGFuIHl1IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE3LTAyLTI1In0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IlJTMCIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDE3LTAyLTI1In0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IldTIiwicGFpZFVwVG8iOiIyMDE3LTAyLTI1In0seyJjb2RlIjoiREIiLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9XSwiaGFzaCI6IjMzOTgyOTkvMCIsImdyYWNlUGVyaW9kRGF5cyI6MCwiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-keaxIkRgXPKE4BR/ZTs7s7UkP92LBxRe57HvWamu1EHVXTcV1B4f/KNQIrpOpN6dgpjig5eMVMPmo7yMPl+bmwQ8pTZaCGFuLqCHD1ngo6ywHKIQy0nR249sAUVaCl2wGJwaO4JeOh1opUx8chzSBVRZBMz0/MGyygi7duYAff9JQqfH3p/BhDTNM8eKl6z5tnneZ8ZG5bG1XvqFTqWk4FhGsEWdK7B+He44hPjBxKQl2gmZAodb6g9YxfTHhVRKQY5hQ7KPXNvh3ikerHkoaL5apgsVBZJOTDE2KdYTnGLmqxghFx6L0ofqKI6hMr48ergMyflDk6wLNGWJvYHLWw==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==  
</span></code></pre></td></tr></table></div></figure>


<h2>搞定</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git(Github) 001 介绍和下载安装图文教程 for Windows]]></title>
    <link href="http://aobojaing.github.io/blog/2016/11/29/Git-GitHub-001-For-Windows-download-install-tutorial/"/>
    <updated>2016-11-29T04:29:52+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/11/29/Git-GitHub-001-For-Windows-download-install-tutorial</id>
    <content type="html"><![CDATA[<hr />

<p>我的电脑：Windows 10 系统 64位</p>

<hr />

<h2>介绍</h2>

<p>Git for Windows 软件就是 Git；GitHub For Windows 软件是GitHub公司做的一个超级低门槛的使用软件，非常好。</p>

<hr />

<h2>安装</h2>

<p>在Windows上</p>

<p>下载：<a href="https://desktop.github.com/">https://desktop.github.com/</a></p>

<p>安装时，不管是<strong>以普通用户的身份</strong>，还是<strong>以管理员的身份</strong>运行 <strong>GitHubSetup.exe</strong> 软件。都会出现下面的结果：</p>

<p>（这是在线下载，国内防火墙的原因，导致下载速度巨慢，最后连资源都找不到了。）
<img src="http://aobojaing.github.io/images/2016-11-29-Git-GitHub-001-For-Windows-download-install-tutorial/1475067064738.png" alt="Alt text" /></p>

<p>是没有办法成功安装的。</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-Git-GitHub-001-For-Windows-download-install-tutorial/1475067095197.png" alt="Alt text" /></p>

<p>点击 <strong>详细信息(D)&hellip;</strong></p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-Git-GitHub-001-For-Windows-download-install-tutorial/1475067512031.png" alt="Alt text" /></p>

<p>如果你看到的内容大致和我的一样的话，那么下面的解决方法很适合你。</p>

<hr />

<h2>Step 1 不使用Github 官方的这个在线下载软件，而是去我的百度云盘里下载离线版的Github For Windows软件</h2>

<blockquote><p>Github For Windows软件：你可以使用GUI可视化界面来使用GitHub，而不需要使用一些繁琐的Git命令，只需点点鼠标即可。</p></blockquote>

<p>我在我的百度云盘里面有离线版的Github For Windows 文件，你可以去那下载。但是版本不是最新的，是2015/09/08 时候的版本。</p>

<p>链接：<a href="http://pan.baidu.com/s/1o8CSgI2">http://pan.baidu.com/s/1o8CSgI2</a> 密码：cbos</p>

<p>下载后，解压，直接双击里面的 <strong>GitHub.application</strong> 文件，进行安装。</p>

<p>安装后，自动出现下面的窗口。
<img src="http://aobojaing.github.io/images/2016-11-29-Git-GitHub-001-For-Windows-download-install-tutorial/1475068914780.png" alt="Alt text" /></p>

<p>现在你输入你的Github 用户名和密码，并点击 <strong>Log in</strong></p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-Git-GitHub-001-For-Windows-download-install-tutorial/1475069085322.png" alt="Alt text" /></p>

<p>点击 <strong>Continue</strong> 按钮。</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-Git-GitHub-001-For-Windows-download-install-tutorial/1475069097529.png" alt="Alt text" /></p>

<p>&hellip;</p>

<hr />

<p>现在你就可以使用它了。
<img src="http://aobojaing.github.io/images/2016-11-29-Git-GitHub-001-For-Windows-download-install-tutorial/1475070434905.png" alt="Alt text" /></p>

<hr />

<h2>Step 2 下载安装 Git For Windows</h2>

<blockquote><p>Git For Windows 软件：你可以在任何文件夹里面空白的位置，点击鼠标右键，里面会有两项：Git Bash  和 Git GUI 。其中 最常用的就是 <strong>Git Bash</strong> ，它就是 一个命令行终端，你需要使用繁琐的<strong>Git</strong>命令来将你的工程代码放到<strong>Github</strong>网站里面管理。</p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-Git-GitHub-001-For-Windows-download-install-tutorial/1475070635983.png" alt="Alt text" /></p></blockquote>

<p>我们下载 Git For Windows 。现在路径：<a href="https://git-for-windows.github.io/">https://git-for-windows.github.io/</a></p>

<p>下载完，直接双击安装，一路 <strong>下一步</strong>，所有选项全部默认即可。</p>

<hr />

<p><strong>启动：</strong></p>

<p><img src="http://aobojaing.github.io/images/2016-11-29-Git-GitHub-001-For-Windows-download-install-tutorial/1475068623495.png" alt="Alt text" /></p>

<hr />

<hr />

<blockquote><p><strong>总结：</strong></p>

<p>上面两个软件，我都需要你使用，我们即安装 <strong>GitHub For Windows</strong> 的软件，也安装 <strong>Git For Windows</strong> 的软件。</p>

<p>因为，虽然，<strong>在命令行终端中输入 Git 命令</strong> 相比 <strong>GUI界面里面点按钮</strong> 来说要繁琐得多，但是我们必须要学会这个 <strong>Git</strong> 命令。这个命令行工具指令实在是太有用了，它就像是一个木工的工具箱里面的锯条。这是程序员必须要具备的能力。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python3 大型网络爬虫实战 002 --- Scrapy 爬虫项目的创建及爬虫的创建 --- 实例：爬取百度标题和CSDN博客]]></title>
    <link href="http://aobojaing.github.io/blog/2016/11/26/python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn/"/>
    <updated>2016-11-26T18:22:27+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/11/26/python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn</id>
    <content type="html"><![CDATA[<hr />

<h2>开发环境</h2>

<ul>
<li>Python第三方库：lxml、Twisted、pywin32、scrapy</li>
<li>Python 版本：python-3.5.0-amd64</li>
<li>PyCharm软件版本：pycharm-professional-2016.1.4</li>
<li>电脑系统：Windows 10 64位</li>
</ul>


<p>如果你还没有搭建好开发环境，请到<a href="http://www.aobosir.com/blog/2016/11/26/python3-large-web-crawler-001-Build-development-environment/">这篇博客</a>。</p>

<hr />

<h1>1 知识点：scrapy 爬虫项目的创建及爬虫的创建</h1>

<h2>1.1 scrapy 爬虫项目的创建</h2>

<p>接下来我们为大家创建一个Scrapy爬虫项目，并在爬虫项目下创建一个Scrapy爬虫文件。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>scrapy startproject &lt;projectname&gt; </span></code></pre></td></tr></table></div></figure>


<h2>1.2 scrapy 爬虫文件的创建</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd demo
</span><span class='line'>scrapy genspider -t basic &lt;filename&gt; &lt;domain&gt;</span></code></pre></td></tr></table></div></figure>


<blockquote><p>更多 <strong>Scrapy</strong> 命令的介绍请到<a href="http://www.aobosir.com/blog/2016/11/26/python-Scrapy-command/">这篇博客</a>查看。</p></blockquote>

<hr />

<h1>2 实例：爬取百度标题和CSDN博客</h1>

<p>我们创建一个爬虫项目，在里面创建一个爬虫文件来爬取百度，并再创建一个爬虫文件爬取CSDN博客文章。</p>

<hr />

<p>先创建一个Scrapy爬虫项目：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>scrapy startproject firstDemo</span></code></pre></td></tr></table></div></figure>


<p>输出：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>D:\WorkSpace\python_ws\python-large-web-crawler&gt;scrapy startproject firstdemo
</span><span class='line'>New Scrapy project 'firstdemo', using template directory 'c:\\users\\aobo\\appdata\\local\\programs\\python\\python35\\lib\\site-packages\\scrapy\\templates\\project', created in:
</span><span class='line'>    D:\WorkSpace\python_ws\python-large-web-crawler\firstdemo
</span><span class='line'>
</span><span class='line'>You can start your first spider with:
</span><span class='line'>    cd firstdemo
</span><span class='line'>    scrapy genspider example example.com
</span><span class='line'>
</span><span class='line'>D:\WorkSpace\python_ws\python-large-web-crawler&gt;</span></code></pre></td></tr></table></div></figure>


<h2>2-1.1 使用Scrapy爬虫 爬取百度标题</h2>

<p>创建一个爬虫文件来爬取百度</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd firstDemo
</span><span class='line'>scrapy genspider -t basic baidu baidu.com</span></code></pre></td></tr></table></div></figure>


<p>输出：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>D:\WorkSpace\python_ws\python-large-web-crawler&gt;cd firstdemo
</span><span class='line'>
</span><span class='line'>D:\WorkSpace\python_ws\python-large-web-crawler\firstdemo&gt;scrapy genspider -t basic baidu baidu.com
</span><span class='line'>Created spider 'baidu' using template 'basic' in module:
</span><span class='line'>  firstdemo.spiders.baidu
</span><span class='line'>
</span><span class='line'>D:\WorkSpace\python_ws\python-large-web-crawler\firstdemo&gt;</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn/1480084611306.png" alt="Alt text" /></p>

<p>打开 <strong>PyCharm</strong> 软件，用 <strong>PyCharm</strong> 软件打开刚刚创建的 <code>firstdemo</code> 爬虫项目。</p>

<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn//1480084757859.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn//1480084783287.png" alt="Alt text" /></p>

<p>打开这 <code>baidu.py</code> 爬虫文件，你会看到自动生成的代码：</p>

<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn//1480084952255.png" alt="Alt text" /></p>

<h2>2-1.2 观察 <a href="https://www.baidu.com/">https://www.baidu.com/</a> 网页源代码</h2>

<p>（源代码太多，列出重点的。）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='http'><span class='line'><span class="err">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; class=&quot;cye-enabled cye-nm sui-componentWrap&quot;&gt;</span>
</span><span class='line'><span class="err">    &lt;head&gt;</span>
</span><span class='line'><span class="err">        &lt;title&gt;百度一下，你就知道 &lt;/title&gt;</span>
</span><span class='line'><span class="err">    &lt;/head&gt;</span>
</span><span class='line'><span class="err">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>源代码中的标题通过标签逐步定位： <code>/html/head/title</code></p>

<h2>2-1.3 写代码</h2>

<p>我们现在要提取出 <a href="https://www.baidu.com/">https://www.baidu.com/</a> 网页 的标题：<strong>百度一下，你就知道</strong>。</p>

<p>提取信息，一般使用 <code>xpath</code> 或者 <strong>正则表达式</strong> 来提取。</p>

<p>这里我们使用 <code>xpath</code> 来提取，<code>xpath</code> 的知识点，请到<a href="http://www.aobosir.com/blog/2016/11/26/python-xpath/">这篇博客</a>中查看。</p>

<hr />

<p>下面的编写代码的步骤：</p>

<p><strong>Step 1 . </strong> 设置我们的爬虫不遵循 <code>robots.txt</code> 规定。（什么是<code>robots.txt</code>规定，请到<a href="http://blog.csdn.net/github_35160620/article/details/52586126">这个博客</a>查看。）</p>

<p>打开 <code>settings.py</code> 文件，将里面的<code>ROBOTSTXT_OBEY</code> 设为：<code>False</code></p>

<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn//1480086841701.png" alt="Alt text" /></p>

<p><strong>Step 2 . </strong>  打开 <code>items.py</code> 文件，在里面<code>FirstdemoItem()</code>函数里添加一项：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='http'><span class='line'><span class="err">title = scrapy.Field()</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn//1480087390745.png" alt="Alt text" /></p>

<p><strong>Step 3 . </strong>  在 <code>baidu.py</code> 文件里面，使用<code>xpath 表达式</code> 提取百度网页的标题。</p>

<p>先从核心目录（<code>firstdemo</code>）定位到<code>items.py</code> 文件里面的<code>FirstdemoItem</code>函数。</p>

<p>然后使用<code>xpath 表达式</code> 提取百度网页的标题。</p>

<p>最后，返回。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">scrapy</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">firstdemo.items</span> <span class="kn">import</span> <span class="n">FirstdemoItem</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">BaiduSpider</span><span class="p">(</span><span class="n">scrapy</span><span class="o">.</span><span class="n">Spider</span><span class="p">):</span>
</span><span class='line'>    <span class="n">name</span> <span class="o">=</span> <span class="s">&quot;baidu&quot;</span>
</span><span class='line'>    <span class="n">allowed_domains</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;baidu.com&quot;</span><span class="p">]</span>
</span><span class='line'>    <span class="n">start_urls</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;http://baidu.com/&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">parse</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">response</span><span class="p">):</span>
</span><span class='line'>        <span class="n">item</span> <span class="o">=</span> <span class="n">FirstdemoItem</span><span class="p">()</span>
</span><span class='line'>        <span class="n">item</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&#39;/html/head/title/text()&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
</span><span class='line'>        <span class="k">yield</span> <span class="n">item</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn//1480088827529.png" alt="Alt text" /></p>

<p><strong>Step 4 . </strong>
在 <code>pipelines.py</code> 文件里面的<code>FirstdemoPipeline()</code>函数，添加打印信息的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn//1480087767661.png" alt="Alt text" /></p>

<p>但是，现在运行程序，是不能输出任何信息的，还需要做<strong>Step 5</strong>。</p>

<p><strong>Step 5 . </strong> 开启<code>piplines</code>（默认<code>piplines</code>是关闭的。）
在 <code>settings.py</code> 文件，将里面的<code>ITEM_PIPELINES</code> 项的注释去掉。并从核心目录开始定位，定位到<code>pipelines.py</code> 文件里面的<code>FirstdemoPipeline()</code>函数 ，就应该是：<code>firstdemo.pipelines.FirstdemoPipeline</code>：</p>

<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn//1480088423683.png" alt="Alt text" /></p>

<h2>2-1.4 运行</h2>

<p>在 <strong>DOS窗口</strong> 中，先将路劲切换到当前爬虫项目<code>firstdemo</code>路径下，然后在执行爬虫文件 <code>baidy</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">D</span><span class="p">:</span>
</span><span class='line'><span class="n">cd</span> <span class="n">D</span><span class="p">:</span>\<span class="n">WorkSpace</span>\<span class="n">python_ws</span>\<span class="n">python</span><span class="o">-</span><span class="n">large</span><span class="o">-</span><span class="n">web</span><span class="o">-</span><span class="n">crawler</span>\<span class="n">firstdemo</span>
</span><span class='line'><span class="n">scrapy</span> <span class="n">crawl</span> <span class="n">baidu</span> <span class="o">--</span><span class="n">nolog</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn//1480089009819.png" alt="Alt text" /></p>

<hr />

<h2>2-2.1 使用Scrapy爬虫CSDN的博客文章</h2>

<p>创建一个爬虫文件爬取CSDN博客文章。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">scrapy</span> <span class="n">genspider</span> <span class="o">-</span><span class="n">t</span> <span class="n">basic</span> <span class="n">csdn</span> <span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出:</p>

<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn//1480089722224.png" alt="Alt text" /></p>

<h2>2-2.2 观察 <a href="http://blog.csdn.net/">http://blog.csdn.net/</a> 网页源代码</h2>

<p>（网页源代码太多，这里就不贴出了。）</p>

<p>提取信息，一般使用 <code>xpath</code> 或者 <strong>正则表达式</strong> 来提取。</p>

<h2>2-2.3 写代码</h2>

<p><strong>Step 1 . </strong>  在<code>items.py</code> 文件中的<code>FirstdemoItem()</code>函数中添加新的项。其他的文件会使用这几个对象：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">detail</span> <span class="o">=</span> <span class="n">scrapy</span><span class="o">.</span><span class="n">Field</span><span class="p">()</span>
</span><span class='line'><span class="n">link</span> <span class="o">=</span> <span class="n">scrapy</span><span class="o">.</span><span class="n">Field</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn//1480089896612.png" alt="Alt text" /></p>

<p><strong>Step 2 . </strong>  在 <code>csdn.py</code> 文件里面，使用<code>xpath 表达式</code> 提取csdn博客网页的博文标题、介绍、链接地址。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">scrapy</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">firstdemo.items</span> <span class="kn">import</span> <span class="n">FirstdemoItem</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">CsdnSpider</span><span class="p">(</span><span class="n">scrapy</span><span class="o">.</span><span class="n">Spider</span><span class="p">):</span>
</span><span class='line'>    <span class="n">name</span> <span class="o">=</span> <span class="s">&quot;csdn&quot;</span>
</span><span class='line'>    <span class="n">allowed_domains</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;blog.csdn.net&quot;</span><span class="p">]</span>
</span><span class='line'>    <span class="n">start_urls</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;http://blog.csdn.net/&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">parse</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">response</span><span class="p">):</span>
</span><span class='line'>        <span class="n">item</span> <span class="o">=</span> <span class="n">FirstdemoItem</span><span class="p">()</span>
</span><span class='line'>        <span class="n">item</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&quot;//h3[@class=&#39;tracking-ad&#39;]/a/text()&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
</span><span class='line'>        <span class="n">item</span><span class="p">[</span><span class="s">&#39;detail&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&quot;//div[@class=&#39;blog_list_c&#39;]/text()&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
</span><span class='line'>        <span class="n">item</span><span class="p">[</span><span class="s">&#39;link&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">&quot;//h3[@class=&#39;tracking-ad&#39;]/a/@href&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">extract</span><span class="p">()</span>
</span><span class='line'>        <span class="k">yield</span> <span class="n">item</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn//1480090250536.png" alt="Alt text" /></p>

<p><strong>Step 3 . </strong> 在 <code>piplines.py</code> 文件中，添加下面的代码，输出显示爬取到的信息。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">])):</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&#39;第&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;篇文章：&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">][</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="s">&#39;detail&#39;</span><span class="p">][</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="s">&#39;link&#39;</span><span class="p">][</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&#39;---------&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-large-web-crawler-002-scrapy-crawler-project-create-baidu-csdn//1480090494545.png" alt="Alt text" /></p>

<h2>2-1.4 运行</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">scrapy</span> <span class="n">crawl</span> <span class="n">csdn</span> <span class="o">--</span><span class="n">nolog</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>执行输出的信息太少，说明程序有问题。</p>

<pre><code>scrapy crawl csdn
</code></pre>

<p>如果你在执行的时候，找到错误提示信息：</p>

<pre><code>UnicodeEncodeError: 'gbk' codec can't encode character '\xa0' in position 10: illegal multibyte sequence
</code></pre>

<p>这个问题经常会遇到，是一个常见的问题，解决办法<a href="http://www.aobosir.com/blog/2016/11/26/python3-UnicodeEncodeError-gbk-codec-can%27t-encode-character-xa0/">在这里</a>可以找到。</p>

<pre><code class="python">         print(item['detail'][i].replace(u'\xa0 ', u' '))
</code></pre></blockquote>

<p>输出：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">第</span><span class="mi">1</span><span class="err">篇文章：</span>
</span><span class='line'><span class="err">微信小程序：小程序，新场景</span>
</span><span class='line'><span class="err">前言：我们频繁进入的地方，是场景。手机，是场景；浏览器，是场景；其实，微信，也是场景……微信要做的是占据更多用户时间、占</span>
</span><span class='line'><span class="err">据更多应用场景、占据更多服务入口，这是商业本质想去垄断要做的事情。对于大家来讲，</span><span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">liujia216</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53350247</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">2</span><span class="err">篇文章：</span>
</span><span class='line'><span class="n">Android</span><span class="err">四大组件——</span><span class="n">BroadcastReceiver</span><span class="err">普通广播、有序广播、拦截广播、本地广播、</span><span class="n">Sticky</span><span class="err">广播、系统广播</span>
</span><span class='line'><span class="n">BroadcastReceiver</span><span class="err">普通广播、有序广播、拦截广播、本地广播、</span><span class="n">Sticky</span><span class="err">广播、系统广播</span>
</span><span class='line'>  <span class="err">本篇文章包括以下内容：</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="err">前言</span>
</span><span class='line'>  <span class="n">BroadcastReceiver</span><span class="err">的简介</span>
</span><span class='line'> <span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">qq_30379689</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53341313</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">3</span><span class="err">篇文章：</span>
</span><span class='line'><span class="n">Gif</span><span class="err">格式简要介绍</span>
</span><span class='line'><span class="n">Gif</span><span class="err">格式的介绍</span>
</span><span class='line'>
</span><span class='line'><span class="err">为什么有的</span><span class="n">Gif</span><span class="err">图不能够循环播放及处理办法</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">shiroh_ms08</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53347873</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">4</span><span class="err">篇文章：</span>
</span><span class='line'><span class="n">win10</span> <span class="n">uwp</span> <span class="err">打包第三方字体到应用</span>
</span><span class='line'><span class="err">有时候我们会把一些特殊字体打包到软件，因为如果找不到我们的字体会变为默认，现在很多字体图标我们用得好，有时候我们的应用会</span>
</span><span class='line'><span class="err">用很漂亮的字体，需要我们自己打包，因为用户一般是没有字体。</span><span class="n">UWP</span><span class="err">使用第三方字体首</span><span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">lindexi_gd</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">52716655</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">5</span><span class="err">篇文章：</span>
</span><span class='line'><span class="err">话说智能指针发展之路</span>
</span><span class='line'><span class="err">动态创建内存的管理太麻烦，于是乎，这个世界变成</span><span class="mi">11</span><span class="err">派人：</span>
</span><span class='line'><span class="err">一派人勤勤恳恳按照教科书的说法做，时刻小心翼翼，苦逼连连；</span>
</span><span class='line'><span class="err">一派人忘记教科书的教导，随便乱来，搞得代码处处</span><span class="n">bug</span><span class="err">，后期维护骂声连连；</span>
</span><span class='line'><span class="err">最</span><span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">jacketinsysu</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53343534</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">6</span><span class="err">篇文章：</span>
</span><span class='line'><span class="err">安卓自定义控件（二）</span><span class="n">BitmapShader</span><span class="err">、</span><span class="n">ShapeDrawable</span><span class="err">、</span><span class="n">Shape</span>
</span><span class='line'><span class="err">第一篇博客中，我已经对常用的一些方法做了汇总，这篇文章主要介绍</span><span class="n">BitmapShader</span><span class="err">位图渲染、</span><span class="n">ComposeShader</span><span class="err">组合渲染，然后看看</span><span class="n">Xferm</span>
</span><span class='line'><span class="n">ode</span><span class="err">如何实际应用。不过本文还是只重写</span><span class="n">onDraw</span><span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">chen413203144</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53343209</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">7</span><span class="err">篇文章：</span>
</span><span class='line'><span class="n">JSTL</span> <span class="err">标签大全详解</span>
</span><span class='line'><span class="mi">1</span><span class="err">、什么是</span><span class="n">JSTL</span><span class="err">？</span>    <span class="n">JSTL</span><span class="err">是</span><span class="n">apache</span><span class="err">对</span><span class="n">EL</span><span class="err">表达式的扩展（也就是说</span><span class="n">JSTL</span><span class="err">依赖</span><span class="n">EL</span><span class="err">），</span><span class="n">JSTL</span><span class="err">是标签语言！</span><span class="n">JSTL</span><span class="err">标签使用以来非常方便，它与</span><span class="n">JSP</span>
</span><span class='line'><span class="err">动作标签一样，只不过它不是</span><span class="n">JSP</span><span class="err">内</span><span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">qq_25827845</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53311722</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">8</span><span class="err">篇文章：</span>
</span><span class='line'><span class="n">Android</span><span class="err">调试大法</span> <span class="err">自定义</span><span class="n">IDE</span><span class="err">默认签名文件</span>
</span><span class='line'><span class="err">你是否为调试第三方</span><span class="n">SDK</span><span class="err">时</span><span class="n">debug</span><span class="err">签名和</span><span class="n">release</span><span class="err">签名发生冲突而烦恼？你是否在</span><span class="n">debug</span><span class="err">时第三方功能测试通过，而</span><span class="n">release</span><span class="err">时无法使用？你</span>
</span><span class='line'><span class="err">是否在为对接微信、支付宝、地图因签名导致的问题而烦恼？</span><span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">yanzhenjie1003</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53334071</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">9</span><span class="err">篇文章：</span>
</span><span class='line'><span class="n">Android</span><span class="err">图表库</span><span class="n">MPAndroidChart</span><span class="p">(</span><span class="err">十二</span><span class="p">)</span><span class="err">——来点不一样的，正负堆叠条形图</span>
</span><span class='line'><span class="n">Android</span><span class="err">图表库</span><span class="n">MPAndroidChart</span><span class="p">(</span><span class="err">十二</span><span class="p">)</span><span class="err">——来点不一样的，正负堆叠条形图</span>
</span><span class='line'>  <span class="err">接上篇，今天要说的，和上篇的类似，只是方向是有相反的两面，我们先看下效果</span>  <span class="err">实际上这样就导致了我们的代码是</span><span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">qq_26787115</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53333270</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">10</span><span class="err">篇文章：</span>
</span><span class='line'><span class="err">一步步手动实现热修复</span><span class="p">(</span><span class="err">二</span><span class="p">)</span><span class="o">-</span><span class="err">类的加载机制简要介绍</span>
</span><span class='line'><span class="err">一个类在被加载到内存之前要经过加载、验证、准备等过程。经过这些过程之后，虚拟机才会从方法区将代表类的运行时数据结构转换为</span>
</span><span class='line'><span class="err">内存中的</span><span class="n">Class</span><span class="err">。</span>
</span><span class='line'>
</span><span class='line'><span class="err">我们这节内容的重点在于一个类是如何被加载的，所以我们从类</span><span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">sahadev_</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53334911</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">11</span><span class="err">篇文章：</span>
</span><span class='line'><span class="err">仿射变换详解</span> <span class="n">warpAffine</span>
</span><span class='line'><span class="err">今天遇到一个问题是关于仿射变换的，但是由于没有将仿射变换的具体原理型明白，看别人的代码看的很费解，最后终于在师兄的帮助下</span>
</span><span class='line'><span class="err">将原理弄明白了，我觉得最重要的是理解仿射变换可以看成是几种简单变换的复合实现，</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">q123456789098</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53330484</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">12</span><span class="err">篇文章：</span>
</span><span class='line'><span class="n">React</span> <span class="n">Native</span><span class="err">嵌入</span><span class="n">Android</span><span class="err">原生应用中</span>
</span><span class='line'><span class="err">开发环境准备首先你要搭建好</span><span class="n">React</span> <span class="n">Native</span> <span class="k">for</span> <span class="n">Android</span><span class="err">开发环境，</span> <span class="err">没有搭建好的可以参考：</span><span class="n">React</span> <span class="n">Native</span> <span class="k">for</span> <span class="n">Android</span> <span class="n">Windows</span><span class="err">环境</span>
</span><span class='line'><span class="err">搭建</span>  <span class="err">用</span><span class="n">Android</span><span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">u011965040</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53331859</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">13</span><span class="err">篇文章：</span>
</span><span class='line'><span class="n">TCP</span><span class="err">三次握手四次挥手详解</span>
</span><span class='line'><span class="n">TCP</span><span class="err">三次握手四次挥手详解</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">u010913001</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53331863</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">14</span><span class="err">篇文章：</span>
</span><span class='line'><span class="err">腾讯</span><span class="n">Android</span><span class="err">面经</span>
</span><span class='line'><span class="err">秋招收官最后一战。</span>
</span><span class='line'><span class="err">腾讯一面（电话）：</span>
</span><span class='line'><span class="err">自我介绍</span>
</span><span class='line'><span class="err">项目，平时怎么学习？</span>
</span><span class='line'><span class="err">设计模式</span>
</span><span class='line'><span class="err">（</span><span class="mi">1</span><span class="err">）知道哪些设计模式？设计模式在</span><span class="n">Android</span><span class="err">、</span><span class="n">Java</span><span class="err">中是怎么应用的，每个都说一下？</span>
</span><span class='line'><span class="err">（</span><span class="mi">2</span><span class="err">）</span><span class="n">InputStre</span><span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">kesarchen</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53332157</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">15</span><span class="err">篇文章：</span>
</span><span class='line'><span class="err">轻松实现部分背景半透明的呈现效果</span>
</span><span class='line'><span class="err">实现一个简单的呈现</span><span class="o">/</span><span class="err">解散动画效果，当呈现时，呈现的主要内容和背景要明显区分，背景呈现一个半透明遮罩效果，透过背景可以看到</span>
</span><span class='line'><span class="err">下层</span> <span class="n">View</span> <span class="n">Controller</span> <span class="err">的内容</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">kmyhy</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53322669</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">16</span><span class="err">篇文章：</span>
</span><span class='line'><span class="n">APP</span><span class="err">自动化框架</span><span class="n">LazyAndroid</span><span class="err">使用手册（</span><span class="mi">4</span><span class="err">）</span><span class="o">--</span><span class="err">测试模板工程详解</span>
</span><span class='line'><span class="err">概述前面的</span><span class="mi">3</span><span class="err">篇博文分别对</span><span class="n">lazyAndroid</span><span class="err">的框架简介、元素抓取和核心</span><span class="n">API</span><span class="err">进行了说明，本文将基于框架给出的测试模板工程，详细阐述下</span>
</span><span class='line'><span class="err">使用该框架进行安卓</span><span class="n">UI</span><span class="err">自动化测试的步骤。</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">kaka1121</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53325265</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">17</span><span class="err">篇文章：</span>
</span><span class='line'><span class="n">Android</span><span class="err">使用</span><span class="n">getIdentifier</span><span class="p">()</span><span class="err">方法根据资源名来获取资源</span><span class="nb">id</span>
</span><span class='line'><span class="err">有时候我们想动态的根据一个资源名获得到对应的资源</span><span class="nb">id</span><span class="err">，就可以使用</span><span class="n">getResources</span><span class="p">()</span><span class="o">.</span><span class="n">getIdentifier</span><span class="p">()</span><span class="err">方法来获取该</span><span class="nb">id</span><span class="err">。然后再使用该</span>
</span><span class='line'><span class="nb">id</span><span class="err">进行相关的操作。</span>
</span><span class='line'><span class="mi">1</span><span class="err">、</span><span class="n">Demo</span><span class="err">示例</span>
</span><span class='line'>  <span class="err">下</span><span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">ouyang_peng</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53328000</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">18</span><span class="err">篇文章：</span>
</span><span class='line'><span class="n">Android</span><span class="err">基于</span><span class="n">RecyclerView</span><span class="err">实现高亮搜索列表</span>
</span><span class='line'><span class="err">这篇应该是</span><span class="n">RecycleView</span><span class="err">的第四篇了，</span><span class="n">RecycleView</span><span class="err">真是新生代的宠儿能做这么多的事情。转载请注明作者</span><span class="n">AndroidMsky</span><span class="err">及原文链接</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="ow">and</span><span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">androidmsky</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53306657</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">19</span><span class="err">篇文章：</span>
</span><span class='line'><span class="err">使用</span><span class="n">Git</span> <span class="n">Hooks</span><span class="err">实现开发部署任务自动化</span>
</span><span class='line'><span class="err">提供：</span><span class="n">ZStack</span><span class="err">云计算</span> <span class="err">前言版本控制，这是现代软件开发的核心需求之一。有了它，软件项目可以安全的跟踪代码变更并执行回溯、完整</span>
</span><span class='line'><span class="err">性检查、协同开发等多种操作。在各种版本控制软件中，</span><span class="n">git</span><span class="err">是近年来最流行的软</span><span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">zstack_org</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53331077</span>
</span><span class='line'><span class="o">---------</span>
</span><span class='line'><span class="err">第</span><span class="mi">20</span><span class="err">篇文章：</span>
</span><span class='line'><span class="n">Andromeda</span> <span class="n">OS</span> <span class="err">来了，</span><span class="n">Android</span> <span class="err">再见？</span>
</span><span class='line'><span class="err">相信有部分同学已经有耳闻了，前几天炒的很火一个消息，就是</span> <span class="n">Google</span> <span class="err">要推出一种全新的操作系统，取名</span> <span class="n">Andromeda</span><span class="err">，这款新型的操作</span>
</span><span class='line'><span class="err">系统融合了</span> <span class="n">Android</span> <span class="err">和</span> <span class="n">Chrome</span> <span class="n">OS</span><span class="err">，据称已经有</span><span class="o">...</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">googdev</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53331364</span>
</span><span class='line'><span class="o">---------</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>我用英语跟小贩交谈，突然画面一下就全暗，我回台上，终于轮我上场。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python --- Xpath 表达式 --- Ongoing]]></title>
    <link href="http://aobojaing.github.io/blog/2016/11/26/python-xpath/"/>
    <updated>2016-11-26T18:00:15+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/11/26/python-xpath</id>
    <content type="html"><![CDATA[<hr />

<h2>什么是 <strong>XPath</strong>？</h2>

<p>参考网站：<a href="http://www.w3school.com.cn/xpath/xpath_intro.asp">http://www.w3school.com.cn/xpath/xpath_intro.asp</a></p>

<p>XPath 是一门在 XML 文档中查找信息的语言。XPath 用于在 XML 文档中通过元素和属性进行导航。</p>

<h2>xpath 表达式 语法讲解</h2>

<p>参考网站：<a href="http://www.w3school.com.cn/xpath/xpath_syntax.asp">http://www.w3school.com.cn/xpath/xpath_syntax.asp</a></p>

<p>例如，现在有这些信息：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;head&gt;
</span><span class='line'>&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
</span><span class='line'>&lt;title&gt;CSDN.NET - 全球最大中文IT社区，为IT专业技术人员提供最全面的信息传播和服务平台&lt;/title&gt;
</span><span class='line'>&lt;link href="http://c.csdnimg.cn/www/css/csdn_common.css" rel="stylesheet" type="text/css"&gt;
</span><span class='line'>&lt;link href="css/content.css" rel="stylesheet" type="text/css"&gt;
</span><span class='line'>&lt;link href="http://c.csdnimg.cn/public/favicon.ico" rel="SHORTCUT ICON"&gt;
</span><span class='line'>&lt;/head&gt;</span></code></pre></td></tr></table></div></figure>


<table>
<thead>
<tr>
<th style="text-align:left;"> 表达式</th>
<th style="text-align:right;">     意思</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">/ </td>
<td style="text-align:right;">寻找指定标签</td>
</tr>
<tr>
<td style="text-align:left;">//</td>
<td style="text-align:right;"> 寻找所有标签</td>
</tr>
<tr>
<td style="text-align:left;">@</td>
<td style="text-align:right;"> 提取某个标签的属性的内容 </td>
</tr>
</tbody>
</table>


<hr />

<p><strong>例子：</strong></p>

<p>不管怎么样，记住一点：<strong>只有唯一的东西才能定位</strong>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">/</span><span class="n">title</span><span class="o">.</span><span class="n">text</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>表示：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">CSDN</span><span class="o">.</span><span class="n">NET</span> <span class="o">-</span> <span class="err">全球最大中文</span><span class="n">IT</span><span class="err">社区，为</span><span class="n">IT</span><span class="err">专业技术人员提供最全面的信息传播和服务平台</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>参考网站：<a href="http://scrapy-chs.readthedocs.io/zh_CN/0.24/topics/selectors.html">http://scrapy-chs.readthedocs.io/zh_CN/0.24/topics/selectors.html</a></p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python3 解决编码问题： `UnicodeEncodeError: 'Gbk' Codec Can't Encode Character ' ' in Position 10: Illegal Multibyte Sequence` --- 当执行爬虫将爬取信息打印到终端时出现的编码错误]]></title>
    <link href="http://aobojaing.github.io/blog/2016/11/26/python3-UnicodeEncodeError-gbk-codec-can't-encode-character-xa0/"/>
    <updated>2016-11-26T17:37:35+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/11/26/python3-UnicodeEncodeError-gbk-codec-can't-encode-character-xa0</id>
    <content type="html"><![CDATA[<ul>
<li>Python 版本：python-3.5.0-amd64</li>
</ul>


<hr />

<p>目标网站：<a href="http://blog.csdn.net/">http://blog.csdn.net/</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">process_item</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">item</span><span class="p">,</span> <span class="n">spider</span><span class="p">):</span>
</span><span class='line'>    <span class="c"># print(item[&#39;title&#39;])</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">])):</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&#39;第&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;篇文章：&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">][</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="s">&#39;detail&#39;</span><span class="p">][</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="s">&#39;link&#39;</span><span class="p">][</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&#39;---------&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">item</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出现的错误</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">D</span><span class="p">:</span>\<span class="n">WorkSpace</span>\<span class="n">python_ws</span>\<span class="n">python</span><span class="o">-</span><span class="n">large</span><span class="o">-</span><span class="n">web</span><span class="o">-</span><span class="n">crawler</span>\<span class="n">firstdemo</span><span class="o">&gt;</span><span class="n">scrapy</span> <span class="n">crawl</span> <span class="n">csdn</span>
</span><span class='line'><span class="mi">2016</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">26</span> <span class="mo">00</span><span class="p">:</span><span class="mi">37</span><span class="p">:</span><span class="mi">58</span> <span class="p">[</span><span class="n">scrapy</span><span class="p">]</span> <span class="n">INFO</span><span class="p">:</span> <span class="n">Scrapy</span> <span class="mf">1.2</span><span class="o">.</span><span class="mi">1</span> <span class="n">started</span> <span class="p">(</span><span class="n">bot</span><span class="p">:</span> <span class="n">firstdemo</span><span class="p">)</span>
</span><span class='line'><span class="mi">2016</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">26</span> <span class="mo">00</span><span class="p">:</span><span class="mi">37</span><span class="p">:</span><span class="mi">58</span> <span class="p">[</span><span class="n">scrapy</span><span class="p">]</span> <span class="n">INFO</span><span class="p">:</span> <span class="n">Overridden</span> <span class="n">settings</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;SPIDER_MODULES&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;firstdemo.spiders&#39;</span><span class="p">],</span> <span class="s">&#39;BOT_NAME&#39;</span><span class="p">:</span> <span class="s">&#39;firstdemo&#39;</span><span class="p">,</span> <span class="s">&#39;NEWSPIDER_MODULE&#39;</span><span class="p">:</span> <span class="s">&#39;firstdemo.spiders&#39;</span><span class="p">}</span>
</span><span class='line'><span class="mi">2016</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">26</span> <span class="mo">00</span><span class="p">:</span><span class="mi">37</span><span class="p">:</span><span class="mi">58</span> <span class="p">[</span><span class="n">scrapy</span><span class="p">]</span> <span class="n">INFO</span><span class="p">:</span> <span class="n">Enabled</span> <span class="n">extensions</span><span class="p">:</span>
</span><span class='line'><span class="p">[</span><span class="s">&#39;scrapy.extensions.logstats.LogStats&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.extensions.corestats.CoreStats&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.extensions.telnet.TelnetConsole&#39;</span><span class="p">]</span>
</span><span class='line'><span class="mi">2016</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">26</span> <span class="mo">00</span><span class="p">:</span><span class="mi">37</span><span class="p">:</span><span class="mi">59</span> <span class="p">[</span><span class="n">scrapy</span><span class="p">]</span> <span class="n">INFO</span><span class="p">:</span> <span class="n">Enabled</span> <span class="n">downloader</span> <span class="n">middlewares</span><span class="p">:</span>
</span><span class='line'><span class="p">[</span><span class="s">&#39;scrapy.downloadermiddlewares.httpauth.HttpAuthMiddleware&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.downloadermiddlewares.downloadtimeout.DownloadTimeoutMiddleware&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.downloadermiddlewares.defaultheaders.DefaultHeadersMiddleware&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.downloadermiddlewares.useragent.UserAgentMiddleware&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.downloadermiddlewares.retry.RetryMiddleware&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.downloadermiddlewares.redirect.MetaRefreshMiddleware&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.downloadermiddlewares.redirect.RedirectMiddleware&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.downloadermiddlewares.cookies.CookiesMiddleware&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.downloadermiddlewares.chunked.ChunkedTransferMiddleware&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.downloadermiddlewares.stats.DownloaderStats&#39;</span><span class="p">]</span>
</span><span class='line'><span class="mi">2016</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">26</span> <span class="mo">00</span><span class="p">:</span><span class="mi">37</span><span class="p">:</span><span class="mi">59</span> <span class="p">[</span><span class="n">scrapy</span><span class="p">]</span> <span class="n">INFO</span><span class="p">:</span> <span class="n">Enabled</span> <span class="n">spider</span> <span class="n">middlewares</span><span class="p">:</span>
</span><span class='line'><span class="p">[</span><span class="s">&#39;scrapy.spidermiddlewares.httperror.HttpErrorMiddleware&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.spidermiddlewares.offsite.OffsiteMiddleware&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.spidermiddlewares.referer.RefererMiddleware&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.spidermiddlewares.urllength.UrlLengthMiddleware&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scrapy.spidermiddlewares.depth.DepthMiddleware&#39;</span><span class="p">]</span>
</span><span class='line'><span class="mi">2016</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">26</span> <span class="mo">00</span><span class="p">:</span><span class="mi">37</span><span class="p">:</span><span class="mi">59</span> <span class="p">[</span><span class="n">scrapy</span><span class="p">]</span> <span class="n">INFO</span><span class="p">:</span> <span class="n">Enabled</span> <span class="n">item</span> <span class="n">pipelines</span><span class="p">:</span>
</span><span class='line'><span class="p">[</span><span class="s">&#39;firstdemo.pipelines.FirstdemoPipeline&#39;</span><span class="p">]</span>
</span><span class='line'><span class="mi">2016</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">26</span> <span class="mo">00</span><span class="p">:</span><span class="mi">37</span><span class="p">:</span><span class="mi">59</span> <span class="p">[</span><span class="n">scrapy</span><span class="p">]</span> <span class="n">INFO</span><span class="p">:</span> <span class="n">Spider</span> <span class="n">opened</span>
</span><span class='line'><span class="mi">2016</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">26</span> <span class="mo">00</span><span class="p">:</span><span class="mi">37</span><span class="p">:</span><span class="mi">59</span> <span class="p">[</span><span class="n">scrapy</span><span class="p">]</span> <span class="n">INFO</span><span class="p">:</span> <span class="n">Crawled</span> <span class="mi">0</span> <span class="n">pages</span> <span class="p">(</span><span class="n">at</span> <span class="mi">0</span> <span class="n">pages</span><span class="o">/</span><span class="nb">min</span><span class="p">),</span> <span class="n">scraped</span> <span class="mi">0</span> <span class="n">items</span> <span class="p">(</span><span class="n">at</span> <span class="mi">0</span> <span class="n">items</span><span class="o">/</span><span class="nb">min</span><span class="p">)</span>
</span><span class='line'><span class="mi">2016</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">26</span> <span class="mo">00</span><span class="p">:</span><span class="mi">37</span><span class="p">:</span><span class="mi">59</span> <span class="p">[</span><span class="n">scrapy</span><span class="p">]</span> <span class="n">DEBUG</span><span class="p">:</span> <span class="n">Telnet</span> <span class="n">console</span> <span class="n">listening</span> <span class="n">on</span> <span class="mf">127.0</span><span class="o">.</span><span class="mf">0.1</span><span class="p">:</span><span class="mi">6023</span>
</span><span class='line'><span class="mi">2016</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">26</span> <span class="mo">00</span><span class="p">:</span><span class="mi">37</span><span class="p">:</span><span class="mi">59</span> <span class="p">[</span><span class="n">scrapy</span><span class="p">]</span> <span class="n">DEBUG</span><span class="p">:</span> <span class="n">Crawled</span> <span class="p">(</span><span class="mi">200</span><span class="p">)</span> <span class="o">&lt;</span><span class="n">GET</span> <span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/&gt;</span> <span class="p">(</span><span class="n">referer</span><span class="p">:</span> <span class="bp">None</span><span class="p">)</span>
</span><span class='line'><span class="err">第</span><span class="mi">1</span><span class="err">篇文章：</span>
</span><span class='line'><span class="n">JSTL</span> <span class="err">标签大全详解</span>
</span><span class='line'><span class="mi">2016</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">26</span> <span class="mo">00</span><span class="p">:</span><span class="mi">37</span><span class="p">:</span><span class="mi">59</span> <span class="p">[</span><span class="n">scrapy</span><span class="p">]</span> <span class="n">ERROR</span><span class="p">:</span> <span class="n">Error</span> <span class="n">processing</span> <span class="p">{</span><span class="s">&#39;detail&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;1、什么是JSTL？</span><span class="se">\xa0</span><span class="s"> </span><span class="se">\xa0</span><span class="s"> </span><span class="se">\xa0</span><span class="s"> </span><span class="se">\xa0</span><span class="s"> &#39;</span>
</span><span class='line'>            <span class="s">&#39;JSTL是apache对EL表达式的扩展（也就是说JSTL依赖EL），JSTL是标签语言！JSTL标签使用以来非常方便，它与JSP动作标签一样，只不过它不是JSP内...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;你是否为调试第三方SDK时debug签名和release签名发生冲突而烦恼？你是否在debug时第三方功能测试通过，而release时无法使用？你是否在为对接微信、支付宝、地图因签名导致的问题而烦恼？...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;Android图表库MPAndroidChart(十二)——来点不一样的，正负堆叠条形图</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;  接上篇，今天要说的，和上篇的类似，只是方向是有相反的两面，我们先看下效果  实际上这样就导致了我们的代码是...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;一个类在被加载到内存之前要经过加载、验证、准备等过程。经过这些过程之后，虚拟机才会从方法区将代表类的运行时数据结构转换为内存中的Class。</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;我们这节内容的重点在于一个类是如何被加载的，所以我们从类...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;今天遇到一个问题是关于仿射变换的，但是由于没有将仿射变换的具体原理型明白，看别人的代码看的很费解，最后终于在师兄的帮助下将原理弄明白了，我觉得最重要的是理解 仿射变换可以看成是几种简单变换的复合实现，</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;开发环境准备首先你要搭建好React Native for Android开发环境， 没有搭建好的可以参考：React &#39;</span>
</span><span class='line'>            <span class="s">&#39;Native for Android Windows环境搭建  用Android...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;TCP三次握手四次挥手详解&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;秋招收官最后一战。</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;腾讯一面（电话）：</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;自我介绍</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;项目，平时怎么学习？</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;设计模式 </span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;（1）知道哪些设计模式？设计模式在Android、Java中是怎么应用的，每个都说一下？ </span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;（2）InputStre...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;实现一个简单的呈现/解散动画效果，当呈现时，呈现的主要内容和背景要明显区分，背景呈现一个半透明遮罩效果，透过背景可以看到下层 &#39;</span>
</span><span class='line'>            <span class="s">&#39;View Controller 的内容&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;概述前面的3篇博文分别对lazyAndroid的框架简介、元素抓取和核心API进行了说明，本文将基于框架给出的测试模板工程，详细阐述下使用该框架进行安卓UI自动化测试的步骤。&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;有时候我们想动态的根据一个资源名获得到对应的资源id，就可以使用getResources().getIdentifier()方法来获取该id。然后再使用该id进行相关的操作。</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;1、Demo示例</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;  下...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;这篇应该是RecycleView的第四篇了，RecycleView真是新生代的宠儿能做这么多的事情。转载请注明作者AndroidMsky及原文链接  </span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;http://blog.csdn.net/and...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;提供：ZStack云计算 &#39;</span>
</span><span class='line'>            <span class="s">&#39;前言版本控制，这是现代软件开发的核心需求之一。有了它，软件项目可以安全的跟踪代码变更并执行回溯、完整性检查、协同开发等多种操作。在各种版本控制软件中，git是近年来最流行的软...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;相信有部分同学已经有耳闻了，前几天炒的很火一个消息，就是 Google 要推出一种全新的操作系统，取名 &#39;</span>
</span><span class='line'>            <span class="s">&#39;Andromeda，这款新型的操作系统融合了 Android 和 Chrome OS，据称已经有...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;Android7.0 Vold 进程工作机制分析之整体流程</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;一、Vold简介</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;Vold是Volume Daemon的缩写,负责管理和控制Android平台外部存储设备，包括SD插拨、挂载、卸载...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;尊重原创，转载请标明出处</span><span class="se">\xa0\xa0\xa0\xa0</span><span class="s">http://blog.csdn.net/abcdef314159</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;Matrix是一个3*3的矩阵，通过矩阵执行对图像的平移，旋转，缩放，斜切等操作。先看一段代码   ...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;Service后台服务、前台服务、IntentService、跨进程服务、无障碍服务、系统服务</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;  本篇文章包括以下内容：</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;  </span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;  </span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;  前言</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;  Service的简介</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;  后台服务 </span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;  不可交互...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;借着今天“感恩节”，CSDN在此感谢每一位无私分享的博客作者。 </span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;  他们笔耕不辍，在这里分享技术经验、自己走过的坑……  </span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;  社区习惯了他们的存在，首页也需要他们的分享，他们无形中帮助了许多的开发...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;Android图表库MPAndroidChart(十一)——多层级的堆叠条形图</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>            <span class="s">&#39;  事实上这个也是条形图的一种扩展，我们看下效果就知道了  是吧，他一般满足的需求就是同类数据比较了，不过目前我还真没看...&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;相信大家应该都在使用 Android Studio 来开发 Android 了，如果你还没有的话，那么建议尽快迁移到 &#39;</span>
</span><span class='line'>            <span class="s">&#39;Android Studio 上来，而且 Google 前段时间刚刚宣布，已经彻底...&#39;</span><span class="p">],</span>
</span><span class='line'> <span class="s">&#39;link&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;http://blog.csdn.net/qq_25827845/article/details/53311722&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/yanzhenjie1003/article/details/53334071&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/qq_26787115/article/details/53333270&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/sahadev_/article/details/53334911&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/q123456789098/article/details/53330484&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/u011965040/article/details/53331859&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/u010913001/article/details/53331863&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/kesarchen/article/details/53332157&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/kmyhy/article/details/53322669&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/kaka1121/article/details/53325265&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/ouyang_peng/article/details/53328000&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/androidmsky/article/details/53306657&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/zstack_org/article/details/53331077&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/googdev/article/details/53331364&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/qq_31530015/article/details/53324819&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/abcdef314159/article/details/52813313&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/qq_30379689/article/details/53318861&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/blogdevteam/article/details/53322501&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/qq_26787115/article/details/53323046&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&#39;http://blog.csdn.net/googdev/article/details/53288564&#39;</span><span class="p">],</span>
</span><span class='line'> <span class="s">&#39;title&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;JSTL 标签大全详解&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;Android调试大法 自定义IDE默认签名文件&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;Android图表库MPAndroidChart(十二)——来点不一样的，正负堆叠条形图&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;一步步手动实现热修复(二)-类的加载机制简要介绍&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;仿射变换详解 warpAffine&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;React Native嵌入Android原生应用中&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;TCP三次握手四次挥手详解&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;腾讯Android面经&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;轻松实现部分背景半透明的呈现效果&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;APP自动化框架LazyAndroid使用手册（4）--测试模板工程详解&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;Android使用getIdentifier()方法根据资源名来获取资源id&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;Android基于RecyclerView实现高亮搜索列表&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;使用Git Hooks实现开发部署任务自动化&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;Andromeda OS 来了，Android 再见？&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;Android7.0 Vold 进程工作机制分析之整体流程&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;Android Matrix源码详解&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;Android四大组件——Service后台服务、前台服务、IntentService、跨进程服务、无障碍服务、系统服务&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;聚焦CSDN 2016博客之星，年终盛典！&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;Android图表库MPAndroidChart(十一)——多层级的堆叠条形图&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&#39;Android 高效调试神器 JRebel&#39;</span><span class="p">]}</span>
</span><span class='line'><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;c:\users</span><span class="se">\a</span><span class="s">obo</span><span class="se">\a</span><span class="s">ppdata\local\programs\python\python35\lib\site-packages</span><span class="se">\t</span><span class="s">wisted\internet\defer.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">649</span><span class="p">,</span> <span class="ow">in</span> <span class="n">_runCallbacks</span>
</span><span class='line'>    <span class="n">current</span><span class="o">.</span><span class="n">result</span> <span class="o">=</span> <span class="n">callback</span><span class="p">(</span><span class="n">current</span><span class="o">.</span><span class="n">result</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kw</span><span class="p">)</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;D:\WorkSpace\python_ws\python-large-web-crawler</span><span class="se">\f</span><span class="s">irstdemo</span><span class="se">\f</span><span class="s">irstdemo\pipelines.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">15</span><span class="p">,</span> <span class="ow">in</span> <span class="n">process_item</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="s">&#39;detail&#39;</span><span class="p">][</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'><span class="ne">UnicodeEncodeError</span><span class="p">:</span> <span class="s">&#39;gbk&#39;</span> <span class="n">codec</span> <span class="n">can</span><span class="s">&#39;t encode character &#39;</span>\<span class="n">xa0</span><span class="s">&#39; in position 10: illegal multibyte sequence</span>
</span><span class='line'><span class="mi">2016</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">26</span> <span class="mo">00</span><span class="p">:</span><span class="mi">38</span><span class="p">:</span><span class="mo">00</span> <span class="p">[</span><span class="n">scrapy</span><span class="p">]</span> <span class="n">INFO</span><span class="p">:</span> <span class="n">Closing</span> <span class="n">spider</span> <span class="p">(</span><span class="n">finished</span><span class="p">)</span>
</span><span class='line'><span class="mi">2016</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">26</span> <span class="mo">00</span><span class="p">:</span><span class="mi">38</span><span class="p">:</span><span class="mo">00</span> <span class="p">[</span><span class="n">scrapy</span><span class="p">]</span> <span class="n">INFO</span><span class="p">:</span> <span class="n">Dumping</span> <span class="n">Scrapy</span> <span class="n">stats</span><span class="p">:</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;downloader/request_bytes&#39;</span><span class="p">:</span> <span class="mi">211</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;downloader/request_count&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;downloader/request_method_count/GET&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;downloader/response_bytes&#39;</span><span class="p">:</span> <span class="mi">13294</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;downloader/response_count&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;downloader/response_status_count/200&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;finish_reason&#39;</span><span class="p">:</span> <span class="s">&#39;finished&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;finish_time&#39;</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2016</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">38</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">268302</span><span class="p">),</span>
</span><span class='line'> <span class="s">&#39;log_count/DEBUG&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;log_count/ERROR&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;log_count/INFO&#39;</span><span class="p">:</span> <span class="mi">7</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;response_received_count&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scheduler/dequeued&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scheduler/dequeued/memory&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scheduler/enqueued&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;scheduler/enqueued/memory&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;start_time&#39;</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2016</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">37</span><span class="p">,</span> <span class="mi">59</span><span class="p">,</span> <span class="mi">190533</span><span class="p">)}</span>
</span><span class='line'><span class="mi">2016</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">26</span> <span class="mo">00</span><span class="p">:</span><span class="mi">38</span><span class="p">:</span><span class="mo">00</span> <span class="p">[</span><span class="n">scrapy</span><span class="p">]</span> <span class="n">INFO</span><span class="p">:</span> <span class="n">Spider</span> <span class="n">closed</span> <span class="p">(</span><span class="n">finished</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">D</span><span class="p">:</span>\<span class="n">WorkSpace</span>\<span class="n">python_ws</span>\<span class="n">python</span><span class="o">-</span><span class="n">large</span><span class="o">-</span><span class="n">web</span><span class="o">-</span><span class="n">crawler</span>\<span class="n">firstdemo</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>解析 为什么会出现这个问题？</h2>

<p><strong>解析：</strong></p>

<p>当我们获取这个网页的源代码的时候，是将这个网页用<strong>utf-8</strong>的解码方式将其转换成对应的<strong>Unicode</strong>字符，当我们使用<code>print()</code>函数将其打印到Windows系统的DOS窗口上的时候（DOS窗口的编码方式是<strong>GBK</strong>），自动将<strong>Unicode</strong>字符通过<strong>GBK</strong>编码转换为<strong>GBK</strong>编码方式的<code>str</code>。</p>

<p>整个过程是： [用python爬取] <strong>UTF-8</strong>(<code>str</code>) -> [缓存中存放] <strong>Unicode</strong>(<code>byte</code>) -> [DOS中显示] <strong>GBK</strong>(<code>str</code>)</p>

<hr />

<p><strong>出现这个问题（错误的<code>\xa0</code>）的原因：</strong></p>

<p>网页源代码中的<code>&amp;nbsp;</code> 的<code>utf-8</code> 编码是：<code>\xc2 \xa0</code>，通过后，转换为<strong>Unicode</strong>字符为：<code>\xa0</code>，当显示到<strong>DOS</strong>窗口上的时候，转换为<strong>GBK</strong>编码的字符串，但是<code>\xa0</code>这个<strong>Unicode</strong>字符没有对应的 <strong>GBK</strong> 编码的字符串，所以出现错误。</p>

<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-UnicodeEncodeError-gbk-codec-can't-encode-character-xa0/1480148818436.png" alt="Alt text" /></p>

<p><a href="http://www.codetable.net/hex/a0">http://www.codetable.net/hex/a0</a></p>

<p><img src="http://aobojaing.github.io/images/2016-11-26-python3-UnicodeEncodeError-gbk-codec-can't-encode-character-xa0/1480147139074.png" alt="Alt text" /></p>

<p><strong>Unicode</strong>字符：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">第</span><span class="mi">7</span><span class="err">篇文章：</span>
</span><span class='line'><span class="n">JSTL</span> <span class="err">标签大全详解</span>
</span><span class='line'><span class="n">b</span><span class="s">&#39;1</span><span class="se">\\</span><span class="s">u3001</span><span class="se">\\</span><span class="s">u4ec0</span><span class="se">\\</span><span class="s">u4e48</span><span class="se">\\</span><span class="s">u662fJSTL</span><span class="se">\\</span><span class="s">uff1f</span><span class="se">\\</span><span class="s">xa0 </span><span class="se">\\</span><span class="s">xa0 </span><span class="se">\\</span><span class="s">xa0 </span><span class="se">\\</span><span class="s">xa0 JSTL</span><span class="se">\\</span><span class="s">u662fapache</span><span class="se">\\</span><span class="s">u5bf9EL</span><span class="se">\\</span><span class="s">u8868</span><span class="se">\\</span><span class="s">u8fbe</span><span class="se">\\</span><span class="s">u5f0f</span><span class="se">\\</span><span class="s">u7684</span>
</span><span class='line'>\\<span class="n">u6269</span>\\<span class="n">u5c55</span>\\<span class="n">uff08</span>\\<span class="n">u4e5f</span>\\<span class="n">u5c31</span>\\<span class="n">u662f</span>\\<span class="n">u8bf4JSTL</span>\\<span class="n">u4f9d</span>\\<span class="n">u8d56EL</span>\\<span class="n">uff09</span>\\<span class="n">uff0cJSTL</span>\\<span class="n">u662f</span>\\<span class="n">u6807</span>\\<span class="n">u7b7e</span>\\<span class="n">u8bed</span>\\<span class="n">u8a</span>
</span><span class='line'><span class="mo">00</span>\\<span class="n">uff01JSTL</span>\\<span class="n">u6807</span>\\<span class="n">u7b7e</span>\\<span class="n">u4f7f</span>\\<span class="n">u7528</span>\\<span class="n">u4ee5</span>\\<span class="n">u6765</span>\\<span class="n">u975e</span>\\<span class="n">u5e38</span>\\<span class="n">u65b9</span>\\<span class="n">u4fbf</span>\\<span class="n">uff0c</span>\\<span class="n">u5b83</span>\\<span class="n">u4e0eJSP</span>\\<span class="n">u52a8</span>\\<span class="n">u4f5</span>
</span><span class='line'><span class="n">c</span>\\<span class="n">u6807</span>\\<span class="n">u7b7e</span>\\<span class="n">u4e00</span>\\<span class="n">u6837</span>\\<span class="n">uff0c</span>\\<span class="n">u53ea</span>\\<span class="n">u4e0d</span>\\<span class="n">u8fc7</span>\\<span class="n">u5b83</span>\\<span class="n">u4e0d</span>\\<span class="n">u662fJSP</span>\\<span class="n">u5185</span><span class="o">...</span><span class="s">&#39;</span>
</span><span class='line'><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">csdn</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">qq_25827845</span><span class="o">/</span><span class="n">article</span><span class="o">/</span><span class="n">details</span><span class="o">/</span><span class="mi">53311722</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过<strong>GBK</strong>编码后得到的错误的<code>log</code>信息。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="s">&#39;1、什么是JSTL？</span><span class="se">\xa0</span><span class="s"> </span><span class="se">\xa0</span><span class="s"> </span><span class="se">\xa0</span><span class="s"> </span><span class="se">\xa0</span><span class="s"> &#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>解决办法</h2>

<p><a href="http://stackoverflow.com/questions/10993612/python-removing-xa0-from-string">http://stackoverflow.com/questions/10993612/python-removing-xa0-from-string</a></p>

<p>用 ‘<code></code>’ 来替换 ‘<code>\xa0</code>’ （<code>&amp;nbsp;</code>）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="s">&#39;detail&#39;</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">u&#39;</span><span class="se">\xa0</span><span class="s"> &#39;</span><span class="p">,</span> <span class="s">u&#39; &#39;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h2>搞定</h2>

<hr />

<p>参考网站：</p>

<p><a href="https://www.zhihu.com/question/20899988">https://www.zhihu.com/question/20899988</a></p>

<p><a href="http://blog.csdn.net/jim7424994/article/details/22675759">http://blog.csdn.net/jim7424994/article/details/22675759</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决问题： Pywin32 安装后出现 Import Win32api ImportError DLL Load Failed]]></title>
    <link href="http://aobojaing.github.io/blog/2016/11/26/solve-pywin32-import-win32api-ImportError-DLL-load-failed/"/>
    <updated>2016-11-26T07:04:25+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/11/26/solve-pywin32-import-win32api-ImportError-DLL-load-failed</id>
    <content type="html"><![CDATA[<hr />

<p>执行 <code>scrapy bench</code> 命令时 出现错误。（之前安装了pywin32库）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Traceback (most recent call last):
</span><span class='line'>  File "c:\users\aobo\appdata\local\programs\python\python35\lib\site-packages\twisted\internet\defer.py", line 1260, in _inlineCallbacks
</span><span class='line'>    result = g.send(result)
</span><span class='line'>  File "c:\users\aobo\appdata\local\programs\python\python35\lib\site-packages\scrapy\crawler.py", line 72, in crawl
</span><span class='line'>    self.engine = self._create_engine()
</span><span class='line'>  File "c:\users\aobo\appdata\local\programs\python\python35\lib\site-packages\scrapy\crawler.py", line 97, in _create_engine
</span><span class='line'>    return ExecutionEngine(self, lambda _: self.stop())
</span><span class='line'>  File "c:\users\aobo\appdata\local\programs\python\python35\lib\site-packages\scrapy\core\engine.py", line 68, in __init__
</span><span class='line'>    self.downloader = downloader_cls(crawler)
</span><span class='line'>  File "c:\users\aobo\appdata\local\programs\python\python35\lib\site-packages\scrapy\core\downloader\__init__.py", line 88, in __init__
</span><span class='line'>    self.middleware = DownloaderMiddlewareManager.from_crawler(crawler)
</span><span class='line'>  File "c:\users\aobo\appdata\local\programs\python\python35\lib\site-packages\scrapy\middleware.py", line 58, in from_crawler
</span><span class='line'>    return cls.from_settings(crawler.settings, crawler)
</span><span class='line'>  File "c:\users\aobo\appdata\local\programs\python\python35\lib\site-packages\scrapy\middleware.py", line 34, in from_settings
</span><span class='line'>    mwcls = load_object(clspath)
</span><span class='line'>  File "c:\users\aobo\appdata\local\programs\python\python35\lib\site-packages\scrapy\utils\misc.py", line 44, in load_object
</span><span class='line'>    mod = import_module(module)
</span><span class='line'>  File "c:\users\aobo\appdata\local\programs\python\python35\lib\importlib\__init__.py", line 126, in import_module
</span><span class='line'>    return _bootstrap._gcd_import(name[level:], package, level)
</span><span class='line'>  File "&lt;frozen importlib._bootstrap&gt;", line 986, in _gcd_import
</span><span class='line'>  File "&lt;frozen importlib._bootstrap&gt;", line 969, in _find_and_load
</span><span class='line'>  File "&lt;frozen importlib._bootstrap&gt;", line 958, in _find_and_load_unlocked
</span><span class='line'>  File "&lt;frozen importlib._bootstrap&gt;", line 673, in _load_unlocked
</span><span class='line'>  File "&lt;frozen importlib._bootstrap_external&gt;", line 662, in exec_module
</span><span class='line'>  File "&lt;frozen importlib._bootstrap&gt;", line 222, in _call_with_frames_removed
</span><span class='line'>  File "c:\users\aobo\appdata\local\programs\python\python35\lib\site-packages\scrapy\downloadermiddlewares\retry.py", line 23, in &lt;module&gt;
</span><span class='line'>    from scrapy.xlib.tx import ResponseFailed
</span><span class='line'>  File "c:\users\aobo\appdata\local\programs\python\python35\lib\site-packages\scrapy\xlib\tx\__init__.py", line 3, in &lt;module&gt;
</span><span class='line'>    from twisted.web import client
</span><span class='line'>  File "c:\users\aobo\appdata\local\programs\python\python35\lib\site-packages\twisted\web\client.py", line 42, in &lt;module&gt;
</span><span class='line'>    from twisted.internet.endpoints import TCP4ClientEndpoint, SSL4ClientEndpoint
</span><span class='line'>  File "c:\users\aobo\appdata\local\programs\python\python35\lib\site-packages\twisted\internet\endpoints.py", line 36, in &lt;module&gt;
</span><span class='line'>    from twisted.internet.stdio import StandardIO, PipeAddress
</span><span class='line'>  File "c:\users\aobo\appdata\local\programs\python\python35\lib\site-packages\twisted\internet\stdio.py", line 30, in &lt;module&gt;
</span><span class='line'>    from twisted.internet import _win32stdio
</span><span class='line'>  File "c:\users\aobo\appdata\local\programs\python\python35\lib\site-packages\twisted\internet\_win32stdio.py", line 9, in &lt;module&gt;
</span><span class='line'>    import win32api
</span><span class='line'>ImportError: DLL load failed: 找不到指定的模块。</span></code></pre></td></tr></table></div></figure>


<h2>解决办法：</h2>

<p>参考网站：</p>

<p><a href="http://blog.csdn.net/mtt_sky/article/details/50445938">http://blog.csdn.net/mtt_sky/article/details/50445938</a>
<a href="http://blog.sina.com.cn/s/blog_5a81b7990101l225.html">http://blog.sina.com.cn/s/blog_5a81b7990101l225.html</a></p>

<p><code>C:\Users\AOBO\AppData\Local\Programs\Python\Python35\Lib\site-packages\pywin32_system32</code></p>

<p>里面的所有的文件复制到：<code>C:\Windows\System32</code></p>

<p>现在，问题解决。无需重新打开DOS窗口，直接执行：<code>scrapy bench</code>。</p>

<p>输出正常：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>D:\BaiduYunDownload\first&gt;scrapy bench
</span><span class='line'>2016-11-23 13:56:45 [scrapy] INFO: Scrapy 1.2.1 started (bot: first)
</span><span class='line'>2016-11-23 13:56:45 [scrapy] INFO: Overridden settings: {'NEWSPIDER_MODULE': 'first.spiders', 'CLOSESPIDER_TIMEOUT': 10, 'LOGSTATS_INTERVAL': 1, 'LOG_LEVEL': 'INFO', 'BOT_NAME': 'first', 'SPIDER_MODULES': ['first.spiders']}
</span><span class='line'>2016-11-23 13:56:47 [scrapy] INFO: Enabled extensions:
</span><span class='line'>['scrapy.extensions.corestats.CoreStats',
</span><span class='line'> 'scrapy.extensions.telnet.TelnetConsole',
</span><span class='line'> 'scrapy.extensions.closespider.CloseSpider',
</span><span class='line'> 'scrapy.extensions.logstats.LogStats']
</span><span class='line'>2016-11-23 13:56:48 [scrapy] INFO: Enabled downloader middlewares:
</span><span class='line'>['scrapy.downloadermiddlewares.httpauth.HttpAuthMiddleware',
</span><span class='line'> 'scrapy.downloadermiddlewares.downloadtimeout.DownloadTimeoutMiddleware',
</span><span class='line'> 'scrapy.downloadermiddlewares.defaultheaders.DefaultHeadersMiddleware',
</span><span class='line'> 'scrapy.downloadermiddlewares.useragent.UserAgentMiddleware',
</span><span class='line'> 'scrapy.downloadermiddlewares.retry.RetryMiddleware',
</span><span class='line'> 'scrapy.downloadermiddlewares.redirect.MetaRefreshMiddleware',
</span><span class='line'> 'scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware',
</span><span class='line'> 'scrapy.downloadermiddlewares.redirect.RedirectMiddleware',
</span><span class='line'> 'scrapy.downloadermiddlewares.cookies.CookiesMiddleware',
</span><span class='line'> 'scrapy.downloadermiddlewares.chunked.ChunkedTransferMiddleware',
</span><span class='line'> 'scrapy.downloadermiddlewares.stats.DownloaderStats']
</span><span class='line'>2016-11-23 13:56:48 [scrapy] INFO: Enabled spider middlewares:
</span><span class='line'>['scrapy.spidermiddlewares.httperror.HttpErrorMiddleware',
</span><span class='line'> 'scrapy.spidermiddlewares.offsite.OffsiteMiddleware',
</span><span class='line'> 'scrapy.spidermiddlewares.referer.RefererMiddleware',
</span><span class='line'> 'scrapy.spidermiddlewares.urllength.UrlLengthMiddleware',
</span><span class='line'> 'scrapy.spidermiddlewares.depth.DepthMiddleware']
</span><span class='line'>2016-11-23 13:56:48 [scrapy] INFO: Enabled item pipelines:
</span><span class='line'>['first.pipelines.FirstPipeline']
</span><span class='line'>2016-11-23 13:56:48 [scrapy] INFO: Spider opened
</span><span class='line'>2016-11-23 13:56:48 [scrapy] INFO: Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)
</span><span class='line'>2016-11-23 13:56:49 [scrapy] INFO: Crawled 69 pages (at 4140 pages/min), scraped 0 items (at 0 items/min)
</span><span class='line'>2016-11-23 13:56:50 [scrapy] INFO: Crawled 141 pages (at 4320 pages/min), scraped 0 items (at 0 items/min)
</span><span class='line'>2016-11-23 13:56:51 [scrapy] INFO: Crawled 205 pages (at 3840 pages/min), scraped 0 items (at 0 items/min)
</span><span class='line'>2016-11-23 13:56:52 [scrapy] INFO: Crawled 269 pages (at 3840 pages/min), scraped 0 items (at 0 items/min)
</span><span class='line'>2016-11-23 13:56:53 [scrapy] INFO: Crawled 325 pages (at 3360 pages/min), scraped 0 items (at 0 items/min)
</span><span class='line'>2016-11-23 13:56:54 [scrapy] INFO: Crawled 373 pages (at 2880 pages/min), scraped 0 items (at 0 items/min)
</span><span class='line'>2016-11-23 13:56:55 [scrapy] INFO: Crawled 429 pages (at 3360 pages/min), scraped 0 items (at 0 items/min)
</span><span class='line'>2016-11-23 13:56:56 [scrapy] INFO: Crawled 477 pages (at 2880 pages/min), scraped 0 items (at 0 items/min)
</span><span class='line'>2016-11-23 13:56:57 [scrapy] INFO: Crawled 533 pages (at 3360 pages/min), scraped 0 items (at 0 items/min)
</span><span class='line'>2016-11-23 13:56:58 [scrapy] INFO: Crawled 581 pages (at 2880 pages/min), scraped 0 items (at 0 items/min)
</span><span class='line'>2016-11-23 13:56:58 [scrapy] INFO: Closing spider (closespider_timeout)
</span><span class='line'>2016-11-23 13:56:59 [scrapy] INFO: Dumping Scrapy stats:
</span><span class='line'>{'downloader/request_bytes': 265444,
</span><span class='line'> 'downloader/request_count': 597,
</span><span class='line'> 'downloader/request_method_count/GET': 597,
</span><span class='line'> 'downloader/response_bytes': 1833261,
</span><span class='line'> 'downloader/response_count': 597,
</span><span class='line'> 'downloader/response_status_count/200': 597,
</span><span class='line'> 'finish_reason': 'closespider_timeout',
</span><span class='line'> 'finish_time': datetime.datetime(2016, 11, 23, 5, 56, 59, 266168),
</span><span class='line'> 'log_count/INFO': 17,
</span><span class='line'> 'request_depth_max': 20,
</span><span class='line'> 'response_received_count': 597,
</span><span class='line'> 'scheduler/dequeued': 597,
</span><span class='line'> 'scheduler/dequeued/memory': 597,
</span><span class='line'> 'scheduler/enqueued': 11938,
</span><span class='line'> 'scheduler/enqueued/memory': 11938,
</span><span class='line'> 'start_time': datetime.datetime(2016, 11, 23, 5, 56, 48, 450531)}
</span><span class='line'>2016-11-23 13:56:59 [scrapy] INFO: Spider closed (closespider_timeout)
</span><span class='line'>
</span><span class='line'>D:\BaiduYunDownload\first&gt;</span></code></pre></td></tr></table></div></figure>


<hr />
]]></content>
  </entry>
  
</feed>
