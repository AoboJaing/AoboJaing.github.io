<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[AoboSir 的博客]]></title>
  <link href="http://aobojaing.github.io/atom.xml" rel="self"/>
  <link href="http://aobojaing.github.io/"/>
  <updated>2016-10-17T11:10:47+08:00</updated>
  <id>http://aobojaing.github.io/</id>
  <author>
    <name><![CDATA[Aobo Jaing]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 026 查询-09 聚合函数 --- 怎样编写模糊查询语句]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/17/SQL-Learning-026-Query-09-aggregate-function-fuzzy-query/"/>
    <updated>2016-10-17T11:05:58+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/17/SQL-Learning-026-Query-09-aggregate-function-fuzzy-query</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<blockquote><p>本篇博客里面使用了 <code>scott</code> 库，如何你现在还没有添加这个库到你的服务器里面，请在查看本篇博客前，访问<a href="http://www.aobosir.com/blog/2016/10/16/SQL-Learning-016-how-to-attach-a-database/">这篇博文</a>来在你的服务器里面附加<code>scott</code>库。</p></blockquote>

<hr />

<h2>函数的分类</h2>

<p>单行函数</p>

<ul>
<li>每一行返回一个值</li>
</ul>


<hr />

<p>多行函数</p>

<ul>
<li>多行返回一个值</li>
<li>聚合函数是多行函数</li>
</ul>


<hr />

<p>例子：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">lower</span><span class="p">(</span><span class="n">ename</span><span class="p">)</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--最终返回的是14行</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-026-Query-09-aggregate-function-fuzzy-query/1476672968757.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">max</span><span class="p">(</span><span class="n">sal</span><span class="p">)</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--返回时1行 max() 是多行函数</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-026-Query-09-aggregate-function-fuzzy-query/1476672998766.png" alt="Alt text" /></p>

<hr />

<h2>聚合函数的分类</h2>

<ul>
<li><code>max()</code> 求最大值</li>
<li><code>min()</code> 求最小值</li>
<li><code>avg()</code> 平均值</li>
<li><code>count()</code> 求个数

<ul>
<li><code>count(*)</code> ：返回表中所有的记录的个数</li>
<li><code>count(字段名)</code> : 返回字段值非空的记录的个数， 重复的记录也会被当做有效记录</li>
<li><code>count(distinct 字段名)</code> ：返回字段不重复并且非空的记录的个数</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--返回emp表所有记录的个数</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-026-Query-09-aggregate-function-fuzzy-query/1476673037243.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">count</span><span class="p">(</span><span class="n">deptno</span><span class="p">)</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--返回值是14，这说明deptno重复的记录也被当做有效的记录</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-026-Query-09-aggregate-function-fuzzy-query/1476673083683.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">count</span><span class="p">(</span><span class="k">distinct</span> <span class="n">deptno</span><span class="p">)</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--返回值是3， 统计deptno不重复的记录的个数</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-026-Query-09-aggregate-function-fuzzy-query/1476673123560.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">count</span><span class="p">(</span><span class="n">comm</span><span class="p">)</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--返回值是4。 这说明comm为null的记录不会被当做有效的记录</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-026-Query-09-aggregate-function-fuzzy-query/1476673148684.png" alt="Alt text" /></p>

<hr />

<h2>注意的问题</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">max</span><span class="p">(</span><span class="n">sal</span><span class="p">),</span> <span class="k">min</span><span class="p">(</span><span class="n">sal</span><span class="p">),</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-026-Query-09-aggregate-function-fuzzy-query/1476673188904.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">max</span><span class="p">(</span><span class="n">sal</span><span class="p">)</span> <span class="ss">&quot;最高工资&quot;</span><span class="p">,</span> <span class="k">min</span><span class="p">(</span><span class="n">sal</span><span class="p">)</span> <span class="ss">&quot;最低工资&quot;</span><span class="p">,</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="ss">&quot;员工人数&quot;</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-026-Query-09-aggregate-function-fuzzy-query/1476673238975.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">max</span><span class="p">(</span><span class="n">sal</span><span class="p">),</span> <span class="k">lower</span><span class="p">(</span><span class="n">ename</span><span class="p">)</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--error 单行函数和多行函数不能混用</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-026-Query-09-aggregate-function-fuzzy-query/1476673278431.png" alt="Alt text" /></p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 025 查询-08 模糊查询 --- 怎样编写模糊查询语句]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/17/SQL-Learning-025-Query-08-Fuzzy-Query/"/>
    <updated>2016-10-17T06:59:39+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/17/SQL-Learning-025-Query-08-Fuzzy-Query</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<blockquote><p>本篇博客里面使用了 <code>scott</code> 库，如何你现在还没有添加这个库到你的服务器里面，请在查看本篇博客前，访问<a href="http://www.aobosir.com/blog/2016/10/16/SQL-Learning-016-how-to-attach-a-database/">这篇博文</a>来在你的服务器里面附加<code>scott</code>库。</p></blockquote>

<hr />

<h2>怎样编写模糊查询语句</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">ename</span> <span class="k">like</span> <span class="s1">&#39;%A%&#39;</span>
</span><span class='line'>  <span class="c1">--ename只要含有字母A就输出</span>
</span><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">ename</span> <span class="k">like</span> <span class="s1">&#39;A%&#39;</span>
</span><span class='line'>  <span class="c1">--ename只要首字母是A的就输出</span>
</span><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">ename</span> <span class="k">like</span> <span class="s1">&#39;%A&#39;</span>
</span><span class='line'>  <span class="c1">--ename只要尾字母是A的就输出</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-025-Query-08-Fuzzy-Query/1476658355448.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-025-Query-08-Fuzzy-Query/1476658371703.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-025-Query-08-Fuzzy-Query/1476658389550.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">ename</span> <span class="k">like</span> <span class="s1">&#39;_A%&#39;</span>
</span><span class='line'>  <span class="c1">--ename只要第二个字母是A的就输出</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-025-Query-08-Fuzzy-Query/1476658413951.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">ename</span> <span class="k">like</span> <span class="s1">&#39;_[A-F]%&#39;</span>
</span><span class='line'>  <span class="c1">--把ename中第二个字符是A或者B或者C或者D或者E或者F的记录输出</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-025-Query-08-Fuzzy-Query/1476658456248.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">ename</span> <span class="k">like</span> <span class="s1">&#39;_[^A-F]%&#39;</span>
</span><span class='line'>  <span class="c1">--把ename中第二个字符不是A也不是B也不是C也不是D也不是E也不是F的记录输出</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-025-Query-08-Fuzzy-Query/1476658507717.png" alt="Alt text" /></p>

<hr />

<p>创建一个 <code>student</code> 表。（预备操作）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">create</span> <span class="k">table</span> <span class="n">student</span>
</span><span class='line'><span class="p">(</span>
</span><span class='line'>  <span class="n">name</span> <span class="n">nvarchar</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="k">null</span><span class="p">,</span>
</span><span class='line'>  <span class="n">age</span> <span class="nb">int</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student</span> <span class="k">values</span> <span class="p">(</span><span class="s1">&#39;张三&#39;</span><span class="p">,</span> <span class="mi">68</span><span class="p">);</span>
</span><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student</span> <span class="k">values</span> <span class="p">(</span><span class="s1">&#39;Tom&#39;</span><span class="p">,</span> <span class="mi">66</span><span class="p">);</span>
</span><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student</span> <span class="k">values</span> <span class="p">(</span><span class="s1">&#39;a_b&#39;</span><span class="p">,</span> <span class="mi">22</span><span class="p">);</span>
</span><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student</span> <span class="k">values</span> <span class="p">(</span><span class="s1">&#39;c%d&#39;</span><span class="p">,</span> <span class="mi">44</span><span class="p">);</span>
</span><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student</span> <span class="k">values</span> <span class="p">(</span><span class="s1">&#39;abc_fe&#39;</span><span class="p">,</span> <span class="mi">56</span><span class="p">);</span>
</span><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student</span> <span class="k">values</span> <span class="p">(</span><span class="s1">&#39;haobin&#39;</span><span class="p">,</span> <span class="mi">25</span><span class="p">);</span>
</span><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student</span> <span class="k">values</span> <span class="p">(</span><span class="s1">&#39;HapBin&#39;</span><span class="p">,</span> <span class="mi">88</span><span class="p">);</span>
</span><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student</span> <span class="k">values</span> <span class="p">(</span><span class="s1">&#39;c%&#39;</span><span class="p">,</span> <span class="mi">66</span><span class="p">);</span>
</span><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student</span> <span class="k">values</span> <span class="p">(</span><span class="s1">&#39;long&#39;&#39;s&#39;</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">student</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-025-Query-08-Fuzzy-Query/1476658533004.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">student</span> <span class="k">where</span> <span class="n">name</span> <span class="k">like</span> <span class="s1">&#39;%\%%&#39;</span> <span class="k">escape</span> <span class="s1">&#39;\&#39;</span>
</span><span class='line'>  <span class="c1">--把name中包含有%的输出</span>
</span><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">student</span> <span class="k">where</span> <span class="n">name</span> <span class="k">like</span> <span class="s1">&#39;%\_%&#39;</span> <span class="k">escape</span> <span class="s1">&#39;\&#39;</span>
</span><span class='line'>  <span class="c1">--把name中包含有_的输出</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-025-Query-08-Fuzzy-Query/1476658590460.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-025-Query-08-Fuzzy-Query/1476658616954.png" alt="Alt text" /></p>

<hr />

<p><strong>总结：</strong> <strong>通配符：</strong></p>

<p><strong>格式：</strong> <code>select 字段的集合 from 表名 where 某个字段的名字 like 匹配的条件</code></p>

<blockquote><p>匹配的条件通常含有通配符</p></blockquote>

<ul>
<li><code>%</code>

<ul>
<li>表示任意0个或多个字符</li>
</ul>
</li>
<li><code>_</code> （这个是下划线，不是减号）

<ul>
<li>表示任意单个字符</li>
</ul>
</li>
<li><code>[a-f]</code>

<ul>
<li><code>a</code> 到 <code>f</code> 中的任意单个字符。只能是<code>a</code>、<code>b</code>、<code>c</code>、<code>d</code>、<code>e</code>、<code>f</code> 中的任意一个字符</li>
</ul>
</li>
<li><code>[a, f]</code>

<ul>
<li><code>a</code> 或者 <code>f</code></li>
</ul>
</li>
<li><code>[^a-c]</code>

<ul>
<li>不是<code>a</code>、也不是<code>b</code>，也不是<code>c</code>的任意单个字符</li>
</ul>
</li>
</ul>


<hr />

<p><strong>注意：</strong></p>

<ul>
<li>匹配的内容必须使用单引号括起来。不能省略，也不能改用双引号。</li>
<li><code>escape '\'</code> 里面 <code>escape</code> 后面 <code>''</code> 里面的<code>\</code> 字符就自定义的：通配符。它可以替换成其他的字符（比如：<code>a</code>、<code>b</code>、<code>m</code> 等等）。</li>
</ul>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 024 查询-07 Order by 的用法 --- 以某个字段排序]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/17/SQL-Learning-024-Query-07-order-by-usage-sort/"/>
    <updated>2016-10-17T03:13:40+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/17/SQL-Learning-024-Query-07-order-by-usage-sort</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<blockquote><p>本篇博客里面使用了 <code>scott</code> 库，如何你现在还没有添加这个库到你的服务器里面，请在查看本篇博客前，访问<a href="http://www.aobosir.com/blog/2016/10/16/SQL-Learning-016-how-to-attach-a-database/">这篇博文</a>来在你的服务器里面附加<code>scott</code>库。</p></blockquote>

<hr />

<h2><code>order by</code> &mdash; 以某个字段排序</h2>

<p><strong>例子：</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">order</span> <span class="k">by</span> <span class="n">sal</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--默认是按照升序排序</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-024-Query-07-order-by-usage-sort/1476644715874.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">order</span> <span class="k">by</span> <span class="n">deptno</span><span class="p">,</span> <span class="n">sal</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--先按照deptno排序，然后再按照sal排序</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-024-Query-07-order-by-usage-sort/1476644847648.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">--asc是升序的意思，默认可以不写 desc是降序</span>
</span><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">order</span> <span class="k">by</span> <span class="n">deptno</span> <span class="k">desc</span><span class="p">,</span> <span class="n">sal</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--先按照deptno降序排序，如果deptno相同，再按照sal升序排序</span>
</span><span class='line'>  <span class="c1">--记住sal是升序不是降序</span>
</span><span class='line'>  <span class="c1">--order by a desc, b, c, d   desc只对a产生影响，不会对后面的b, c, d 产生影响</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-024-Query-07-order-by-usage-sort/1476644919129.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">order</span> <span class="k">by</span> <span class="n">deptno</span><span class="p">,</span> <span class="n">sal</span> <span class="k">desc</span>
</span><span class='line'>  <span class="c1">--问题：desc是否会对deptno产生影响？</span>
</span><span class='line'>  <span class="c1">--答案：不会</span>
</span><span class='line'>  <span class="c1">--先按deptno升序，如果deptno相同，再按sal降序排序</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-024-Query-07-order-by-usage-sort/1476644983662.png" alt="Alt text" /></p>

<hr />

<p><strong>总结：</strong></p>

<ul>
<li><code>order by a, b                --a和b都是升序</code></li>
<li><code>order by a, b desc           --a升序 b降序</code></li>
<li><code>order by a desc, b           --a降序 b升序</code></li>
<li><code>order by a desc, b desc  --a和b都是降序</code></li>
</ul>


<p>文字描述：</p>

<ul>
<li>如果不制定排序的标准，则默认是升序。升序用<code>asc</code>表示，默认可以不写</li>
<li>为一个字段制定的排序标准并不会对另一个字段产生影响</li>
<li>强烈建议为每一个字段都指定排序的标准</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 023 查询-06 Null 的用法 --- 没有值 空值]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/17/SQL-Learning-023-Query-06-null-usage/"/>
    <updated>2016-10-17T01:48:03+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/17/SQL-Learning-023-Query-06-null-usage</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<blockquote><p>本篇博客里面使用了 <code>scott</code> 库，如何你现在还没有添加这个库到你的服务器里面，请在查看本篇博客前，访问<a href="http://www.aobosir.com/blog/2016/10/16/SQL-Learning-016-how-to-attach-a-database/">这篇博文</a>来在你的服务器里面附加<code>scott</code>库。</p></blockquote>

<hr />

<h2><code>null</code> &mdash; 没有值、空值</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">--null不能参与&lt;&gt; != = 运算</span>
</span><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">comm</span> <span class="o">&lt;&gt;</span> <span class="k">null</span><span class="p">;</span> <span class="c1">--输出为空 error</span>
</span><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emo</span> <span class="k">where</span> <span class="n">comm</span> <span class="o">!=</span> <span class="k">null</span><span class="p">;</span> <span class="c1">--输出为空 error</span>
</span><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">comm</span> <span class="o">=</span> <span class="k">null</span><span class="p">;</span> <span class="c1">--输出为空 error</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">--null 可以参与is 、 not is </span>
</span><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">comm</span> <span class="k">is</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--输出奖金为空的员工的信息</span>
</span><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">comm</span> <span class="k">is</span> <span class="k">not</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--输出奖金不为空的员工的信息</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">--任何类型的数据都允许为null</span>
</span><span class='line'><span class="k">create</span> <span class="k">table</span> <span class="n">t1</span> <span class="p">(</span><span class="n">name</span> <span class="n">nvachar</span><span class="p">(</span><span class="mi">20</span><span class="p">),</span> <span class="n">cnt</span> <span class="nb">int</span><span class="p">,</span> <span class="n">riqi</span> <span class="n">datetime</span><span class="p">)</span>
</span><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">t1</span> <span class="k">values</span> <span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">t1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">--输出每一个员工的姓名、年薪（包含了奖金）、comm假设是一年的奖金</span>
</span><span class='line'><span class="k">select</span> <span class="n">ename</span><span class="p">,</span> <span class="n">sal</span><span class="o">*</span><span class="mi">12</span><span class="o">+</span><span class="n">comm</span> <span class="ss">&quot;年薪&quot;</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--这段指令证明了：null不能参与任何数学运算，结果永远是null</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">--正确的写法</span>
</span><span class='line'><span class="k">select</span> <span class="n">ename</span><span class="p">,</span> <span class="n">sal</span><span class="o">*</span><span class="mi">12</span><span class="o">+</span><span class="k">isnull</span><span class="p">(</span><span class="n">comm</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--isnull(comm, 0) 如果comm是null，就返回为0，否则返回comm的值。</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p><strong>总结：</strong></p>

<ul>
<li><code>0</code> 和 <code>null</code> 是不一样的，<code>null</code> 表示空值，没有值，<code>0</code>表示一个确定的值</li>
<li><code>null</code> 不能参与如下运算：<code>&lt;&gt;</code>、<code>!=</code>、<code>=</code></li>
<li><code>null</code> 可以参与如下运算：<code>is</code>、<code>not is</code></li>
<li>任何类型的数据都允许为<code>null</code></li>
<li>null不能参与任何数学运算，结果永远是null</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 022 查询-05 Top 的用法 --- 最前面的若干个记录]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/17/SQL-Learning-022-Query-05-top-usage/"/>
    <updated>2016-10-17T00:55:57+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/17/SQL-Learning-022-Query-05-top-usage</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<blockquote><p>本篇博客里面使用了 <code>scott</code> 库，如何你现在还没有添加这个库到你的服务器里面，请在查看本篇博客前，访问<a href="http://www.aobosir.com/blog/2016/10/16/SQL-Learning-016-how-to-attach-a-database/">这篇博文</a>来在你的服务器里面附加<code>scott</code>库。</p></blockquote>

<hr />

<h2><code>top</code> &mdash;  输出最前面的若干个记录</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">top</span> <span class="mi">5</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--输出从emp表的上面数，前5个元组</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-022-Query-05-top-usage/1476636796825.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">top</span> <span class="mi">15</span> <span class="n">percent</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--输出从emp表的上面数，15%的元组。（输出的是3个，不是2个）</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-022-Query-05-top-usage/1476636830654.png" alt="Alt text" /></p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 021 查询-04 in 的用法 --- 属于若干个孤立的值]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/17/SQL-Learning-021-Query-04-in-the-usage/"/>
    <updated>2016-10-17T00:39:00+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/17/SQL-Learning-021-Query-04-in-the-usage</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<blockquote><p>本篇博客里面使用了 <code>scott</code> 库，如何你现在还没有添加这个库到你的服务器里面，请在查看本篇博客前，访问<a href="http://www.aobosir.com/blog/2016/10/16/SQL-Learning-016-how-to-attach-a-database/">这篇博文</a>来在你的服务器里面附加<code>scott</code>库。</p></blockquote>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">sal</span> <span class="k">in</span> <span class="p">(</span><span class="mi">1500</span><span class="p">,</span> <span class="mi">3000</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-021-Query-04-in-the-usage/1476635565178.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">sal</span> <span class="k">in</span> <span class="p">(</span><span class="mi">1500</span><span class="p">,</span> <span class="mi">3000</span><span class="p">,</span> <span class="mi">5000</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">--把sal里面是1500 和 3000 和 5000 的值都输出</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-021-Query-04-in-the-usage/1476635600379.png" alt="Alt text" /></p>

<p>上面的命令等价于：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span>
</span><span class='line'>  <span class="k">where</span> <span class="n">sal</span><span class="o">=</span><span class="mi">1500</span> <span class="k">or</span> <span class="n">sal</span><span class="o">=</span><span class="mi">3000</span> <span class="k">or</span> <span class="n">sal</span><span class="o">=</span><span class="mi">5000</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">sal</span> <span class="k">not</span> <span class="k">in</span> <span class="p">(</span><span class="mi">1500</span><span class="p">,</span> <span class="mi">3000</span><span class="p">,</span> <span class="mi">5000</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-021-Query-04-in-the-usage/1476635684012.png" alt="Alt text" /></p>

<p>上面的命令等价于：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span>
</span><span class='line'>  <span class="k">where</span> <span class="n">sal</span><span class="o">&lt;&gt;</span><span class="mi">1500</span> <span class="k">and</span> <span class="n">sal</span><span class="o">&lt;&gt;</span><span class="mi">3000</span> <span class="k">and</span> <span class="n">sal</span><span class="o">&lt;&gt;</span><span class="mi">5000</span>
</span><span class='line'>      <span class="c1">--在数据库中 不等号有两种表示： != 和 &lt;&gt; ，推荐使用第二种</span>
</span><span class='line'>      <span class="c1">--对或（or）取反是并且（and） 对并且（and）取反是或（or）</span>
</span></code></pre></td></tr></table></div></figure>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 020 查询-03 Between 的用法]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/17/SQL-Learning-020-Query-03-between-usage/"/>
    <updated>2016-10-17T00:20:53+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/17/SQL-Learning-020-Query-03-between-usage</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<blockquote><p>本篇博客里面使用了 <code>scott</code> 库，如何你现在还没有添加这个库到你的服务器里面，请在查看本篇博客前，访问<a href="http://www.aobosir.com/blog/2016/10/16/SQL-Learning-016-how-to-attach-a-database/">这篇博文</a>来在你的服务器里面附加<code>scott</code>库。</p></blockquote>

<hr />

<h2><code>between</code> 的用法</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">--查找工资在1500到3000之间（包括1500和3000）的所有的员工的信息</span>
</span><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span>
</span><span class='line'>  <span class="k">where</span> <span class="n">sal</span><span class="o">&gt;=</span><span class="mi">1500</span> <span class="k">and</span> <span class="n">sal</span><span class="o">&lt;=</span><span class="mi">300</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-020-Query-03-between-usage/1476634590985.png" alt="Alt text" /></p>

<hr />

<p>上面的指令等价于：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span>
</span><span class='line'>  <span class="k">where</span> <span class="n">sal</span> <span class="k">between</span> <span class="mi">1500</span> <span class="k">and</span> <span class="mi">3000</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">--查找工资在小于1500或大于3000之间的所有的员工的信息</span>
</span><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span>
</span><span class='line'>  <span class="k">where</span> <span class="n">sal</span><span class="o">&lt;</span><span class="mi">1500</span> <span class="k">or</span> <span class="n">sal</span><span class="o">&gt;</span><span class="mi">3000</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-17-SQL-Learning-020-Query-03-between-usage/1476634665094.png" alt="Alt text" /></p>

<hr />

<p>上面的指令等价于：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span>
</span><span class='line'>  <span class="k">where</span> <span class="n">sal</span> <span class="k">not</span> <span class="k">between</span> <span class="mi">1500</span> <span class="k">and</span> <span class="mi">3000</span>
</span></code></pre></td></tr></table></div></figure>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 019 查询-02 Distinct 的用法 --- 不允许重复]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-019-Query-02-distinct-usage-not-allowed-to-repeat/"/>
    <updated>2016-10-16T21:10:52+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-019-Query-02-distinct-usage-not-allowed-to-repeat</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<blockquote><p>本篇博客里面使用了 <code>scott</code> 库，如何你现在还没有添加这个库到你的服务器里面，请在查看本篇博客前，访问<a href="http://www.aobosir.com/blog/2016/10/16/SQL-Learning-016-how-to-attach-a-database/">这篇博文</a>来在你的服务器里面附加<code>scott</code>库。</p></blockquote>

<hr />

<h2><code>distinct</code> 的用法</h2>

<p><code>distinct</code> 的意思是：不允许重复。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">deptno</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">-- 14行记录 不是3行记录</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-019-Query-02-distinct-usage-not-allowed-to-repeat/1476623018150.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="mi">10000</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">-- 也是14行记录</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-019-Query-02-distinct-usage-not-allowed-to-repeat/1476623063142.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">distinct</span> <span class="n">deptno</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--distince deptno 会过滤掉重复的deptno</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-019-Query-02-distinct-usage-not-allowed-to-repeat/1476623127746.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">distinct</span> <span class="n">comm</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--distince 也可以过滤掉重复的null。或者说如果有多个null，只输出一个</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-019-Query-02-distinct-usage-not-allowed-to-repeat/1476623177137.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">distinct</span> <span class="n">comm</span><span class="p">,</span> <span class="n">deptno</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--把 comm 和 deptno 的组合进行过滤</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-019-Query-02-distinct-usage-not-allowed-to-repeat/1476623219322.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">deptno</span><span class="p">,</span> <span class="k">distinct</span> <span class="n">comm</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--error 逻辑上有冲突</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行输出错误：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="err">消息</span> <span class="mi">156</span><span class="err">，级别</span> <span class="mi">15</span><span class="err">，状态</span> <span class="mi">1</span><span class="err">，第</span> <span class="mi">11</span> <span class="err">行</span>
</span><span class='line'><span class="err">关键字</span> <span class="s1">&#39;distinct&#39;</span> <span class="err">附近有语法错误。</span>
</span></code></pre></td></tr></table></div></figure>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 018 查询-01 计算列 的用法]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-018-Query-01-calculated-column-usage/"/>
    <updated>2016-10-16T20:15:30+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-018-Query-01-calculated-column-usage</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<blockquote><p>本篇博客里面使用了 <code>scott</code> 库，如何你现在还没有添加这个库到你的服务器里面，请在查看本篇博客前，访问<a href="http://www.aobosir.com/blog/2016/10/16/SQL-Learning-016-how-to-attach-a-database/">这篇博文</a>来在你的服务器里面附加<code>scott</code>库。</p></blockquote>

<hr />

<h2>计算列</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">-- * 表示所有的</span>
</span><span class='line'>  <span class="c1">-- * from emp 表示从emp表查询</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行输出：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-018-Query-01-calculated-column-usage/1476619600875.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">empno</span><span class="p">,</span> <span class="n">ename</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">-- 将员工表里面所有员工的 empno 和 ename 都输出出来</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行输出：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-018-Query-01-calculated-column-usage/1476619649220.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">ename</span><span class="p">,</span> <span class="n">sal</span><span class="o">*</span><span class="mi">12</span> <span class="k">as</span> <span class="ss">&quot;年薪&quot;</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">-- as 可以省略。 记住：&quot;年薪&quot; 不要写成 &#39;年薪&#39; 、也不要写成 年薪</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行输出：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-018-Query-01-calculated-column-usage/1476619727923.png" alt="Alt text" /></p>

<p><strong>注意：</strong> ： 在<strong>Oracle</strong>软件中字段的别名不允许用单引号括起来。但是 <strong>SQL Server</strong> 软件却允许，因此为了兼容性考虑，最好字段的别名用<code>""</code>（双引号）括起来，不要使用<code>''</code>（单引号）。</p>

<p>上面这段命令 <code>select ename, sal*12 as "年薪" from emp</code> 就是计算列。解释：原本 <code>emp</code> 表里面没有 年薪 这个属性，我们使用 <code>sal*12 as "年薪"</code> 得到年薪的信息，这就是 <strong>计算列</strong>。</p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="mi">5</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">-- ok，可以运行</span>
</span><span class='line'>  <span class="c1">--输出的行数是emp表的行数，每行只有一个字段，值是5</span>
</span><span class='line'>  <span class="c1">-- 5 就是一个值，仅此而已，没有实际意义</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行输出：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-018-Query-01-calculated-column-usage/1476619771628.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">--ok，可以运行</span>
</span><span class='line'>  <span class="c1">--但是不推荐</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行输出：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-018-Query-01-calculated-column-usage/1476619797016.png" alt="Alt text" /></p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">ename</span><span class="p">,</span> <span class="n">sal</span><span class="o">*</span><span class="mi">12</span> <span class="k">as</span> <span class="ss">&quot;年薪&quot;</span><span class="p">,</span> <span class="n">sal</span> <span class="ss">&quot;月薪&quot;</span><span class="p">,</span> <span class="n">job</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行输出：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-018-Query-01-calculated-column-usage/1476619867716.png" alt="Alt text" /></p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 017 查询-00 介绍 Scott 例子库]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-017-Query-00-Introdiction-scott-Sample-Library/"/>
    <updated>2016-10-16T19:40:10+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-017-Query-00-Introdiction-scott-Sample-Library</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<p>我们要查数据，总先得有数据要查吧，所以我们需要先找一个例子库。<strong>Orale</strong>软件里面就有一个例子库，这个库很经典，就是：<code>scott</code> 库。</p>

<h2>附加 <code>scott</code> 库</h2>

<p>如何添加一个 <code>scott</code> 数据库 到服务器中，请参考<a href="http://www.aobosir.com/blog/2016/10/16/SQL-Learning-016-how-to-attach-a-database/">这个网站</a>。</p>

<hr />

<h2>介绍 <code>scott</code> 库</h2>

<p>要想查询一个表，第一件事情就必须十分了解一个库里面所有的表 和 表与表之间的关系。</p>

<p>这个 <code>scott</code> 库里面一共有三个表：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-017-Query-00-Introdiction-scott-Sample-Library/1476616454316.png" alt="Alt text" /></p>

<hr />

<p>先看看 <code>emp</code> 表（<strong>员工表</strong>）</p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-017-Query-00-Introdiction-scott-Sample-Library/1476616536461.png" alt="Alt text" /></p>

<p>员工表里面有8个属性：</p>

<p><code>EMPNO</code>（员工编号）、<code>ename</code>（姓名）、<code>job</code>（职称）、<code>mgr</code>（上级编号）、<code>hiredate</code>（雇佣日期）、<code>sal</code>（工资）、<code>comm</code>（奖金）、<code>deptno</code>（部门编号）。</p>

<p>里面 <code>job</code> 属性里面的英文单词翻译：</p>

<ul>
<li><strong>CLERK</strong> ：普通职员</li>
<li><strong>SALESMAN</strong> ：销售人员</li>
<li><strong>MANAGER</strong> ：经理</li>
<li><strong>ANALYST</strong> ：研究人员</li>
<li><strong>PRESIDENT</strong> ：总统</li>
</ul>


<hr />

<p>现在我们看看 <code>dept</code> 表 （<strong>部门表</strong>）：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-017-Query-00-Introdiction-scott-Sample-Library/1476617073131.png" alt="Alt text" /></p>

<p>部门表里面有3个属性：<code>deptno</code>（部门编号）、<code>dname</code>（部门名称）、<code>loc</code>（地址）。</p>

<hr />

<p>在看看最后一个表：<code>SALGRAGE</code> 表。（这个<strong>表</strong>表示的是<strong>工资的等级</strong>表。）</p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-017-Query-00-Introdiction-scott-Sample-Library/1476617149867.png" alt="Alt text" /></p>

<p><code>SALGRADE</code> 表里面有3个属性：<code>GRADE</code>（等级）、<code>LOSAL</code>（下限）、<code>HISAL</code>（上限）。</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 016 如何附加数据库]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-016-how-to-attach-a-database/"/>
    <updated>2016-10-16T19:06:49+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-016-how-to-attach-a-database</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<p><strong>scott</strong> 例子库可以在下面的链接中下载：
（百度云）</p>

<p>链接：<a href="http://pan.baidu.com/s/1sl9zbm1">http://pan.baidu.com/s/1sl9zbm1</a> 密码：<code>nyly</code></p>

<p>这个例子库可以通过 <strong>附加</strong> 的方式添加到 <strong>SQL Server</strong> 软件里面。（这个例子很经典。<strong>SQL Server</strong>软件 和 <code>Orale</code> 软件 都可以使用到这个例子库。）</p>

<h2>添加 <code>scott</code> 库 到<strong>SQL Server</strong> 软件</h2>

<p><strong>Step 1 . </strong> 鼠标右键点击 <strong>数据库</strong> -> <strong>附加(A)&hellip;</strong></p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-016-how-to-attach-a-database/1476610765494.png" alt="Alt text" /></p>

<p><strong>Step 2 . </strong></p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-016-how-to-attach-a-database/1476610825463.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-016-how-to-attach-a-database/1476610863975.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-016-how-to-attach-a-database/1476610918053.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-016-how-to-attach-a-database/1476610933947.png" alt="Alt text" /></p>

<blockquote><p>如果你遇到下面的问题，请访问<a href="http://www.aobosir.com/blog/2016/10/16/SQL-Solve-problem-Microsoft-SQL-Server-error-5120/">这个网站</a>解决问题。</p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-016-how-to-attach-a-database/1476610946090.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-016-how-to-attach-a-database/1476612674466.png" alt="Alt text" /></p></blockquote>

<p>成功添加：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-016-how-to-attach-a-database/1476615669199.png" alt="Alt text" /></p>

<hr />

<h2>搞定</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 解决问题：无法打开物理文件 "XXX.mdf"。操作系统错误 5:"5(拒绝访问。)"。 (Microsoft SQL Server，错误: 5120) --- 附加数据库时出错。有关详细信息，请单击“消息”列中的超链接。]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/16/SQL-Solve-problem-Microsoft-SQL-Server-error-5120/"/>
    <updated>2016-10-16T18:52:33+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/16/SQL-Solve-problem-Microsoft-SQL-Server-error-5120</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<h2>出现的问题</h2>

<p>在你 <strong>附加</strong>  一个外部数据库到服务器上是，出现下面的错误：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Solve-problem-Microsoft-SQL-Server-error-5120/1476612776678.png" alt="Alt text | center" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Solve-problem-Microsoft-SQL-Server-error-5120/1476612808460.png" alt="Alt text | center" /></p>

<hr />

<h2>解决办法</h2>

<ol>
<li><p>找到要附加的<code>.mdf</code>文件&mdash;&mdash;&mdash;>右键&mdash;&mdash;&mdash;>属性&mdash;&mdash;&mdash;>安全&mdash;&mdash;&mdash;>选择当前用户&mdash;&mdash;&mdash;>编辑&mdash;&mdash;&mdash;>完全控制。</p>

<ul>
<li><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Solve-problem-Microsoft-SQL-Server-error-5120/1476613072444.png" alt="Alt text" /></li>
<li><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Solve-problem-Microsoft-SQL-Server-error-5120/1476613183163.png" alt="Alt text" /></li>
</ul>
</li>
<li><p>对.<code>log</code>文件进行相同的处理。</p></li>
</ol>


<hr />

<h2>搞定</h2>

<hr />

<p>参考网站：</p>

<p><a href="http://blog.csdn.net/justdb/article/details/8457487">http://blog.csdn.net/justdb/article/details/8457487</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 015 开始学习查询 查询综述]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-015-getting-started-query-query-summary/"/>
    <updated>2016-10-16T17:28:06+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-015-getting-started-query-query-summary</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<p><strong>查询</strong> 是数据库里面最重要的知识点，而且知识点很多，下面我们将<strong>查询</strong>的知识点先列出来：</p>

<ol>
<li><code>scott</code> 表介绍（例子表）</li>
<li>计算列</li>
<li><code>distinct</code></li>
<li><code>between</code></li>
<li><code>in</code></li>
<li><code>top</code></li>
<li><code>null</code></li>
<li><code>order by</code></li>
<li>模糊查询</li>
<li>聚合函数</li>
<li><code>group by</code></li>
<li><code>having</code></li>
<li>链接查询

<ul>
<li>定义</li>
<li>分类

<ul>
<li>内连接</li>
<li>外连接</li>
<li>完全连接</li>
<li>交叉连接</li>
<li>字连接</li>
<li>联合</li>
</ul>
</li>
</ul>
</li>
<li>嵌套查询（<code>orale</code> 中讲）</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 014 外键的具体定义 设计外键要注意的问题]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-014-foreign-key-specific-definition-and-attention/"/>
    <updated>2016-10-16T17:12:56+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-014-foreign-key-specific-definition-and-attention</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<h2>外键的具体定义</h2>

<p>如果一个表中的若干个字段是来自另外若干个表的主键或唯一键，则这若干个字段就是外键。（我们讲<a href="http://www.aobosir.com/blog/2016/10/14/SQL-Learning-011-relationship-one-to-one-one-to-many-many-to-many/">多对多</a>的时候，一个表里面就有两个外键。）</p>

<h2>设计外键要注意的问题</h2>

<ul>
<li>外键通常是来自另外表的主键而不是唯一（<code>unique</code>）键，因为唯一键可能为<code>null</code>。</li>
<li>外键不一定是来自另外的表，也可能来自本表的主键</li>
<li>含有外键的表叫外键表，外键字段来自的那一张表叫做主键表</li>
</ul>


<hr />

<h2>问题：</h2>

<p><strong>Q：</strong> 先删除主键表还是先删除外键表？</p>

<p><strong>A：</strong> 先删除外键表，再删主键表。如果先删除主键表，会报错，因为这会导致外键表中的数据引用失效。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 013 主键的具体定义 设计主键要注意的问题]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-013-primary-key-specific-definition-and-attention/"/>
    <updated>2016-10-16T16:50:11+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-013-primary-key-specific-definition-and-attention</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<h2>主键的具体定义</h2>

<p>能够唯一标识一个事物的一个字段或者多个字段的组合，被称为主键</p>

<hr />

<h2>设计主键要注意的问题</h2>

<ul>
<li>含有主键的表叫做主键表</li>
<li>主键通常都是整数，不建议使用字符串为主键。（如果主键是用于集群式服务（指跨数据库服务，比如：跨行转账），才可以考虑用字符串当主键。）</li>
<li>主键的值通常都不允许 修改，除非本记录被删除</li>
<li>主键不要定义成<code>id</code>，而要定义成<code>表名id</code> 或者 <code>表名_id</code></li>
<li>要用代理主键，不要用业务主键

<ul>
<li>任何一张表，强烈建议不要使用业务含义的字段充当主键，我们通常都是在表中单独添加一个整型的编号充当主键字段。</li>
</ul>
</li>
</ul>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 012 数据库关系图]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-012-database-diagram/"/>
    <updated>2016-10-16T15:47:58+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/16/SQL-Learning-012-database-diagram</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<p>我们现在写一个 多对多关系的表：（这段代码你可以在<a href="http://www.aobosir.com/blog/2016/10/14/SQL-Learning-011-relationship-one-to-one-one-to-many-many-to-many/">这篇博文</a>里面看到它的代码解释。）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">--班级表</span>
</span><span class='line'><span class="k">create</span> <span class="k">table</span> <span class="n">banji</span>
</span><span class='line'><span class="p">(</span>
</span><span class='line'>  <span class="n">banji_id</span> <span class="nb">int</span> <span class="k">primary</span> <span class="k">key</span><span class="p">,</span>
</span><span class='line'>  <span class="n">banji_num</span> <span class="nb">int</span> <span class="k">not</span> <span class="k">null</span><span class="p">,</span>
</span><span class='line'>  <span class="n">banji_name</span> <span class="n">nvarchar</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">--教师</span>
</span><span class='line'><span class="k">create</span> <span class="k">table</span> <span class="n">jiaoshi</span>
</span><span class='line'><span class="p">(</span>
</span><span class='line'>  <span class="n">jiaoshi_id</span> <span class="nb">int</span> <span class="k">primary</span> <span class="k">key</span><span class="p">,</span>
</span><span class='line'>  <span class="n">jiaoshi_name</span> <span class="n">nvarchar</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">--第三张表：用来模拟班级和教师的关系</span>
</span><span class='line'><span class="k">create</span> <span class="k">table</span> <span class="n">banji_jiaoshi_mapping</span>
</span><span class='line'><span class="p">(</span>
</span><span class='line'>  <span class="n">banji_id</span> <span class="nb">int</span> <span class="k">constraint</span> <span class="n">fk_banji_id</span> <span class="k">foreign</span> <span class="k">key</span> <span class="k">references</span> <span class="n">banji</span><span class="p">(</span><span class="n">bianji_id</span><span class="p">),</span>
</span><span class='line'>  <span class="n">jiaoshi_id</span> <span class="nb">int</span> <span class="k">foreign</span> <span class="k">key</span> <span class="k">references</span> <span class="n">jiaoshi</span><span class="p">(</span><span class="n">jiaoshi_id</span><span class="p">),</span>
</span><span class='line'>  <span class="n">kecheng</span> <span class="n">nvarchar</span><span class="p">(</span><span class="mi">20</span><span class="p">),</span>
</span><span class='line'>  <span class="k">constraint</span> <span class="n">pk_banji_id_jiaoshi_id</span> <span class="k">primary</span> <span class="k">key</span> <span class="p">(</span><span class="n">banji_id</span><span class="p">,</span> <span class="n">jiaoshi_id</span><span class="p">,</span> <span class="n">kecheng</span><span class="p">)</span>
</span><span class='line'>  
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>虽然，现在我们已经将表与表之间的关系都建好了。但是我现在怎么才能知道他们之间的关系到底有没有见好啊。
<strong>SQL Server</strong> 为我们提供了另外一个工具：<strong>数据库关系图</strong>。</p>

<p>我们新建一个：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-012-database-diagram/1476602645224.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-16-SQL-Learning-012-database-diagram/1476602656133.png" alt="Alt text" /></p>

<p>外键添加到多的一方。</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 011 关系、一对一、一对多、多对多]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/14/SQL-Learning-011-relationship-one-to-one-one-to-many-many-to-many/"/>
    <updated>2016-10-14T21:18:48+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/14/SQL-Learning-011-relationship-one-to-one-one-to-many-many-to-many</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<h2>什么是关系</h2>

<p>定义：</p>

<ul>
<li>表和表之间的联系。</li>
</ul>


<p>实现方式：</p>

<ul>
<li>通过设置不同形式的外键来体现表和表的不同关系。</li>
</ul>


<h2>关系的分类（假设是A表和B表）</h2>

<h2>第一种分类： 一对一  （详述一对一关系及其实现）</h2>

<p> （一对一，几乎不使用。所以，我们就一句话带过。）</p>

<p>一对一的实现：既可以把表A的主键充当表B的外键，也可以把表B的主键充当表A的外键。</p>

<p>一对多 和 多对多 才是我们学习的重点。</p>

<h2>第二种分类：一对多   （详述一对多关系及其实现）</h2>

<p>一对多事怎么实现的？</p>

<p>表A（一）与表B（多）（我们现在希望，表A中的一条记录对应表B中的多条记录）之间要是有关系，就必须要有外键。把表A的主键添加到表B里面，充当表B的外键。</p>

<p>一对多的实现：在多的一方的表里面，添加外键。</p>

<h2>第三种分类：多对多 （详述多对多关系及其实现）</h2>

<p>现实中，什么事物和什么事物之间是多对多的关系？</p>

<p>班级和老师的关系。（一个班级有很多老师上课，一个老师可以去很多班级上课。）</p>

<p>多对多其实就是：一对多 和 多对一 的一个组合。</p>

<p>多对多的实现：多对多 必须要通过单独的一张表来表示。</p>

<ul>
<li>班级是一张表</li>
<li>教师是一张表</li>
<li>班级和教师的关系也是一张表</li>
</ul>


<p>用一个实例来解释 多对多。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">--班级表</span>
</span><span class='line'><span class="k">create</span> <span class="k">table</span> <span class="n">banji</span>
</span><span class='line'><span class="p">(</span>
</span><span class='line'>  <span class="n">banji_id</span> <span class="nb">int</span> <span class="k">primary</span> <span class="k">key</span><span class="p">,</span>
</span><span class='line'>  <span class="n">banji_num</span> <span class="nb">int</span> <span class="k">not</span> <span class="k">null</span><span class="p">,</span>
</span><span class='line'>  <span class="n">banji_name</span> <span class="n">nvarchar</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">--教师</span>
</span><span class='line'><span class="k">create</span> <span class="k">table</span> <span class="n">jiaoshi</span>
</span><span class='line'><span class="p">(</span>
</span><span class='line'>  <span class="n">jiaoshi_id</span> <span class="nb">int</span> <span class="k">primary</span> <span class="k">key</span><span class="p">,</span>
</span><span class='line'>  <span class="n">jiaoshi_name</span> <span class="n">nvarchar</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">--第三张表：用来模拟班级和教师的关系</span>
</span><span class='line'><span class="k">create</span> <span class="k">table</span> <span class="n">banji_jiaoshi_mapping</span>
</span><span class='line'><span class="p">(</span>
</span><span class='line'>  <span class="n">banji_id</span> <span class="nb">int</span> <span class="k">constraint</span> <span class="n">fk_banji_id</span> <span class="k">foreign</span> <span class="k">key</span> <span class="k">references</span> <span class="n">banji</span><span class="p">(</span><span class="n">bianji_id</span><span class="p">),</span>
</span><span class='line'>  <span class="n">jiaoshi_id</span> <span class="nb">int</span> <span class="k">foreign</span> <span class="k">key</span> <span class="k">references</span> <span class="n">jiaoshi</span><span class="p">(</span><span class="n">jiaoshi_id</span><span class="p">),</span>
</span><span class='line'>  <span class="n">kecheng</span> <span class="n">nvarchar</span><span class="p">(</span><span class="mi">20</span><span class="p">),</span>
</span><span class='line'>  <span class="k">constraint</span> <span class="n">pk_banji_id_jiaoshi_id</span> <span class="k">primary</span> <span class="k">key</span> <span class="p">(</span><span class="n">banji_id</span><span class="p">,</span> <span class="n">jiaoshi_id</span><span class="p">,</span> <span class="n">kecheng</span><span class="p">)</span>
</span><span class='line'>  
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>解释代码：</p>

<p>其中<code>banji_id int constraint fk_banji_id foreign key references banji(bianji_id),</code> 代码中的 <code>fk_banji_id</code> 是约束的名字，<code>foreign key references banji(bianji_id)</code> 指的是：当前这个表里面的 <code>banji_id</code> 属性是来自 <code>banji</code> 表的主键 <code>banji_id</code>，也就是说：当前表中的 <code>banji_id</code> 是一个外键（<code>foreign key</code>）。</p>

<p>其中<code>jiaoshi_id int foreign key references jiaoshi(jiaoshi_id),</code>里面，这里没有命名约束的名字，约束的名字可以省略不写，所以这里没有写也没有问题。同理上面那句代码。</p>

<p>其中<code>constraint pk_banji_id_jiaoshi_id primary key (banji_id, jiaoshi_id, kecheng)</code>中的 <code>pk_banji_id_jiaoshi_id</code> 这个是约束的名字。<code>primary key (banji_id, jiaoshi_id, kecheng)</code> 是设置<code>jiaoshi_id</code> 和 <code>banji_id</code>  和 <code>kecheng</code> 三个属性的组合是一个<strong>主键</strong>（<code>primary key</code>）。</p>

<p>现在<strong>执行</strong>，生成了3个表。</p>

<p>现在我们在这3个表里面插入数据。</p>

<p><strong>banji</strong></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-SQL-Learning-011-relationship-one-to-one-one-to-many-many-to-many/1476450660605.png" alt="Alt text" /></p>

<p><strong>jiaoshi</strong></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-SQL-Learning-011-relationship-one-to-one-one-to-many-many-to-many/1476450683275.png" alt="Alt text" /></p>

<p><strong>banji_jiaoshi_mapping</strong></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-SQL-Learning-011-relationship-one-to-one-one-to-many-many-to-many/1476450197120.png" alt="Alt text" /></p>

<p>都不会有错误，说明多对多生成成功。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EDA Learning 001 （Windows系统 软件安装） Quartus II 9.0正式版下载、安装、破解详细图解]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/14/EDA-Learning-001-QuartusII-90-software-download-install-crack/"/>
    <updated>2016-10-14T11:33:46+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/14/EDA-Learning-001-QuartusII-90-software-download-install-crack</id>
    <content type="html"><![CDATA[<hr />

<p>一共三步：下载、安装、破解。</p>

<h2>一 . 下载</h2>

<p><a href="ftp://ftp.altera.com/outgoing/release/">Quartus II 9.0正式版</a>。下载地址：<a href="ftp://ftp.altera.com/outgoing/release/90_quartus_windows.exe">ftp://ftp.altera.com/outgoing/release/90_quartus_windows.exe</a></p>

<blockquote><p>Quartus II 是Altera公司的综合性PLD/FPGA开发软件，原理图、VHDL、VerilogHDL以及AHDL（Altera Hardware 支持Description Language）等多种设计输入形式，内嵌自有的综合器以及仿真器，可以完成从设计输入到硬件配置的完整PLD设计流程。</p></blockquote>

<p><a href="http://download.csdn.net/detail/snzigod/3773166">Quartus_II_9.0_SP2破解器.exe、Quartus_II_9.0破解器.exe、Quartus_II_9.1破解器.exe</a></p>

<p>当你下载<strong>破解器</strong>软件的时候，电脑会判断这个文件是病毒，电脑会自动删除这个文件，导致你无法下载这个文件。
解决办法就是将杀毒软件和电脑自带的杀毒软件关闭，即可。</p>

<p><strong>Windows 10</strong> 关闭自动杀毒：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474283996339.png" alt="Alt text" /></p>

<p>关闭下面这一项：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474284016890.png" alt="Alt text" /></p>

<h2>二 . 安装</h2>

<p>双击运行，先是解压：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474278644162.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474278728866.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474278737223.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474278765103.png" alt="Alt text" /></p>

<p>安装到默认路径就可以：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474278784253.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474278793439.png" alt="Alt text" /></p>

<p>安装：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474278803589.png" alt="Alt text" /></p>

<p>确定信息：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474278816638.png" alt="Alt text" /></p>

<p>正在安装：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474278841380.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474279490381.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474279506171.png" alt="Alt text" /></p>

<p>完成：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474279510464.png" alt="Alt text" /></p>

<p>让其自动关闭。</p>

<h2>三 . 破解</h2>

<p>双击启动：<strong>Quartus_II_9.0破解器.exe</strong> 。点击 <strong>应用补丁</strong></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474280706147.png" alt="Alt text" /></p>

<p>点击 <strong>是</strong></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474280762103.png" alt="Alt text" /></p>

<blockquote><p>如果直接把该破解器Copy到C:\altera\90\quartus\bin下，就不会出现这个对话框，而是直接开始破解！</p></blockquote>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474280847144.png" alt="Alt text" /></p>

<p>破解后，生成一个 <code>license.DAT</code> 文件，保存它（license文件存放的路径名称不能包含汉字和空格，空格可以用下划线代替。）</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474280894953.png" alt="Alt text" /></p>

<p>搞定： 点击 <strong>退出</strong> 即可。</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474280939390.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474281007873.png" alt="Alt text" /></p>

<p>记事本打开它：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474281188304.png" alt="Alt text" /></p>

<p>查看电脑的 <strong>IP</strong> 地址。在 <strong>DOS</strong> 窗口中执行  <code>ipconfig  /all</code>  命令：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474282104125.png" alt="Alt text" /></p>

<p>把 <strong>license.dat</strong> 里的两个XXXXXXXXXXXX 用您的物理地址替换。保存文件。</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474282227305.png" alt="Alt text" /></p>

<hr />

<h2>破解完成。</h2>

<h2>四 . 启动 软件</h2>

<p>一共安装了两个 <strong>Quartus II</strong> 软件，一个32位的 一个是64位的。我们只能破解32位的，64位的那个就不要使用了。</p>

<p>双击 运行 32位的这个 <strong>Quartus II</strong> 软件：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474283601830.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474282695283.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474282962497.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474282992516.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474283003725.png" alt="Alt text" /></p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474283024488.png" alt="Alt text" /></p>

<h1>大功告成</h1>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474283051006.png" alt="Alt text" /></p>

<h1>Over</h1>

<p>为了防止不合格的破解流行，影响客户的正常使用，我们在启动画面中加入了“Altera中国区代理――骏龙科技有限公司”的防伪字样，客户启动时可以看到这行汉字。</p>

<p>重新启动软件，你只要看到下面的启动画面，那么久说明破解已经成功的。</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474283525105.png" alt="Alt text" /></p>

<p>只不过，每次启动的时候，都会出现这么这个窗口，没有关系，你只需要选择第3个选项：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474283718224.png" alt="Alt text" /></p>

<p>在点击 <strong>OK</strong>，就可以：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-14-EDA-Learning-001-QuartusII-90-software-download-install-crack/1474283758095.png" alt="Alt text" /></p>

<h1>Over</h1>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL 数据库 学习 010 表和约束的区别、check约束、default约束、unique约束、not Null约束]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/13/SQL-Learning-010-differences-tables-contraints-check-default-unique-not-null/"/>
    <updated>2016-10-13T12:40:11+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/13/SQL-Learning-010-differences-tables-contraints-check-default-unique-not-null</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>我的电脑系统：<strong>Windows  10</strong> 64位</li>
<li><strong>SQL Server</strong> 软件版本： <strong>SQL Server 2014 Express</strong></li>
</ul>


<hr />

<h2>表和约束的区别</h2>

<ul>
<li>数据库是通过表来解决事物的存储问题的。</li>
<li>数据库是用过约束来解决事物取值的有效性和合法性的问题。</li>
<li>建表的过程就是指定事物属性及其事物属性各种约束的过程。</li>
</ul>


<hr />

<h2>check 约束</h2>

<p>意义：保证事物属性的取值在合法的范围之内。</p>

<p>我们先创建一个表：（建表之前，先确保选中了指定的库）</p>

<p><img src="http://aobojaing.github.io/images/2016-10-13-SQL-Learning-010-differences-tables-contraints-check-default-unique-not-null/1476251551513.png" alt="Alt text" /></p>

<p>点击 <strong>新建查询</strong> 按钮。输入下面的指令来新建一个带有<code>check</code> 约束的学生表：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">create</span> <span class="k">table</span> <span class="n">student</span>
</span><span class='line'><span class="p">(</span>
</span><span class='line'>  <span class="n">stu_id</span> <span class="nb">int</span> <span class="k">primary</span> <span class="k">key</span><span class="p">,</span>
</span><span class='line'>  <span class="n">stu_sal</span> <span class="nb">int</span> <span class="k">check</span> <span class="p">(</span><span class="n">stu_sal</span><span class="o">&gt;=</span><span class="mi">1000</span> <span class="k">and</span> <span class="n">stu_sal</span><span class="o">&lt;=</span><span class="mi">8000</span><span class="p">)</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>现在，选中，然后点击执行。</p>

<p>现在刷新右侧栏<code>test</code>库的 <strong>表</strong> ，就可以看到刚刚建的学生表：</p>

<p><img src="http://aobojaing.github.io/images/2016-10-13-SQL-Learning-010-differences-tables-contraints-check-default-unique-not-null/1476251700453.png" alt="Alt text" /></p>

<p>接下来是，向这个表里面插数据：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student</span> <span class="k">values</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1000</span><span class="p">)</span>
</span><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student</span> <span class="k">values</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">10000</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>这就是所谓的第4代语言。全都是命令，你不需要知道它里面是如何实现的。这就是第4代编程语言。</p></blockquote>

<p>现在<code>student(2)</code> 的工资已经超出了约束。如果你现在选中这两行命令。点击 <strong>执行</strong>，就会出现错误。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="err">消息</span> <span class="mi">547</span><span class="err">，级别</span> <span class="mi">16</span><span class="err">，状态</span> <span class="mi">0</span><span class="err">，第</span> <span class="mi">8</span> <span class="err">行</span>
</span><span class='line'><span class="k">INSERT</span> <span class="err">语句与</span> <span class="k">CHECK</span> <span class="err">约束</span><span class="ss">&quot;CK__student__stu_sal__1A14E395&quot;</span><span class="err">冲突。该冲突发生于数据库</span><span class="ss">&quot;test&quot;</span><span class="err">，表</span><span class="ss">&quot;dbo.student&quot;</span><span class="p">,</span> <span class="k">column</span> <span class="s1">&#39;stu_sal&#39;</span><span class="err">。</span>
</span><span class='line'><span class="err">语句已终止。</span>
</span></code></pre></td></tr></table></div></figure>


<p>这就是 <code>check</code> 约束。</p>

<hr />

<h2>default约束</h2>

<p>意义：保证事物的属性一定会有一个值。</p>

<p>我们还是写 学生表。我们先把上面新建的学生表先删除掉。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">create</span> <span class="k">table</span> <span class="n">student</span>
</span><span class='line'><span class="p">(</span>
</span><span class='line'>  <span class="n">stu_id</span> <span class="nb">int</span> <span class="k">primary</span> <span class="k">key</span><span class="p">,</span>
</span><span class='line'>  <span class="n">stu_sal</span> <span class="nb">int</span> <span class="k">check</span> <span class="p">(</span><span class="n">stu_sal</span><span class="o">&gt;=</span><span class="mi">1000</span> <span class="k">and</span> <span class="n">stu_sal</span><span class="o">&lt;=</span><span class="mi">8000</span><span class="p">),</span>
</span><span class='line'>  <span class="n">stu_sex</span> <span class="k">nchar</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">default</span> <span class="p">(</span><span class="s1">&#39;男&#39;</span><span class="p">)</span> <span class="c1">--()可以省略。在数据库中字符串是必须用&#39;&#39;括起来的</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里简单的解释一下：<code>''</code> 和 <code>""</code> 在数据库里面有什么区别？</p>

<p><strong>A：</strong> <code>''</code> 就是表示一个字符串；<code>""</code> 就是表示一个数据的名字。（比如：为某一个事物去一个名字，用<code>""</code>。表的名字、约束的名字、列的名字、计算列的名字、临时表的名字。总之，只要是为一个事物取一个名字，就是：<code>""</code>。）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student</span><span class="p">(</span><span class="n">stu_id</span><span class="p">,</span> <span class="n">stu_sal</span><span class="p">)</span> <span class="k">values</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1000</span><span class="p">)</span>
</span><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student</span> <span class="k">values</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">6000</span><span class="p">,</span> <span class="s1">&#39;女&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>选中这两行，点击 <strong>执行</strong> 按钮。</p>

<p><img src="http://aobojaing.github.io/images/2016-10-13-SQL-Learning-010-differences-tables-contraints-check-default-unique-not-null/1476254095140.png" alt="Alt text" /></p>

<blockquote><p><code>insert into student values (3, 2000)</code> 这样的命令是会报错的。因为表里面有3列值，你只输入了2列的数据。所以如果你想要让 <code>stu_sex</code> 使用默认值，必须要要这样写：<code>insert into student(stu_id, stu_sal) values (1, 1000)</code>，指定你赋值的两列。</p></blockquote>

<hr />

<h2>unique（唯一）约束</h2>

<p>意义：它保证了事物的属性的取值不允许重复，但是允许为空。</p>

<p>它都唯一了，那它和主键还有什么区别啊？</p>

<p><code>unique（唯一）约束</code> 和 <code>允许为空</code> 是可以组合使用的。而 <code>主键</code> 和 <code>允许为空</code> 是不能组合使用的。</p>

<p>（<strong>不允许为空</strong>（<code>not null</code>）都可以和<code>unique（唯一）约束</code>、 <code>主键</code>  组合使用。）</p>

<p> 表里的项，如果不设置为 <code>not null</code> ，默认是：<strong>允许为空</strong> 的。</p>

<p>创建表：学生表2</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">create</span> <span class="k">table</span> <span class="n">student2</span>
</span><span class='line'><span class="p">(</span>
</span><span class='line'>  <span class="n">stu_id</span> <span class="nb">int</span> <span class="k">primary</span> <span class="k">key</span><span class="p">,</span>
</span><span class='line'>  <span class="n">stu_sal</span> <span class="nb">int</span> <span class="k">check</span> <span class="p">(</span><span class="n">stu_sal</span><span class="o">&gt;=</span><span class="mi">1000</span> <span class="k">and</span> <span class="n">stu_sal</span><span class="o">&lt;=</span><span class="mi">8000</span><span class="p">),</span>
</span><span class='line'>  <span class="n">stu_sex</span> <span class="k">nchar</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">default</span> <span class="p">(</span><span class="s1">&#39;男&#39;</span><span class="p">),</span> <span class="c1">--()可以省略。在数据库中字符串是必须用&#39;&#39;括起来的</span>
</span><span class='line'>  <span class="n">stu_name</span> <span class="n">nvarchar</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span> <span class="k">unique</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们执行下面的指令就会出错。因为 <code>stu_name</code> 项是有唯一约束的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student2</span> <span class="n">vaules</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2000</span><span class="p">,</span> <span class="s1">&#39;男&#39;</span><span class="p">,</span> <span class="s1">&#39;张三&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student2</span> <span class="n">vaules</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4000</span><span class="p">,</span> <span class="s1">&#39;男&#39;</span><span class="p">,</span> <span class="s1">&#39;张三&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们执行下面的命令不会出错：（因为：<code>unique（唯一）约束</code> 和 <code>允许为空</code> 是可以组合使用的。）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student2</span> <span class="k">values</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">6000</span><span class="p">,</span> <span class="s1">&#39;男&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果我们执行下面的指令，就会出错：（因为，主键是不允许为空的。）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student2</span> <span class="k">values</span> <span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="mi">6000</span><span class="p">,</span> <span class="s1">&#39;女&#39;</span><span class="p">,</span> <span class="s1">&#39;王麻子&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果现在再插入一个为空的元组，就会出错：（错误时：重复）</p>

<p>（唯一约束不允许重复，但唯一约束允许为空，但是只允许其中有一列为空。）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">insert</span> <span class="k">into</span> <span class="n">student2</span> <span class="k">values</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">6000</span><span class="p">,</span> <span class="s1">&#39;男&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p><strong>Q：</strong> <code>unique（唯一）约束</code> 是否 允许多列为 <code>空</code>?</p>

<p><strong>A：</strong>
在 <strong>SQL Server</strong> 软件只允许一个 <code>unique</code> 列为空；
<code>Oracle</code> 允许多个 <code>unique</code> 列为空。</p>

<hr />

<h2>如何合理的利用主键和唯一约束建表</h2>

<p>一个比较重要的问题：
<strong>Q：</strong> 唯一约束 和 主键 有什么区别？如何辨别？如何合理的利用主键和唯一约束建表？</p>

<p><strong>A：</strong></p>

<p>我们上网的时候，经常要登录，有些网站使用用户名，有的还可以使用邮箱登录。邮箱或者用户名，是唯一的。但不能使用它来当主键，我们不能使用业务信息当主键，因为用户名和邮箱是可以修改的。主键永远不可以修改。因为主键不但是本表的主键，而可能是其他表的外键，如果主键改变了，那么其他表的外键也要修改。所以，这个唯一键和主键的第一个区别。</p>

<p>第二区别，主键一遍最好使用数字，不要使用字符串。使用数字为主键，查新速度非常快，相比使用字符串。所以不能使用有实际意义的字符串当主键。再说一次：不要使用业务逻辑（虽然它也是不允许重复的，比如用户名和邮箱）当主键，要使用没有实际意义的编号当主键。（如果数据量太大，可能主键里面还需要加一下字母。）</p>

<p>主键最好不直接录入，我们最好使用 <code>identity</code> 关键字，让其自动增长，自动生成主键。（不使用业务逻辑当主键，使用代理主键（就是编号）当主键）</p>

<hr />

<h2>什么是<code>not null</code> 约束 以及 其 <code>not null</code> 约束与 <code>default</code> 约束的异同</h2>

<p>我认为 <code>not null</code>  就是一个约束。它要求用户必须得为该属性赋一个值，否则语法出错！</p>

<p>如果一个字段不写<code>null</code> ，也不写 <code>not null</code> ，则默认是  <code>null</code> ，即默认允许为空，用户可以不给该字段赋值。</p>

<p>如果用户没有为该字段赋值，则该字段的值默认是 <code>null</code>。</p>

<p>要注意 <code>nul</code> 和 <code>default</code> 的区别。</p>

<ul>
<li>相同点：都允许用户不赋值</li>
<li>不同点：<code>null</code> 修饰的字段如果用户不赋值则默认是<code>null</code>；<code>default</code> 修饰的字段如果用户不赋值则默认是<code>default</code> 指定的那个值。</li>
</ul>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 搭建静态博客站点 --- 为站点侧边栏添加分类列表（Categories）]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/12/octopress-build-static-blog-site-add-categories-list-for-site-sidebar/"/>
    <updated>2016-10-12T16:15:13+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/12/octopress-build-static-blog-site-add-categories-list-for-site-sidebar</id>
    <content type="html"><![CDATA[<hr />

<p>一共三步，很简单。跟着走就可以。</p>

<hr />

<p><strong>Step 1 . </strong>  增加 <code>category_list</code> 插件</p>

<p>在 <code>octopress\plugins\</code> 文件夹里面，新建一个文件，取名为：<code>category_list_tag.rb</code>。并将下面的代码粘贴到里面。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>module Jekyll
</span><span class='line'>  class CategoryListTag &lt; Liquid::Tag
</span><span class='line'>    def render(context)
</span><span class='line'>      html = ""
</span><span class='line'>      categories = context.registers[:site].categories.keys
</span><span class='line'>      categories.sort.each do |category|
</span><span class='line'>        posts_in_category = context.registers[:site].categories[category].size
</span><span class='line'>        category_dir = context.registers[:site].config['category_dir']
</span><span class='line'>        category_url = File.join(category_dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase)
</span><span class='line'>        html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='http://aobojaing.github.io/#{category_url}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
</span><span class='line'>      end
</span><span class='line'>      html
</span><span class='line'>    end
</span><span class='line'>  end
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>Liquid::Template.register_tag('category_list', Jekyll::CategoryListTag)</span></code></pre></td></tr></table></div></figure>


<p>这个插件会向<code>liquid</code>注册一个名为<code>category_list</code>的<code>tag</code>，该<code>tag</code>就是以<code>li</code>的形式将站点所有的<code>category</code>组织起来。如果要将<code>category</code>加入到侧边导航栏，需要增加一个<code>aside</code>。</p>

<hr />

<p><strong>Step 2 . </strong> 增加 <code>aside</code></p>

<p>在 <code>octopress\source\_includes\asides\</code> 文件夹里面，新建一个文件，取名为：<code>category_list.html</code> 。并粘贴下面的代码：</p>

<p><strong>注意：</strong> 去掉 <code>%</code> 前面的 <code>\</code>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h1&gt;</span>Categories<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">&quot;categories&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      {\% category_list \%}
</span><span class='line'>  <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p><strong>Step 3 . </strong> 在 <code>_config.yml</code> 文件里面 ，修改 <code>default_asides</code> 项</p>

<p>打开 <code>octopress\_config.yml</code> 文件，修改里面的 <code>default_asides</code> 项，将 <code>asides/category_list.html</code> 添加进去。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>default_asides: [asides/category_list.html, ......]
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>搞定</h2>

<p>现在，我们执行 <code>rake generate</code> 命令来生成最新的博客站点。然后执行 <code>rake preview</code> 命令在本地预览博客站点。 看看修改后的效果。</p>

<p><img src="http://aobojaing.github.io/images/2016-10-12-octopress-build-static-blog-site-add-categories-list-for-site-sidebar/1476259852727.png" alt="Alt text" /></p>

<hr />

<hr />

<p>参考网站：</p>

<p>为octopress添加分类(category)列表
<a href="http://codemacro.com/2012/07/18/add-category-list-to-octopress/">http://codemacro.com/2012/07/18/add-category-list-to-octopress/</a></p>
]]></content>
  </entry>
  
</feed>
