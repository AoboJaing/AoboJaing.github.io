<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Auto Control | AoboSir 我可以...]]></title>
  <link href="http://aobojaing.github.io/tags/auto-control/atom.xml" rel="self"/>
  <link href="http://aobojaing.github.io/"/>
  <updated>2016-10-25T20:32:32+08:00</updated>
  <id>http://aobojaing.github.io/</id>
  <author>
    <name><![CDATA[Aobo Jaing]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Auto Control 000 自动控制原理 为什么要学]]></title>
    <link href="http://aobojaing.github.io/blog/2016/10/25/Auto-Control-000-Principle-of-automatic-control-Why-Learn/"/>
    <updated>2016-10-25T19:16:06+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/10/25/Auto-Control-000-Principle-of-automatic-control-Why-Learn</id>
    <content type="html"><![CDATA[<hr />

<blockquote><p>无论是学什么技术，你第一件事情就要搞清楚：为什么要学它；学它可以解决那些问题。</p></blockquote>

<h2>为什么要学习 自动控制原理</h2>

<p>如果你做个平衡车或者四轴飞机或者倒立摆，你肯定会使用<strong>PID</strong>控制函数，它很神奇吧，没错，它就是最简单的自动控制原理其中的一个原理。</p>

<p>如果你停留在PID的程度，你会觉得控制就是调参数；学了极点配置之后，你起码对稳定性有了理解；学了lqr之后，你对怎么处理扰动、怎么track referance有了理解；学了mpc之后，你就会怎么处理约束；学了robust和adaptive时候，你懂得uncertainty怎么处理；而现在的control研究已经进展到与传统control完全不同的程度。比如：机器人这种十几个自由度的非线性系统如何稳定，如何让它稳定地走路。</p>

<blockquote><p>我现在所知道的就是这些，&mdash; 2016年10月25日 &mdash; 不断完善中&hellip;。</p></blockquote>

<p>我们接下来都是学习经典自动控制原理。而我学它的目的是：做机器人、替代人力机器。</p>

<p><img src="http://nviki1.qiniudn.com/wp-content/uploads/2015/06/095350a5fc9fd60.gif" alt="Alt Image" /></p>

<p><img src="/images/2016-10-25-Auto-Control-000-Principle-of-automatic-control-Why-Learn/1477392429765.png" alt="Alt text" /></p>

<p>既然决心要学，那定会认真的学。</p>

<hr />

<p>图片来源于：<a href="http://www.acznw.com/archives/13854.html">http://www.acznw.com/archives/13854.html</a></p>
]]></content>
  </entry>
  
</feed>
