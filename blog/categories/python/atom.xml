<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | AoboSir 博客]]></title>
  <link href="http://aobojaing.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://aobojaing.github.io/"/>
  <updated>2016-12-25T15:27:32+08:00</updated>
  <id>http://aobojaing.github.io/</id>
  <author>
    <name><![CDATA[Aobo Jaing]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Learning Python 008 正则表达式-006 正则表达式中如果有换行，代码要怎么写]]></title>
    <link href="http://aobojaing.github.io/blog/2016/12/08/python-Regular-Expressions-Line-feed/"/>
    <updated>2016-12-08T07:24:18+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/12/08/python-Regular-Expressions-Line-feed</id>
    <content type="html"><![CDATA[<hr />

<h2>开发环境</h2>

<ul>
<li>Python第三方库：lxml、Twisted、pywin32、scrapy</li>
<li>Python 版本：python-3.5.0-amd64</li>
<li>PyCharm软件版本：pycharm-professional-2016.1.4</li>
<li>电脑系统：Windows 10 64位</li>
</ul>


<p>如果你还没有搭建好开发环境，请到<a href="http://www.aobosir.com/blog/2016/11/26/python3-large-web-crawler-001-Build-development-environment/">这篇博客</a>。</p>

<hr />

<p>当我在使用正则表达式去提取网页源代码中的有效数据的时候。发现：我要提取的有效数据所需要使用的正则表达式中有换行。那么这个时候，正则表达式要怎么写？</p>

<p>目标网站：<a href="http://blog.csdn.net/github_35160620/article/details/53512977">http://blog.csdn.net/github_35160620/article/details/53512977</a></p>

<p>要提取的有效信息：访问的数量</p>

<p><img src="/images/2016-12-8-python-Regular-Expressions-Line-feed/1481152435523.png" alt="Alt text" /></p>

<p>查看网页源代码：</p>

<p><img src="/images/2016-12-8-python-Regular-Expressions-Line-feed/1481152530825.png" alt="Alt text" /></p>

<p>所以，如果我们想提取出访问数量，需要使用的正则表达式中会存在换行：</p>

<pre><code>'''&lt;dt class="item"&gt;(.^?)&lt;/dt&gt;
            &lt;dd class="item_name"&gt;访问'''
</code></pre>

<p>但是这样是不能匹配到结果。而正确的正则表达式是下面这样的：</p>

<pre><code>'&lt;dt class="item"&gt;(.*?)&lt;/dt&gt;\r\n            &lt;dd class="item_name"&gt;访问'
</code></pre>

<blockquote><p>使用转义字符 <code>\r\n</code> 来表示换行。</p></blockquote>

<p>代码：</p>

<pre><code>    def next(self, response):
        pattam_visits = '&lt;dt class="item"&gt;(.*?)&lt;/dt&gt;\r\n            &lt;dd class="item_name"&gt;访问'
        # print('response.body type is ', type(response.body))
        # print('response.body.decode type is ', type(response.body.decode('utf-8', 'ignore')))

        body_data = response.body.decode('utf-8', 'ignore') # .replace(u'\xa9', u'')
        visits = re.compile(pattam_visits).findall(body_data)[0]
        print('当前访问量为：', visits)
        print('-------------------')
        pass
</code></pre>

<blockquote><p><code>compile()</code> 函数的使用方法<a href="http://www.aobosir.com/blog/2016/12/08/python-compile-Regular-Expressions-pattam/">在这里</a>可以了解。</p></blockquote>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Python 008 正则表达式-005 Compile模板的使用]]></title>
    <link href="http://aobojaing.github.io/blog/2016/12/08/python-compile-Regular-Expressions-pattam/"/>
    <updated>2016-12-08T07:05:09+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/12/08/python-compile-Regular-Expressions-pattam</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>使用的电脑系统：Windows 10 64位</li>
<li>使用的开发集成环境：PyCharm 2016.1.4</li>
<li>使用的Python的版本：python 2.7.10 和 python 3.5.0</li>
</ul>


<hr />

<h2>compile()函数的用法</h2>

<pre><code class="python">import re
str = 'fdfgdrthxxi--gdfgexxlove--dsdfwesdxxyou--dfgdf'
pattam_str = 'xx(.*?)--'
result = re.compile(pattam_str).findall(str)
print(result)
</code></pre>

<p>运行：</p>

<pre><code>&gt;python learningpython29.py
['i', 'love', 'you']
</code></pre>

<p>解释：</p>

<ul>
<li>其中<code>pattam_str</code> 就是<strong>正则表达式</strong>字符串。</li>
<li><code>str</code> 就是目标字符串</li>
<li><code>result</code> 就是得到的结果</li>
</ul>


<p>代码中的</p>

<pre><code class="python">result = re.compile(pattam_str).findall(str)
print(result)
</code></pre>

<p>等价于：</p>

<pre><code class="python">result = re.findall(pattam_str, str)
</code></pre>

<p>运行输出的结果是一样的。</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Python 028 获取命令行参数]]></title>
    <link href="http://aobojaing.github.io/blog/2016/12/02/python-get-command-line-arguments/"/>
    <updated>2016-12-02T02:07:35+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/12/02/python-get-command-line-arguments</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>使用的电脑系统：Windows 10 64位</li>
<li>使用的开发集成环境：PyCharm 2016.1.4</li>
<li>使用的Python的版本：python2.7.10 或者 python 3.5.0</li>
</ul>


<hr />

<blockquote><p>本博文对Python2和Python3都适用。</p></blockquote>

<hr />

<pre><code class="python">import optparse

def main():
    parser = optparse.OptionParser('usage%prog ' +\
                                   '-f &lt;zipfile&gt; -d &lt;dictionary&gt;')
    parser.add_option('-f', dest='zname', type='string',\
                      help='specify zip file')
    parser.add_option('-d', dest='dname', type='string',\
                      help='specify dictionary file')
    (options, args) = parser.parse_args()
    if (options.zname == None) | (options.dname == None):
        print(parser.usage)
        exit(0)
        pass
    else:
        zname = options.zname
        dname = options.dname
        dlist = dname.split(',')
        pass
    print('zname is ', zname)
    print('dname is ', dname)
    print('dlist is ', dlist)
    pass

if __name__ == '__main__':
    main()
    pass
</code></pre>

<p>Python3 的运行结果：</p>

<pre><code>&gt;python learningpython28.py -f aobo  -d sir,patty,re
zname is  aobo
dname is  sir,patty,re
dlist is  ['sir', 'patty', 're']
</code></pre>

<p>Python2 的运行结果：</p>

<pre><code>&gt;C:\Python27\python.exe learningpython28.py -f aobo -d sir,patty,re
('zname is ', 'aobo')
('dname is ', 'sir,patty,re')
('dlist is ', ['sir', 'patty', 're'])
</code></pre>

<p>下面这个几个命令运行的效果是一样的：（Python2 和 Python3 运行的效果都一样）</p>

<pre><code>&gt;python learningpython28.py -h
&gt;python learningpython28.py --h
&gt;python learningpython28.py --help
&gt;python learningpython28.py -help
</code></pre>

<p>运行结果：</p>

<pre><code>Usage: usagelearningpython28.py -f &lt;zipfile&gt; -d &lt;dictionary&gt;

Options:
  -h, --help  show this help message and exit
  -f ZNAME    specify zip file
  -d DNAME    specify dictionary file
</code></pre>

<hr />

<h2>注意：如果传入的参数是<code>string</code>类型的，最好使用<code>""</code> 引上</h2>

<p>为什么？ 因为字符串里面难免可能会有 <code></code> （空格），所以，最好使用<code>""</code>（双引号）引上。</p>

<pre><code>&gt;python learningpython28.py -f "aobo fd g" -d "ava,dssd,hg"
zname is  aobo fd g
dname is  ava,dssd,hg
dlist is  ['ava', 'dssd', 'hg']
</code></pre>

<p>如果你用单引号或者不用引号，虽然说运行不会报错，但是运行的结果就不是你想要的。</p>

<pre><code>&gt;python learningpython28.py -f 'aobo fd g' -d 'ava,dssd,hg'
zname is  'aobo
dname is  'ava,dssd,hg'
dlist is  ["'ava", 'dssd', "hg'"]
</code></pre>

<pre><code>&gt;python learningpython28.py -f aobo fd g -d ava,dssd,hg
zname is  aobo
dname is  ava,dssd,hg
dlist is  ['ava', 'dssd', 'hg']
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Python 026 字符串连接]]></title>
    <link href="http://aobojaing.github.io/blog/2016/12/01/python-string-join/"/>
    <updated>2016-12-01T19:03:50+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/12/01/python-string-join</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>使用的电脑系统：Windows 10 64位</li>
<li>使用的开发集成环境：PyCharm 2016.1.4</li>
<li>使用的Python的版本：python2.7.10 或者 python 3.5.0</li>
</ul>


<hr />

<blockquote><p>本博文对Python2和Python3都适用。</p></blockquote>

<hr />

<p>参考网站：<a href="http://www.cnblogs.com/huangcong/archive/2011/08/29/2158268.html">Python 字符串操作（string替换、删除、截取、复制、连接、比较、查找、包含、大小写转换、分割等）</a></p>

<pre><code class="python"># -!- coding: utf-8 -!-

path = r'D:\WorkSpace\test_ws\笔记\text.md'
delimiter = '\\'

mylist = path.split(delimiter)
res_path = delimiter.join(mylist[:-1])
# res_path = res_path.decode('utf-8').encode('GB18030') # 如果是适用python2在windows系统上运行，需要将这样注释去掉，否则你会得到中文乱码
print(res_path)
</code></pre>

<p>运行输出：</p>

<pre><code>D:\WorkSpace\test_ws\笔记
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Python 027 解决错误：SyntaxError: Non-UTF-8 Code Starting With '\xc8' in File xxxx.py]]></title>
    <link href="http://aobojaing.github.io/blog/2016/12/01/SyntaxError-Non-UTF-8-code-starting-with-in-file/"/>
    <updated>2016-12-01T17:37:34+08:00</updated>
    <id>http://aobojaing.github.io/blog/2016/12/01/SyntaxError-Non-UTF-8-code-starting-with-in-file</id>
    <content type="html"><![CDATA[<hr />

<ul>
<li>使用的电脑系统：Windows 10 64位</li>
<li>使用的开发集成环境：PyCharm 2016.1.4</li>
<li>使用的Python的版本：python2.7.10 或者 python 3.5.0</li>
</ul>


<hr />

<blockquote><p>本博文对Python2和Python3都适用。</p></blockquote>

<hr />

<p>出现这个错误，是因为<code>xxxx.py</code> 文件里面有中文字符。</p>

<p>解决办法：在文件第一行，加上下面的代码：</p>

<pre><code class="python"># -!- coding: utf-8 -!-
</code></pre>
]]></content>
  </entry>
  
</feed>
